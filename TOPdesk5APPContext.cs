using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace TopDeskApiv2.TopDeskDatabase
{
    public partial class TOPdesk5APPContext : DbContext
    {
        public virtual DbSet<Actiedoor> Actiedoor { get; set; }
        public virtual DbSet<ActiedoorDocumenten> ActiedoorDocumenten { get; set; }
        public virtual DbSet<ActiedoorEmailberichten> ActiedoorEmailberichten { get; set; }
        public virtual DbSet<Actiedoorlink> Actiedoorlink { get; set; }
        public virtual DbSet<ActiedoorLogboek> ActiedoorLogboek { get; set; }
        public virtual DbSet<ActiedoorMemoHistory> ActiedoorMemoHistory { get; set; }
        public virtual DbSet<ActiedoorOptionalgrid> ActiedoorOptionalgrid { get; set; }
        public virtual DbSet<ActiedoorPicture> ActiedoorPicture { get; set; }
        public virtual DbSet<Afdeling> Afdeling { get; set; }
        public virtual DbSet<Afhandelingstatus> Afhandelingstatus { get; set; }
        public virtual DbSet<Appliedshift> Appliedshift { get; set; }
        public virtual DbSet<Appointment> Appointment { get; set; }
        public virtual DbSet<AppointmentDocumenten> AppointmentDocumenten { get; set; }
        public virtual DbSet<AppointmentEmailberichten> AppointmentEmailberichten { get; set; }
        public virtual DbSet<AppointmentLogboek> AppointmentLogboek { get; set; }
        public virtual DbSet<Archiefreden> Archiefreden { get; set; }
        public virtual DbSet<ArtikelBestelLink> ArtikelBestelLink { get; set; }
        public virtual DbSet<ArtikelLeverancierLink> ArtikelLeverancierLink { get; set; }
        public virtual DbSet<ArtikelMutatie> ArtikelMutatie { get; set; }
        public virtual DbSet<Artikelmutatiereden> Artikelmutatiereden { get; set; }
        public virtual DbSet<Artikelstatus> Artikelstatus { get; set; }
        public virtual DbSet<ArtikelVoorraadLink> ArtikelVoorraadLink { get; set; }
        public virtual DbSet<Attentie> Attentie { get; set; }
        public virtual DbSet<Availabilitycheck> Availabilitycheck { get; set; }
        public virtual DbSet<Bestelaanvraag> Bestelaanvraag { get; set; }
        public virtual DbSet<BestelaanvraagArtikelLink> BestelaanvraagArtikelLink { get; set; }
        public virtual DbSet<BestelaanvraagBestellingenLink> BestelaanvraagBestellingenLink { get; set; }
        public virtual DbSet<BestelaanvraagDocumenten> BestelaanvraagDocumenten { get; set; }
        public virtual DbSet<BestelaanvraagEmailberichten> BestelaanvraagEmailberichten { get; set; }
        public virtual DbSet<BestelaanvraagIncidentLink> BestelaanvraagIncidentLink { get; set; }
        public virtual DbSet<BestelaanvraagLogboek> BestelaanvraagLogboek { get; set; }
        public virtual DbSet<Bestellingen> Bestellingen { get; set; }
        public virtual DbSet<BestellingenDocumenten> BestellingenDocumenten { get; set; }
        public virtual DbSet<BestellingenEmailberichten> BestellingenEmailberichten { get; set; }
        public virtual DbSet<BestellingenLogboek> BestellingenLogboek { get; set; }
        public virtual DbSet<Bestelreden> Bestelreden { get; set; }
        public virtual DbSet<Bestelstatus> Bestelstatus { get; set; }
        public virtual DbSet<Bezoeker> Bezoeker { get; set; }
        public virtual DbSet<BezoekerDocumenten> BezoekerDocumenten { get; set; }
        public virtual DbSet<BezoekerEmailberichten> BezoekerEmailberichten { get; set; }
        public virtual DbSet<BezoekerLogboek> BezoekerLogboek { get; set; }
        public virtual DbSet<BezoekerMemoHistory> BezoekerMemoHistory { get; set; }
        public virtual DbSet<Bezoekerparkeerplaats> Bezoekerparkeerplaats { get; set; }
        public virtual DbSet<Bezoekerpass> Bezoekerpass { get; set; }
        public virtual DbSet<BranchDesignation> BranchDesignation { get; set; }
        public virtual DbSet<Branchfilter> Branchfilter { get; set; }
        public virtual DbSet<BranchfilterBranches> BranchfilterBranches { get; set; }
        public virtual DbSet<Branchfiltercache> Branchfiltercache { get; set; }
        public virtual DbSet<BranchfilterOperator> BranchfilterOperator { get; set; }
        public virtual DbSet<BranchMeasurement> BranchMeasurement { get; set; }
        public virtual DbSet<Btw> Btw { get; set; }
        public virtual DbSet<Budgethouder> Budgethouder { get; set; }
        public virtual DbSet<BuildingLevelEpc> BuildingLevelEpc { get; set; }
        public virtual DbSet<BuildingZone> BuildingZone { get; set; }
        public virtual DbSet<Campaign> Campaign { get; set; }
        public virtual DbSet<CampaignDocumenten> CampaignDocumenten { get; set; }
        public virtual DbSet<CampaignEmailberichten> CampaignEmailberichten { get; set; }
        public virtual DbSet<CampaignLogboek> CampaignLogboek { get; set; }
        public virtual DbSet<Campaignmailing> Campaignmailing { get; set; }
        public virtual DbSet<CampaignmailingDocumenten> CampaignmailingDocumenten { get; set; }
        public virtual DbSet<CampaignmailingEmailberichten> CampaignmailingEmailberichten { get; set; }
        public virtual DbSet<Campaignmailinginvitation> Campaignmailinginvitation { get; set; }
        public virtual DbSet<CampaignmailingLogboek> CampaignmailingLogboek { get; set; }
        public virtual DbSet<CampaignmailingMemoHistory> CampaignmailingMemoHistory { get; set; }
        public virtual DbSet<CampaignMemoHistory> CampaignMemoHistory { get; set; }
        public virtual DbSet<Campaignresponse> Campaignresponse { get; set; }
        public virtual DbSet<CartContents> CartContents { get; set; }
        public virtual DbSet<Carts> Carts { get; set; }
        public virtual DbSet<Categoryfilter> Categoryfilter { get; set; }
        public virtual DbSet<Categoryfiltercache> Categoryfiltercache { get; set; }
        public virtual DbSet<CategoryfilterCategory> CategoryfilterCategory { get; set; }
        public virtual DbSet<CategoryfilterOperator> CategoryfilterOperator { get; set; }
        public virtual DbSet<Change> Change { get; set; }
        public virtual DbSet<Changeactivity> Changeactivity { get; set; }
        public virtual DbSet<ChangeactivityDependency> ChangeactivityDependency { get; set; }
        public virtual DbSet<ChangeactivityDocumenten> ChangeactivityDocumenten { get; set; }
        public virtual DbSet<ChangeactivityEmailberichten> ChangeactivityEmailberichten { get; set; }
        public virtual DbSet<ChangeactivityLogboek> ChangeactivityLogboek { get; set; }
        public virtual DbSet<ChangeactivityMemoHistory> ChangeactivityMemoHistory { get; set; }
        public virtual DbSet<ChangeactivityObjectLink> ChangeactivityObjectLink { get; set; }
        public virtual DbSet<Changeactivityorderlink> Changeactivityorderlink { get; set; }
        public virtual DbSet<ChangeactivityRejectionreason> ChangeactivityRejectionreason { get; set; }
        public virtual DbSet<ChangeactivitySkippedreason> ChangeactivitySkippedreason { get; set; }
        public virtual DbSet<ChangeactivityStatus> ChangeactivityStatus { get; set; }
        public virtual DbSet<ChangeActivitytemplate> ChangeActivitytemplate { get; set; }
        public virtual DbSet<ChangeActivitytemplateDocumenten> ChangeActivitytemplateDocumenten { get; set; }
        public virtual DbSet<ChangeActivitytemplateDocuments> ChangeActivitytemplateDocuments { get; set; }
        public virtual DbSet<ChangeActivitytemplateEmailberichten> ChangeActivitytemplateEmailberichten { get; set; }
        public virtual DbSet<ChangeActivitytemplateLogboek> ChangeActivitytemplateLogboek { get; set; }
        public virtual DbSet<ChangeActivitytemplateMemoHistory> ChangeActivitytemplateMemoHistory { get; set; }
        public virtual DbSet<ChangeActOrderreqLink> ChangeActOrderreqLink { get; set; }
        public virtual DbSet<ChangeActTemplDependency> ChangeActTemplDependency { get; set; }
        public virtual DbSet<Changeauthorization> Changeauthorization { get; set; }
        public virtual DbSet<Changebenefit> Changebenefit { get; set; }
        public virtual DbSet<ChangeBranchLink> ChangeBranchLink { get; set; }
        public virtual DbSet<Changecancelreason> Changecancelreason { get; set; }
        public virtual DbSet<ChangeDocumenten> ChangeDocumenten { get; set; }
        public virtual DbSet<Changeduration> Changeduration { get; set; }
        public virtual DbSet<ChangeEmailberichten> ChangeEmailberichten { get; set; }
        public virtual DbSet<ChangeGroup> ChangeGroup { get; set; }
        public virtual DbSet<Changegrouplink> Changegrouplink { get; set; }
        public virtual DbSet<ChangeIncCausedbyLink> ChangeIncCausedbyLink { get; set; }
        public virtual DbSet<ChangeIncidentLink> ChangeIncidentLink { get; set; }
        public virtual DbSet<ChangeLogboek> ChangeLogboek { get; set; }
        public virtual DbSet<ChangeMemoHistory> ChangeMemoHistory { get; set; }
        public virtual DbSet<ChangeObjectLink> ChangeObjectLink { get; set; }
        public virtual DbSet<ChangePersonLink> ChangePersonLink { get; set; }
        public virtual DbSet<ChangePriority> ChangePriority { get; set; }
        public virtual DbSet<ChangePrioritylink> ChangePrioritylink { get; set; }
        public virtual DbSet<ChangeProblemCausedbyLink> ChangeProblemCausedbyLink { get; set; }
        public virtual DbSet<ChangeProblemLink> ChangeProblemLink { get; set; }
        public virtual DbSet<Changerejectionreason> Changerejectionreason { get; set; }
        public virtual DbSet<ChangeTemplActivityLink> ChangeTemplActivityLink { get; set; }
        public virtual DbSet<ChangeTemplate> ChangeTemplate { get; set; }
        public virtual DbSet<ChangeTemplateDocumenten> ChangeTemplateDocumenten { get; set; }
        public virtual DbSet<ChangeTemplateDocuments> ChangeTemplateDocuments { get; set; }
        public virtual DbSet<ChangeTemplateEmailberichten> ChangeTemplateEmailberichten { get; set; }
        public virtual DbSet<Changetemplategrouplink> Changetemplategrouplink { get; set; }
        public virtual DbSet<ChangeTemplateLogboek> ChangeTemplateLogboek { get; set; }
        public virtual DbSet<ChangeTemplateMemoHistory> ChangeTemplateMemoHistory { get; set; }
        public virtual DbSet<Changeversion> Changeversion { get; set; }
        public virtual DbSet<ChangeversionDocumenten> ChangeversionDocumenten { get; set; }
        public virtual DbSet<ChangeversionEmailberichten> ChangeversionEmailberichten { get; set; }
        public virtual DbSet<ChangeversionLogboek> ChangeversionLogboek { get; set; }
        public virtual DbSet<ChangeversionMemoHistory> ChangeversionMemoHistory { get; set; }
        public virtual DbSet<Classificatie> Classificatie { get; set; }
        public virtual DbSet<ClassificatieTranslation> ClassificatieTranslation { get; set; }
        public virtual DbSet<Collectiveagreement> Collectiveagreement { get; set; }
        public virtual DbSet<Configuratie> Configuratie { get; set; }
        public virtual DbSet<ConfiguratieConfiguratieLink> ConfiguratieConfiguratieLink { get; set; }
        public virtual DbSet<ConfiguratieDocumenten> ConfiguratieDocumenten { get; set; }
        public virtual DbSet<ConfiguratieEmailberichten> ConfiguratieEmailberichten { get; set; }
        public virtual DbSet<ConfiguratieLogboek> ConfiguratieLogboek { get; set; }
        public virtual DbSet<ConfiguratieMemoHistory> ConfiguratieMemoHistory { get; set; }
        public virtual DbSet<Connectie> Connectie { get; set; }
        public virtual DbSet<Contracttype> Contracttype { get; set; }
        public virtual DbSet<ConversationsHide> ConversationsHide { get; set; }
        public virtual DbSet<ConversationsLike> ConversationsLike { get; set; }
        public virtual DbSet<ConversationsPost> ConversationsPost { get; set; }
        public virtual DbSet<Dnocontract> Dnocontract { get; set; }
        public virtual DbSet<DnocontractDocumenten> DnocontractDocumenten { get; set; }
        public virtual DbSet<DnocontractEmailberichten> DnocontractEmailberichten { get; set; }
        public virtual DbSet<DnocontractLogboek> DnocontractLogboek { get; set; }
        public virtual DbSet<DnocontractMemoHistory> DnocontractMemoHistory { get; set; }
        public virtual DbSet<Dnocontractperiode> Dnocontractperiode { get; set; }
        public virtual DbSet<Dnocontractsoort> Dnocontractsoort { get; set; }
        public virtual DbSet<Dnocontractstatus> Dnocontractstatus { get; set; }
        public virtual DbSet<Dnocontractverlengperiode> Dnocontractverlengperiode { get; set; }
        public virtual DbSet<DnocontractVestigingLink> DnocontractVestigingLink { get; set; }
        public virtual DbSet<Dnodienst> Dnodienst { get; set; }
        public virtual DbSet<DnodienstDocumenten> DnodienstDocumenten { get; set; }
        public virtual DbSet<DnodienstEmailberichten> DnodienstEmailberichten { get; set; }
        public virtual DbSet<DnodienstLogboek> DnodienstLogboek { get; set; }
        public virtual DbSet<DnodienstMemoHistory> DnodienstMemoHistory { get; set; }
        public virtual DbSet<DnodienstPicture> DnodienstPicture { get; set; }
        public virtual DbSet<Dnodienstsoort> Dnodienstsoort { get; set; }
        public virtual DbSet<Dnolink> Dnolink { get; set; }
        public virtual DbSet<Dnolocationlink> Dnolocationlink { get; set; }
        public virtual DbSet<Dnoobjectlink> Dnoobjectlink { get; set; }
        public virtual DbSet<Doorlooptijd> Doorlooptijd { get; set; }
        public virtual DbSet<Emailbericht> Emailbericht { get; set; }
        public virtual DbSet<Emailberichtbestand> Emailberichtbestand { get; set; }
        public virtual DbSet<Emailberichtkopie> Emailberichtkopie { get; set; }
        public virtual DbSet<EnergyPerformance> EnergyPerformance { get; set; }
        public virtual DbSet<EnvironmentalImpact> EnvironmentalImpact { get; set; }
        public virtual DbSet<Escalatiereden> Escalatiereden { get; set; }
        public virtual DbSet<Extraa> Extraa { get; set; }
        public virtual DbSet<Extraapersoon> Extraapersoon { get; set; }
        public virtual DbSet<Extrab> Extrab { get; set; }
        public virtual DbSet<Extrabpersoon> Extrabpersoon { get; set; }
        public virtual DbSet<Gebeurtenis> Gebeurtenis { get; set; }
        public virtual DbSet<Gebeurtenisfilter> Gebeurtenisfilter { get; set; }
        public virtual DbSet<Gebeurtenishttpactielink> Gebeurtenishttpactielink { get; set; }
        public virtual DbSet<Gebeurtenislogboekactielink> Gebeurtenislogboekactielink { get; set; }
        public virtual DbSet<Gebeurtenismailactielink> Gebeurtenismailactielink { get; set; }
        public virtual DbSet<Gebeurtenistijden> Gebeurtenistijden { get; set; }
        public virtual DbSet<Gebeurtenisuitvoeractielink> Gebeurtenisuitvoeractielink { get; set; }
        public virtual DbSet<Gebeurtenisvelden> Gebeurtenisvelden { get; set; }
        public virtual DbSet<Gebruiker> Gebruiker { get; set; }
        public virtual DbSet<GebruikerDocumenten> GebruikerDocumenten { get; set; }
        public virtual DbSet<GebruikerEmailberichten> GebruikerEmailberichten { get; set; }
        public virtual DbSet<GebruikerLogboek> GebruikerLogboek { get; set; }
        public virtual DbSet<GebruikerMemoHistory> GebruikerMemoHistory { get; set; }
        public virtual DbSet<Gebruikersinstellingen> Gebruikersinstellingen { get; set; }
        public virtual DbSet<Geschiedenis> Geschiedenis { get; set; }
        public virtual DbSet<Geschiedenismutatieredenlink> Geschiedenismutatieredenlink { get; set; }
        public virtual DbSet<Hardware> Hardware { get; set; }
        public virtual DbSet<HardwareDocumenten> HardwareDocumenten { get; set; }
        public virtual DbSet<HardwareEmailberichten> HardwareEmailberichten { get; set; }
        public virtual DbSet<HardwareLicenseLink> HardwareLicenseLink { get; set; }
        public virtual DbSet<HardwareLogboek> HardwareLogboek { get; set; }
        public virtual DbSet<HardwareOptionalgrid> HardwareOptionalgrid { get; set; }
        public virtual DbSet<Herhaling> Herhaling { get; set; }
        public virtual DbSet<Highesteducation> Highesteducation { get; set; }
        public virtual DbSet<HistoricalSite> HistoricalSite { get; set; }
        public virtual DbSet<Httpactie> Httpactie { get; set; }
        public virtual DbSet<Identiteitsbewijs> Identiteitsbewijs { get; set; }
        public virtual DbSet<Idtype> Idtype { get; set; }
        public virtual DbSet<Impact> Impact { get; set; }
        public virtual DbSet<ImportCouple> ImportCouple { get; set; }
        public virtual DbSet<ImportCoupleResult> ImportCoupleResult { get; set; }
        public virtual DbSet<ImportRecordResult> ImportRecordResult { get; set; }
        public virtual DbSet<ImportRun> ImportRun { get; set; }
        public virtual DbSet<ImportRunInfo> ImportRunInfo { get; set; }
        public virtual DbSet<Importsettings> Importsettings { get; set; }
        public virtual DbSet<Incident> Incident { get; set; }
        public virtual DbSet<IncidentDocumenten> IncidentDocumenten { get; set; }
        public virtual DbSet<IncidentEmailberichten> IncidentEmailberichten { get; set; }
        public virtual DbSet<Incidentkennissysteemlink> Incidentkennissysteemlink { get; set; }
        public virtual DbSet<IncidentLogboek> IncidentLogboek { get; set; }
        public virtual DbSet<IncidentMemogeschiedenis> IncidentMemogeschiedenis { get; set; }
        public virtual DbSet<Inkendaal> Inkendaal { get; set; }
        public virtual DbSet<Integration> Integration { get; set; }
        public virtual DbSet<Inventaris> Inventaris { get; set; }
        public virtual DbSet<InventarisDocumenten> InventarisDocumenten { get; set; }
        public virtual DbSet<InventarisEmailberichten> InventarisEmailberichten { get; set; }
        public virtual DbSet<InventarisLogboek> InventarisLogboek { get; set; }
        public virtual DbSet<InventarisOptionalgrid> InventarisOptionalgrid { get; set; }
        public virtual DbSet<KennisSysteem> KennisSysteem { get; set; }
        public virtual DbSet<KennisSysteemDocumenten> KennisSysteemDocumenten { get; set; }
        public virtual DbSet<Kennissysteemklik> Kennissysteemklik { get; set; }
        public virtual DbSet<Kennissysteemreactie> Kennissysteemreactie { get; set; }
        public virtual DbSet<KennissysteemStatus> KennissysteemStatus { get; set; }
        public virtual DbSet<Kennissysteemvertalingen> Kennissysteemvertalingen { get; set; }
        public virtual DbSet<KennissysteemVestigingLink> KennissysteemVestigingLink { get; set; }
        public virtual DbSet<Kennistaal> Kennistaal { get; set; }
        public virtual DbSet<KennisVestigingOperCond> KennisVestigingOperCond { get; set; }
        public virtual DbSet<KennisVestigingPublicCond> KennisVestigingPublicCond { get; set; }
        public virtual DbSet<KostendeclaratieArtikel> KostendeclaratieArtikel { get; set; }
        public virtual DbSet<KostendeclaratieObject> KostendeclaratieObject { get; set; }
        public virtual DbSet<Land> Land { get; set; }
        public virtual DbSet<Ldapsettings> Ldapsettings { get; set; }
        public virtual DbSet<Leverancier> Leverancier { get; set; }
        public virtual DbSet<Leveranciercontactpersoon> Leveranciercontactpersoon { get; set; }
        public virtual DbSet<LeveranciercontactpersoonDocumenten> LeveranciercontactpersoonDocumenten { get; set; }
        public virtual DbSet<LeveranciercontactpersoonEmailberichten> LeveranciercontactpersoonEmailberichten { get; set; }
        public virtual DbSet<LeveranciercontactpersoonLogboek> LeveranciercontactpersoonLogboek { get; set; }
        public virtual DbSet<LeverancierDocumenten> LeverancierDocumenten { get; set; }
        public virtual DbSet<LeverancierEmailberichten> LeverancierEmailberichten { get; set; }
        public virtual DbSet<LeverancierLogboek> LeverancierLogboek { get; set; }
        public virtual DbSet<LeverancierMemoHistory> LeverancierMemoHistory { get; set; }
        public virtual DbSet<Licentie> Licentie { get; set; }
        public virtual DbSet<LicentieDocumenten> LicentieDocumenten { get; set; }
        public virtual DbSet<LicentieEmailberichten> LicentieEmailberichten { get; set; }
        public virtual DbSet<LicentieLogboek> LicentieLogboek { get; set; }
        public virtual DbSet<Licentiesoort> Licentiesoort { get; set; }
        public virtual DbSet<Lmpactivity> Lmpactivity { get; set; }
        public virtual DbSet<LmpactivityDocumenten> LmpactivityDocumenten { get; set; }
        public virtual DbSet<LmpactivityEmailberichten> LmpactivityEmailberichten { get; set; }
        public virtual DbSet<LmpactivityLogboek> LmpactivityLogboek { get; set; }
        public virtual DbSet<LmpactivityMemoHistory> LmpactivityMemoHistory { get; set; }
        public virtual DbSet<Lmpactivitystatus> Lmpactivitystatus { get; set; }
        public virtual DbSet<Lmpcode> Lmpcode { get; set; }
        public virtual DbSet<Lmpindex> Lmpindex { get; set; }
        public virtual DbSet<Lmplink> Lmplink { get; set; }
        public virtual DbSet<LmpOmActivityLink> LmpOmActivityLink { get; set; }
        public virtual DbSet<Lmppattern> Lmppattern { get; set; }
        public virtual DbSet<Lmpplanning> Lmpplanning { get; set; }
        public virtual DbSet<Lmpscenario> Lmpscenario { get; set; }
        public virtual DbSet<LmpscenarioDocumenten> LmpscenarioDocumenten { get; set; }
        public virtual DbSet<LmpscenarioEmailberichten> LmpscenarioEmailberichten { get; set; }
        public virtual DbSet<LmpscenarioLogboek> LmpscenarioLogboek { get; set; }
        public virtual DbSet<LmpscenarioMemoHistory> LmpscenarioMemoHistory { get; set; }
        public virtual DbSet<Lmpscenariostatus> Lmpscenariostatus { get; set; }
        public virtual DbSet<Lmpsubcode> Lmpsubcode { get; set; }
        public virtual DbSet<Lmptype> Lmptype { get; set; }
        public virtual DbSet<Lmpworktype> Lmpworktype { get; set; }
        public virtual DbSet<Locatie> Locatie { get; set; }
        public virtual DbSet<LocatieActiedoorLink> LocatieActiedoorLink { get; set; }
        public virtual DbSet<LocatieDocumenten> LocatieDocumenten { get; set; }
        public virtual DbSet<LocatieEmailberichten> LocatieEmailberichten { get; set; }
        public virtual DbSet<LocatieLogboek> LocatieLogboek { get; set; }
        public virtual DbSet<LocatieMemoHistory> LocatieMemoHistory { get; set; }
        public virtual DbSet<LocatieOptionalgrid> LocatieOptionalgrid { get; set; }
        public virtual DbSet<LocatiePicture> LocatiePicture { get; set; }
        public virtual DbSet<LocatieRuimteopstellingLink> LocatieRuimteopstellingLink { get; set; }
        public virtual DbSet<Logboekactie> Logboekactie { get; set; }
        public virtual DbSet<Mailactie> Mailactie { get; set; }
        public virtual DbSet<Mailactiebestand> Mailactiebestand { get; set; }
        public virtual DbSet<Mailactiekopie> Mailactiekopie { get; set; }
        public virtual DbSet<MailimportChange> MailimportChange { get; set; }
        public virtual DbSet<MailimportIncident> MailimportIncident { get; set; }
        public virtual DbSet<MailimportSettings> MailimportSettings { get; set; }
        public virtual DbSet<MeasurementType> MeasurementType { get; set; }
        public virtual DbSet<Meeting> Meeting { get; set; }
        public virtual DbSet<MeetingChangeactivityLink> MeetingChangeactivityLink { get; set; }
        public virtual DbSet<MeetingChangeLink> MeetingChangeLink { get; set; }
        public virtual DbSet<MeetingDocumenten> MeetingDocumenten { get; set; }
        public virtual DbSet<Meetingduration> Meetingduration { get; set; }
        public virtual DbSet<MeetingEmailberichten> MeetingEmailberichten { get; set; }
        public virtual DbSet<MeetingIncidentLink> MeetingIncidentLink { get; set; }
        public virtual DbSet<MeetingLogboek> MeetingLogboek { get; set; }
        public virtual DbSet<MeetingMemoHistory> MeetingMemoHistory { get; set; }
        public virtual DbSet<MeetingPersonLink> MeetingPersonLink { get; set; }
        public virtual DbSet<MeetingProblemLink> MeetingProblemLink { get; set; }
        public virtual DbSet<MeetingProfacboomProjectLink> MeetingProfacboomProjectLink { get; set; }
        public virtual DbSet<MeetingVersionLink> MeetingVersionLink { get; set; }
        public virtual DbSet<MutatieBestelaanvraag> MutatieBestelaanvraag { get; set; }
        public virtual DbSet<MutatieBestellingen> MutatieBestellingen { get; set; }
        public virtual DbSet<MutatieChange> MutatieChange { get; set; }
        public virtual DbSet<MutatieChangeactivity> MutatieChangeactivity { get; set; }
        public virtual DbSet<MutatieChangeversion> MutatieChangeversion { get; set; }
        public virtual DbSet<MutatieConfiguratie> MutatieConfiguratie { get; set; }
        public virtual DbSet<MutatieDnocontract> MutatieDnocontract { get; set; }
        public virtual DbSet<MutatieDnodienst> MutatieDnodienst { get; set; }
        public virtual DbSet<MutatieHardware> MutatieHardware { get; set; }
        public virtual DbSet<MutatieIncident> MutatieIncident { get; set; }
        public virtual DbSet<MutatieInventaris> MutatieInventaris { get; set; }
        public virtual DbSet<MutatieNetwerkcomponent> MutatieNetwerkcomponent { get; set; }
        public virtual DbSet<MutatieOmActiviteit> MutatieOmActiviteit { get; set; }
        public virtual DbSet<MutatieOmReeks> MutatieOmReeks { get; set; }
        public virtual DbSet<MutatieOmSchema> MutatieOmSchema { get; set; }
        public virtual DbSet<MutatieProbleem> MutatieProbleem { get; set; }
        public virtual DbSet<MutatieProfacboomProject> MutatieProfacboomProject { get; set; }
        public virtual DbSet<Mutatiereden> Mutatiereden { get; set; }
        public virtual DbSet<MutatieReservering> MutatieReservering { get; set; }
        public virtual DbSet<MutatieSoftware> MutatieSoftware { get; set; }
        public virtual DbSet<MutatieTelefonie> MutatieTelefonie { get; set; }
        public virtual DbSet<MutatieVestiging> MutatieVestiging { get; set; }
        public virtual DbSet<MutatieVrij1object> MutatieVrij1object { get; set; }
        public virtual DbSet<MutatieVrij2object> MutatieVrij2object { get; set; }
        public virtual DbSet<MutatieVrij3object> MutatieVrij3object { get; set; }
        public virtual DbSet<MutatieVrij4object> MutatieVrij4object { get; set; }
        public virtual DbSet<MutatieVrij5object> MutatieVrij5object { get; set; }
        public virtual DbSet<Nationality> Nationality { get; set; }
        public virtual DbSet<Netwerkcomponent> Netwerkcomponent { get; set; }
        public virtual DbSet<NetwerkcomponentDocumenten> NetwerkcomponentDocumenten { get; set; }
        public virtual DbSet<NetwerkcomponentEmailberichten> NetwerkcomponentEmailberichten { get; set; }
        public virtual DbSet<NetwerkcomponentLogboek> NetwerkcomponentLogboek { get; set; }
        public virtual DbSet<NetwerkcomponentOptionalgrid> NetwerkcomponentOptionalgrid { get; set; }
        public virtual DbSet<Nummers> Nummers { get; set; }
        public virtual DbSet<ObjConfLink> ObjConfLink { get; set; }
        public virtual DbSet<Object> Object { get; set; }
        public virtual DbSet<Objectmerk> Objectmerk { get; set; }
        public virtual DbSet<ObjectObjectLink> ObjectObjectLink { get; set; }
        public virtual DbSet<ObjectPicture> ObjectPicture { get; set; }
        public virtual DbSet<Objectsoort> Objectsoort { get; set; }
        public virtual DbSet<Objectstatus> Objectstatus { get; set; }
        public virtual DbSet<Objecttype> Objecttype { get; set; }
        public virtual DbSet<ObjIncidentLink> ObjIncidentLink { get; set; }
        public virtual DbSet<ObjPersoongroepLink> ObjPersoongroepLink { get; set; }
        public virtual DbSet<ObjPersoonLink> ObjPersoonLink { get; set; }
        public virtual DbSet<ObjProblemLink> ObjProblemLink { get; set; }
        public virtual DbSet<ObjVestigingLink> ObjVestigingLink { get; set; }
        public virtual DbSet<OmActiviteit> OmActiviteit { get; set; }
        public virtual DbSet<OmActiviteitDocumenten> OmActiviteitDocumenten { get; set; }
        public virtual DbSet<OmActiviteitEmailberichten> OmActiviteitEmailberichten { get; set; }
        public virtual DbSet<OmActiviteitIncidentLink> OmActiviteitIncidentLink { get; set; }
        public virtual DbSet<OmActiviteitLocatieLink> OmActiviteitLocatieLink { get; set; }
        public virtual DbSet<OmActiviteitLogboek> OmActiviteitLogboek { get; set; }
        public virtual DbSet<OmActiviteitMemoHistory> OmActiviteitMemoHistory { get; set; }
        public virtual DbSet<OmActiviteitObjectLink> OmActiviteitObjectLink { get; set; }
        public virtual DbSet<OmActiviteitStatus> OmActiviteitStatus { get; set; }
        public virtual DbSet<OmActiviteitVestigingLink> OmActiviteitVestigingLink { get; set; }
        public virtual DbSet<OmAfwijkingreden> OmAfwijkingreden { get; set; }
        public virtual DbSet<OmGroepering> OmGroepering { get; set; }
        public virtual DbSet<OmRedenoverslaan> OmRedenoverslaan { get; set; }
        public virtual DbSet<OmReeks> OmReeks { get; set; }
        public virtual DbSet<OmReeksDocumenten> OmReeksDocumenten { get; set; }
        public virtual DbSet<OmReeksEmailberichten> OmReeksEmailberichten { get; set; }
        public virtual DbSet<OmReeksLocatieLink> OmReeksLocatieLink { get; set; }
        public virtual DbSet<OmReeksLogboek> OmReeksLogboek { get; set; }
        public virtual DbSet<OmReeksMemoHistory> OmReeksMemoHistory { get; set; }
        public virtual DbSet<OmReeksObjectLink> OmReeksObjectLink { get; set; }
        public virtual DbSet<OmReeksVestigingLink> OmReeksVestigingLink { get; set; }
        public virtual DbSet<OmSchema> OmSchema { get; set; }
        public virtual DbSet<OmSchemaDocumenten> OmSchemaDocumenten { get; set; }
        public virtual DbSet<OmSchemaEmailberichten> OmSchemaEmailberichten { get; set; }
        public virtual DbSet<OmSchemaLogboek> OmSchemaLogboek { get; set; }
        public virtual DbSet<OmSchemaMemoHistory> OmSchemaMemoHistory { get; set; }
        public virtual DbSet<OmSoort> OmSoort { get; set; }
        public virtual DbSet<OmStatus> OmStatus { get; set; }
        public virtual DbSet<Onderhoudsplan> Onderhoudsplan { get; set; }
        public virtual DbSet<Operatorfilter> Operatorfilter { get; set; }
        public virtual DbSet<Operatorfiltercache> Operatorfiltercache { get; set; }
        public virtual DbSet<OperatorfilterGroup> OperatorfilterGroup { get; set; }
        public virtual DbSet<OperatorfilterOperator> OperatorfilterOperator { get; set; }
        public virtual DbSet<OperatorPermissiongroup> OperatorPermissiongroup { get; set; }
        public virtual DbSet<Oplossingen> Oplossingen { get; set; }
        public virtual DbSet<OplossingenDocumenten> OplossingenDocumenten { get; set; }
        public virtual DbSet<OplossingenEmailberichten> OplossingenEmailberichten { get; set; }
        public virtual DbSet<OplossingenLogboek> OplossingenLogboek { get; set; }
        public virtual DbSet<Oplossingsmethode> Oplossingsmethode { get; set; }
        public virtual DbSet<Opslagmedium> Opslagmedium { get; set; }
        public virtual DbSet<Orderrequeststatus> Orderrequeststatus { get; set; }
        public virtual DbSet<Patch> Patch { get; set; }
        public virtual DbSet<Persoon> Persoon { get; set; }
        public virtual DbSet<PersoonDocumenten> PersoonDocumenten { get; set; }
        public virtual DbSet<PersoonEmailberichten> PersoonEmailberichten { get; set; }
        public virtual DbSet<Persoongroep> Persoongroep { get; set; }
        public virtual DbSet<PersoongroepDocumenten> PersoongroepDocumenten { get; set; }
        public virtual DbSet<PersoongroepEmailberichten> PersoongroepEmailberichten { get; set; }
        public virtual DbSet<PersoongroepLogboek> PersoongroepLogboek { get; set; }
        public virtual DbSet<PersoongroepMemoHistory> PersoongroepMemoHistory { get; set; }
        public virtual DbSet<PersoonIncidentLink> PersoonIncidentLink { get; set; }
        public virtual DbSet<Persoonlink> Persoonlink { get; set; }
        public virtual DbSet<PersoonLogboek> PersoonLogboek { get; set; }
        public virtual DbSet<PersoonMemoHistory> PersoonMemoHistory { get; set; }
        public virtual DbSet<PersoonOptionalgrid> PersoonOptionalgrid { get; set; }
        public virtual DbSet<PersoonPicture> PersoonPicture { get; set; }
        public virtual DbSet<Picture> Picture { get; set; }
        public virtual DbSet<Picturesource> Picturesource { get; set; }
        public virtual DbSet<Picturetype> Picturetype { get; set; }
        public virtual DbSet<Planboardgroupstate> Planboardgroupstate { get; set; }
        public virtual DbSet<Planning> Planning { get; set; }
        public virtual DbSet<PlanningMultidate> PlanningMultidate { get; set; }
        public virtual DbSet<Poort> Poort { get; set; }
        public virtual DbSet<PoortDocumenten> PoortDocumenten { get; set; }
        public virtual DbSet<PoortEmailberichten> PoortEmailberichten { get; set; }
        public virtual DbSet<PoortLogboek> PoortLogboek { get; set; }
        public virtual DbSet<Poorttype> Poorttype { get; set; }
        public virtual DbSet<Priority> Priority { get; set; }
        public virtual DbSet<Prioritylink> Prioritylink { get; set; }
        public virtual DbSet<Probleem> Probleem { get; set; }
        public virtual DbSet<ProbleemCategorie> ProbleemCategorie { get; set; }
        public virtual DbSet<ProbleemDocumenten> ProbleemDocumenten { get; set; }
        public virtual DbSet<ProbleemDoorlooptijd> ProbleemDoorlooptijd { get; set; }
        public virtual DbSet<ProbleemEmailberichten> ProbleemEmailberichten { get; set; }
        public virtual DbSet<ProbleemImpact> ProbleemImpact { get; set; }
        public virtual DbSet<Probleemincidentlink> Probleemincidentlink { get; set; }
        public virtual DbSet<ProbleemKennissysteem> ProbleemKennissysteem { get; set; }
        public virtual DbSet<ProbleemLogboek> ProbleemLogboek { get; set; }
        public virtual DbSet<ProbleemMemogeschiedenis> ProbleemMemogeschiedenis { get; set; }
        public virtual DbSet<ProbleemOorzaak> ProbleemOorzaak { get; set; }
        public virtual DbSet<ProbleemStatus> ProbleemStatus { get; set; }
        public virtual DbSet<ProblemPriority> ProblemPriority { get; set; }
        public virtual DbSet<ProblemUrgency> ProblemUrgency { get; set; }
        public virtual DbSet<ProfacboomProject> ProfacboomProject { get; set; }
        public virtual DbSet<ProfacboomProjectafhankelijkheden> ProfacboomProjectafhankelijkheden { get; set; }
        public virtual DbSet<ProfacboomprojectChangeLink> ProfacboomprojectChangeLink { get; set; }
        public virtual DbSet<ProfacboomProjectDocumenten> ProfacboomProjectDocumenten { get; set; }
        public virtual DbSet<ProfacboomProjectEmailberichten> ProfacboomProjectEmailberichten { get; set; }
        public virtual DbSet<ProfacboomProjectIncidentLink> ProfacboomProjectIncidentLink { get; set; }
        public virtual DbSet<ProfacboomProjectLogboek> ProfacboomProjectLogboek { get; set; }
        public virtual DbSet<ProfacboomProjectMemoHistory> ProfacboomProjectMemoHistory { get; set; }
        public virtual DbSet<ProfacboomProjectPersonLink> ProfacboomProjectPersonLink { get; set; }
        public virtual DbSet<ProfacboomProjectProblemLink> ProfacboomProjectProblemLink { get; set; }
        public virtual DbSet<Projectaanvraagtype> Projectaanvraagtype { get; set; }
        public virtual DbSet<Projectbeheerdocumenten> Projectbeheerdocumenten { get; set; }
        public virtual DbSet<ProjectdocumentkoppelProject> ProjectdocumentkoppelProject { get; set; }
        public virtual DbSet<Projectstatus> Projectstatus { get; set; }
        public virtual DbSet<Recht> Recht { get; set; }
        public virtual DbSet<Recurringevent> Recurringevent { get; set; }
        public virtual DbSet<RecurringeventReportactionLink> RecurringeventReportactionLink { get; set; }
        public virtual DbSet<Reparatie> Reparatie { get; set; }
        public virtual DbSet<Reportaction> Reportaction { get; set; }
        public virtual DbSet<ReportactionDocumenten> ReportactionDocumenten { get; set; }
        public virtual DbSet<ReportactionEmailberichten> ReportactionEmailberichten { get; set; }
        public virtual DbSet<ReportactionLogboek> ReportactionLogboek { get; set; }
        public virtual DbSet<ReportactionOperatorLink> ReportactionOperatorLink { get; set; }
        public virtual DbSet<ReportactionPersonLink> ReportactionPersonLink { get; set; }
        public virtual DbSet<Reportwizard> Reportwizard { get; set; }
        public virtual DbSet<Reservation> Reservation { get; set; }
        public virtual DbSet<ReservationCancelReason> ReservationCancelReason { get; set; }
        public virtual DbSet<ReservationDocumenten> ReservationDocumenten { get; set; }
        public virtual DbSet<ReservationEmailberichten> ReservationEmailberichten { get; set; }
        public virtual DbSet<ReservationEvent> ReservationEvent { get; set; }
        public virtual DbSet<ReservationEventDocumenten> ReservationEventDocumenten { get; set; }
        public virtual DbSet<ReservationEventEmailberichten> ReservationEventEmailberichten { get; set; }
        public virtual DbSet<ReservationFacilityFavorites> ReservationFacilityFavorites { get; set; }
        public virtual DbSet<ReservationFacilityLink> ReservationFacilityLink { get; set; }
        public virtual DbSet<ReservationFacilityLinkEmailberichten> ReservationFacilityLinkEmailberichten { get; set; }
        public virtual DbSet<ReservationLogboek> ReservationLogboek { get; set; }
        public virtual DbSet<ReservationMemoHistory> ReservationMemoHistory { get; set; }
        public virtual DbSet<ReservationPattern> ReservationPattern { get; set; }
        public virtual DbSet<ReservationPersonLink> ReservationPersonLink { get; set; }
        public virtual DbSet<ReservationRejectReason> ReservationRejectReason { get; set; }
        public virtual DbSet<ReservationSeries> ReservationSeries { get; set; }
        public virtual DbSet<ReservationServiceLink> ReservationServiceLink { get; set; }
        public virtual DbSet<ReservationServiceLinkEmailberichten> ReservationServiceLinkEmailberichten { get; set; }
        public virtual DbSet<ReservationStatus> ReservationStatus { get; set; }
        public virtual DbSet<ReservationVisitorLink> ReservationVisitorLink { get; set; }
        public virtual DbSet<Reservering> Reservering { get; set; }
        public virtual DbSet<Reserveringannuleerreden> Reserveringannuleerreden { get; set; }
        public virtual DbSet<ReserveringBezoekerLink> ReserveringBezoekerLink { get; set; }
        public virtual DbSet<ReserveringDocumenten> ReserveringDocumenten { get; set; }
        public virtual DbSet<ReserveringEmailberichten> ReserveringEmailberichten { get; set; }
        public virtual DbSet<ReserveringLocatieLink> ReserveringLocatieLink { get; set; }
        public virtual DbSet<ReserveringLogboek> ReserveringLogboek { get; set; }
        public virtual DbSet<ReserveringObjectLink> ReserveringObjectLink { get; set; }
        public virtual DbSet<Reserveringoptieafwijsreden> Reserveringoptieafwijsreden { get; set; }
        public virtual DbSet<ReserveringPersoonLink> ReserveringPersoonLink { get; set; }
        public virtual DbSet<ReserveringVoorzieningLink> ReserveringVoorzieningLink { get; set; }
        public virtual DbSet<ReserveringVoorzieningLinkDocumenten> ReserveringVoorzieningLinkDocumenten { get; set; }
        public virtual DbSet<ReserveringVoorzieningLinkEmailberichten> ReserveringVoorzieningLinkEmailberichten { get; set; }
        public virtual DbSet<ReserveringVoorzieningLinkLogboek> ReserveringVoorzieningLinkLogboek { get; set; }
        public virtual DbSet<ReserveringVoorzieningStatus> ReserveringVoorzieningStatus { get; set; }
        public virtual DbSet<RmSeries> RmSeries { get; set; }
        public virtual DbSet<RmSeriesLocationLink> RmSeriesLocationLink { get; set; }
        public virtual DbSet<RmSeriesObjectLink> RmSeriesObjectLink { get; set; }
        public virtual DbSet<RmSeriesServiceLink> RmSeriesServiceLink { get; set; }
        public virtual DbSet<RmSeriesStatus> RmSeriesStatus { get; set; }
        public virtual DbSet<Ruimtegebruiksfunctie> Ruimtegebruiksfunctie { get; set; }
        public virtual DbSet<Ruimtemateriaalglas> Ruimtemateriaalglas { get; set; }
        public virtual DbSet<Ruimtemateriaalplafond> Ruimtemateriaalplafond { get; set; }
        public virtual DbSet<Ruimtemateriaalvloer> Ruimtemateriaalvloer { get; set; }
        public virtual DbSet<Ruimtemateriaalwand> Ruimtemateriaalwand { get; set; }
        public virtual DbSet<Ruimteonderhoud> Ruimteonderhoud { get; set; }
        public virtual DbSet<Ruimteopstelling> Ruimteopstelling { get; set; }
        public virtual DbSet<Ruimtestatus> Ruimtestatus { get; set; }
        public virtual DbSet<Ruimtetype> Ruimtetype { get; set; }
        public virtual DbSet<Salaryscale> Salaryscale { get; set; }
        public virtual DbSet<Schedule> Schedule { get; set; }
        public virtual DbSet<Scheduleshiftlink> Scheduleshiftlink { get; set; }
        public virtual DbSet<Selvast> Selvast { get; set; }
        public virtual DbSet<ServiceBranchLink> ServiceBranchLink { get; set; }
        public virtual DbSet<ServiceBudgetholderLink> ServiceBudgetholderLink { get; set; }
        public virtual DbSet<ServiceDepartmentLink> ServiceDepartmentLink { get; set; }
        public virtual DbSet<Servicelevel> Servicelevel { get; set; }
        public virtual DbSet<ServicelevelDocumenten> ServicelevelDocumenten { get; set; }
        public virtual DbSet<ServicelevelEmailberichten> ServicelevelEmailberichten { get; set; }
        public virtual DbSet<ServicelevelLogboek> ServicelevelLogboek { get; set; }
        public virtual DbSet<ServicelevelMemoHistory> ServicelevelMemoHistory { get; set; }
        public virtual DbSet<ServicelevelPrioritylink> ServicelevelPrioritylink { get; set; }
        public virtual DbSet<ServicelevelServiceLink> ServicelevelServiceLink { get; set; }
        public virtual DbSet<ServicePersonALink> ServicePersonALink { get; set; }
        public virtual DbSet<ServicePersonBLink> ServicePersonBLink { get; set; }
        public virtual DbSet<ServiceSsdformLink> ServiceSsdformLink { get; set; }
        public virtual DbSet<Servicewindow> Servicewindow { get; set; }
        public virtual DbSet<ServicewindowDocumenten> ServicewindowDocumenten { get; set; }
        public virtual DbSet<ServicewindowEmailberichten> ServicewindowEmailberichten { get; set; }
        public virtual DbSet<ServicewindowLogboek> ServicewindowLogboek { get; set; }
        public virtual DbSet<ServicewindowMemoHistory> ServicewindowMemoHistory { get; set; }
        public virtual DbSet<Settings> Settings { get; set; }
        public virtual DbSet<Shift> Shift { get; set; }
        public virtual DbSet<Shiftoperatorgrouplink> Shiftoperatorgrouplink { get; set; }
        public virtual DbSet<Shiftpriority> Shiftpriority { get; set; }
        public virtual DbSet<Shiftsegment> Shiftsegment { get; set; }
        public virtual DbSet<Slacontractsoort> Slacontractsoort { get; set; }
        public virtual DbSet<Software> Software { get; set; }
        public virtual DbSet<SoftwareDocumenten> SoftwareDocumenten { get; set; }
        public virtual DbSet<SoftwareEmailberichten> SoftwareEmailberichten { get; set; }
        public virtual DbSet<SoftwareLogboek> SoftwareLogboek { get; set; }
        public virtual DbSet<SoftwareOptionalgrid> SoftwareOptionalgrid { get; set; }
        public virtual DbSet<SoftwareTopsissoftwareLink> SoftwareTopsissoftwareLink { get; set; }
        public virtual DbSet<Soort> Soort { get; set; }
        public virtual DbSet<Soortaansluiting> Soortaansluiting { get; set; }
        public virtual DbSet<Soortabonnement> Soortabonnement { get; set; }
        public virtual DbSet<Soortbinnenkomst> Soortbinnenkomst { get; set; }
        public virtual DbSet<Soortmelding> Soortmelding { get; set; }
        public virtual DbSet<Specialegebeurtenislink> Specialegebeurtenislink { get; set; }
        public virtual DbSet<SsdForm> SsdForm { get; set; }
        public virtual DbSet<SsdFormTranslations> SsdFormTranslations { get; set; }
        public virtual DbSet<SsdSubmittedFormContent> SsdSubmittedFormContent { get; set; }
        public virtual DbSet<SuppliercontactMemoHistory> SuppliercontactMemoHistory { get; set; }
        public virtual DbSet<Survey> Survey { get; set; }
        public virtual DbSet<Surveyanswer> Surveyanswer { get; set; }
        public virtual DbSet<SurveyDocumenten> SurveyDocumenten { get; set; }
        public virtual DbSet<SurveyEmailberichten> SurveyEmailberichten { get; set; }
        public virtual DbSet<SurveyLogboek> SurveyLogboek { get; set; }
        public virtual DbSet<SurveyMemoHistory> SurveyMemoHistory { get; set; }
        public virtual DbSet<Surveyquestion> Surveyquestion { get; set; }
        public virtual DbSet<Surveyquestioncategory> Surveyquestioncategory { get; set; }
        public virtual DbSet<SurveyquestionDocumenten> SurveyquestionDocumenten { get; set; }
        public virtual DbSet<SurveyquestionEmailberichten> SurveyquestionEmailberichten { get; set; }
        public virtual DbSet<SurveyquestionLogboek> SurveyquestionLogboek { get; set; }
        public virtual DbSet<SurveyquestionMemoHistory> SurveyquestionMemoHistory { get; set; }
        public virtual DbSet<SwStatus> SwStatus { get; set; }
        public virtual DbSet<SwUitzonderingen> SwUitzonderingen { get; set; }
        public virtual DbSet<Systemevents> Systemevents { get; set; }
        public virtual DbSet<SystemeventsDocumenten> SystemeventsDocumenten { get; set; }
        public virtual DbSet<SystemeventsEmailberichten> SystemeventsEmailberichten { get; set; }
        public virtual DbSet<SystemeventsLogboek> SystemeventsLogboek { get; set; }
        public virtual DbSet<Taskrole> Taskrole { get; set; }
        public virtual DbSet<Taskroleoperatorgrouplink> Taskroleoperatorgrouplink { get; set; }
        public virtual DbSet<Taskrolepriority> Taskrolepriority { get; set; }
        public virtual DbSet<Telefonie> Telefonie { get; set; }
        public virtual DbSet<TelefonieDocumenten> TelefonieDocumenten { get; set; }
        public virtual DbSet<TelefonieEmailberichten> TelefonieEmailberichten { get; set; }
        public virtual DbSet<TelefonieLogboek> TelefonieLogboek { get; set; }
        public virtual DbSet<TelefonieOptionalgrid> TelefonieOptionalgrid { get; set; }
        public virtual DbSet<TimeRegistrationChange> TimeRegistrationChange { get; set; }
        public virtual DbSet<TimeRegistrationChangeactivity> TimeRegistrationChangeactivity { get; set; }
        public virtual DbSet<TimeRegistrationIncident> TimeRegistrationIncident { get; set; }
        public virtual DbSet<TimeRegistrationOmActiviteit> TimeRegistrationOmActiviteit { get; set; }
        public virtual DbSet<TimeRegistrationProbleem> TimeRegistrationProbleem { get; set; }
        public virtual DbSet<TimeRegistrationProfacboomProject> TimeRegistrationProfacboomProject { get; set; }
        public virtual DbSet<TimeRegistrationReason> TimeRegistrationReason { get; set; }
        public virtual DbSet<Topsisgroup> Topsisgroup { get; set; }
        public virtual DbSet<Topsisiprange> Topsisiprange { get; set; }
        public virtual DbSet<Topsisobject> Topsisobject { get; set; }
        public virtual DbSet<Topsisobjectclass> Topsisobjectclass { get; set; }
        public virtual DbSet<Topsissoftware> Topsissoftware { get; set; }
        public virtual DbSet<Translations> Translations { get; set; }
        public virtual DbSet<Travelallowancetype> Travelallowancetype { get; set; }
        public virtual DbSet<Uitvoeractie> Uitvoeractie { get; set; }
        public virtual DbSet<Urgency> Urgency { get; set; }
        public virtual DbSet<Verbinding> Verbinding { get; set; }
        public virtual DbSet<Verhuurcategorie> Verhuurcategorie { get; set; }
        public virtual DbSet<Verhuurstatus> Verhuurstatus { get; set; }
        public virtual DbSet<Vestiging> Vestiging { get; set; }
        public virtual DbSet<VestigingDocumenten> VestigingDocumenten { get; set; }
        public virtual DbSet<VestigingEmailberichten> VestigingEmailberichten { get; set; }
        public virtual DbSet<VestigingLogboek> VestigingLogboek { get; set; }
        public virtual DbSet<VestigingMemoHistory> VestigingMemoHistory { get; set; }
        public virtual DbSet<VestigingOptionalgrid> VestigingOptionalgrid { get; set; }
        public virtual DbSet<VestigingPicture> VestigingPicture { get; set; }
        public virtual DbSet<Voorziening> Voorziening { get; set; }
        public virtual DbSet<VoorzieningDocumenten> VoorzieningDocumenten { get; set; }
        public virtual DbSet<VoorzieningEmailberichten> VoorzieningEmailberichten { get; set; }
        public virtual DbSet<VoorzieningLocatieLink> VoorzieningLocatieLink { get; set; }
        public virtual DbSet<VoorzieningLogboek> VoorzieningLogboek { get; set; }
        public virtual DbSet<VoorzieningObjectLink> VoorzieningObjectLink { get; set; }
        public virtual DbSet<Voorzieningsoort> Voorzieningsoort { get; set; }
        public virtual DbSet<VoorzieningVestigingLink> VoorzieningVestigingLink { get; set; }
        public virtual DbSet<Vrij1object> Vrij1object { get; set; }
        public virtual DbSet<Vrij1objectDocumenten> Vrij1objectDocumenten { get; set; }
        public virtual DbSet<Vrij1objectEmailberichten> Vrij1objectEmailberichten { get; set; }
        public virtual DbSet<Vrij1objectLogboek> Vrij1objectLogboek { get; set; }
        public virtual DbSet<Vrij1objectOptionalgrid> Vrij1objectOptionalgrid { get; set; }
        public virtual DbSet<Vrij2object> Vrij2object { get; set; }
        public virtual DbSet<Vrij2objectDocumenten> Vrij2objectDocumenten { get; set; }
        public virtual DbSet<Vrij2objectEmailberichten> Vrij2objectEmailberichten { get; set; }
        public virtual DbSet<Vrij2objectLogboek> Vrij2objectLogboek { get; set; }
        public virtual DbSet<Vrij2objectOptionalgrid> Vrij2objectOptionalgrid { get; set; }
        public virtual DbSet<Vrij3object> Vrij3object { get; set; }
        public virtual DbSet<Vrij3objectDocumenten> Vrij3objectDocumenten { get; set; }
        public virtual DbSet<Vrij3objectEmailberichten> Vrij3objectEmailberichten { get; set; }
        public virtual DbSet<Vrij3objectLogboek> Vrij3objectLogboek { get; set; }
        public virtual DbSet<Vrij3objectOptionalgrid> Vrij3objectOptionalgrid { get; set; }
        public virtual DbSet<Vrij4object> Vrij4object { get; set; }
        public virtual DbSet<Vrij4objectDocumenten> Vrij4objectDocumenten { get; set; }
        public virtual DbSet<Vrij4objectEmailberichten> Vrij4objectEmailberichten { get; set; }
        public virtual DbSet<Vrij4objectLogboek> Vrij4objectLogboek { get; set; }
        public virtual DbSet<Vrij4objectOptionalgrid> Vrij4objectOptionalgrid { get; set; }
        public virtual DbSet<Vrij5object> Vrij5object { get; set; }
        public virtual DbSet<Vrij5objectDocumenten> Vrij5objectDocumenten { get; set; }
        public virtual DbSet<Vrij5objectEmailberichten> Vrij5objectEmailberichten { get; set; }
        public virtual DbSet<Vrij5objectLogboek> Vrij5objectLogboek { get; set; }
        public virtual DbSet<Vrij5objectOptionalgrid> Vrij5objectOptionalgrid { get; set; }
        public virtual DbSet<Vrijeopzoekvelden> Vrijeopzoekvelden { get; set; }
        public virtual DbSet<Watchlist> Watchlist { get; set; }
        public virtual DbSet<Wbaanvraagtype> Wbaanvraagtype { get; set; }
        public virtual DbSet<Wbvergadersoort> Wbvergadersoort { get; set; }
        public virtual DbSet<Wbvergaderstatus> Wbvergaderstatus { get; set; }
        public virtual DbSet<Werkdag> Werkdag { get; set; }
        public virtual DbSet<WijzigingImpact> WijzigingImpact { get; set; }
        public virtual DbSet<Wijzigingstatus> Wijzigingstatus { get; set; }

        // Unable to generate entity type for table 'dbo.version'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.T_4415'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.activation'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.postponableupgrade'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.search_updates'. Please see the warning messages.

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer(@"Data Source=sqli1\zi1;Initial Catalog=TOPdesk5APP;User ID=***;Password=***");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Actiedoor>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("actiedoor");

                entity.HasIndex(e => e.Aanspreekactiedoorid)
                    .HasName("idx_actiedoor_aanspreekactiedoorid");

                entity.HasIndex(e => e.Afdelingid)
                    .HasName("idx_actiedoor_afdelingid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_actiedoor_archiefredenid");

                entity.HasIndex(e => e.Attentieid)
                    .HasName("idx_actiedoor_attentieid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_actiedoor_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_actiedoor_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_actiedoor_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_actiedoor_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_actiedoor_attvrijeopzoek5");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_actiedoor_budgethouderid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_actiedoor_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_actiedoor_datwijzig");

                entity.HasIndex(e => e.Geboortedatum)
                    .HasName("idx_actiedoor_geboortedatum");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_actiedoor_importid");

                entity.HasIndex(e => e.Landid)
                    .HasName("idx_actiedoor_landid");

                entity.HasIndex(e => e.LanguageId)
                    .HasName("idx_actiedoor_language_id");

                entity.HasIndex(e => e.Loginnaamtopdeskid)
                    .HasName("idx_actiedoor_loginnaamtopdeskid");

                entity.HasIndex(e => e.Lokatieid)
                    .HasName("idx_actiedoor_lokatieid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_actiedoor_naam");

                entity.HasIndex(e => e.RefAanhefformeel)
                    .HasName("idx_actiedoor_ref_aanhefformeel");

                entity.HasIndex(e => e.RefAanhefinformeel)
                    .HasName("idx_actiedoor_ref_aanhefinformeel");

                entity.HasIndex(e => e.RefAfdeling)
                    .HasName("idx_actiedoor_ref_afdeling");

                entity.HasIndex(e => e.RefBudgethouder)
                    .HasName("idx_actiedoor_ref_budgethouder");

                entity.HasIndex(e => e.RefDynanaam)
                    .HasName("idx_actiedoor_ref_dynanaam");

                entity.HasIndex(e => e.RefKleur)
                    .HasName("idx_actiedoor_ref_kleur");

                entity.HasIndex(e => e.RefPlaats1)
                    .HasName("idx_actiedoor_ref_plaats1");

                entity.HasIndex(e => e.RefVestiging)
                    .HasName("idx_actiedoor_ref_vestiging");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_actiedoor_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_actiedoor_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_actiedoor_uidwijzig");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_actiedoor_vestigingid");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_actiedoor_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_actiedoor_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_actiedoor_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_actiedoor_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_actiedoor_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_actiedoor_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_actiedoor_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aanspreekactiedoorid).HasColumnName("aanspreekactiedoorid");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Accountmanager).HasColumnName("accountmanager");

                entity.Property(e => e.Achternaam)
                    .IsRequired()
                    .HasColumnName("achternaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Activiteitbehandelaar).HasColumnName("activiteitbehandelaar");

                entity.Property(e => e.Adresmemo)
                    .HasColumnName("adresmemo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afdelingid).HasColumnName("afdelingid");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attentieid).HasColumnName("attentieid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Changeauthorizer).HasColumnName("changeauthorizer");

                entity.Property(e => e.County)
                    .IsRequired()
                    .HasColumnName("county")
                    .HasMaxLength(50);

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diversen)
                    .HasColumnName("diversen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasColumnName("email")
                    .HasMaxLength(100);

                entity.Property(e => e.ExchangeAccount)
                    .HasColumnName("exchange_account")
                    .HasMaxLength(100);

                entity.Property(e => e.Externepartij).HasColumnName("externepartij");

                entity.Property(e => e.Fax)
                    .IsRequired()
                    .HasColumnName("fax")
                    .HasMaxLength(25);

                entity.Property(e => e.Functie)
                    .IsRequired()
                    .HasColumnName("functie")
                    .HasMaxLength(100);

                entity.Property(e => e.Geboortedatum)
                    .HasColumnName("geboortedatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Geslacht).HasColumnName("geslacht");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.Huisnummer)
                    .IsRequired()
                    .HasColumnName("huisnummer")
                    .HasMaxLength(50);

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Installatie).HasColumnName("installatie");

                entity.Property(e => e.Kennissysteembeheerder).HasColumnName("kennissysteembeheerder");

                entity.Property(e => e.Landid).HasColumnName("landid");

                entity.Property(e => e.LanguageId).HasColumnName("language_id");

                entity.Property(e => e.Lijn1beheerder).HasColumnName("lijn1beheerder");

                entity.Property(e => e.Lijn2beheerder).HasColumnName("lijn2beheerder");

                entity.Property(e => e.Lmpactiviteitbeheerder).HasColumnName("lmpactiviteitbeheerder");

                entity.Property(e => e.Lmpscenariobeheerder).HasColumnName("lmpscenariobeheerder");

                entity.Property(e => e.Loginnaammainframe)
                    .IsRequired()
                    .HasColumnName("loginnaammainframe")
                    .HasMaxLength(100);

                entity.Property(e => e.Loginnaamnetwerk)
                    .IsRequired()
                    .HasColumnName("loginnaamnetwerk")
                    .HasMaxLength(100);

                entity.Property(e => e.Loginnaamtopdeskid).HasColumnName("loginnaamtopdeskid");

                entity.Property(e => e.Lokatieid).HasColumnName("lokatieid");

                entity.Property(e => e.Maginloggen).HasColumnName("maginloggen");

                entity.Property(e => e.MaidenName)
                    .IsRequired()
                    .HasColumnName("maiden_name")
                    .HasMaxLength(100);

                entity.Property(e => e.Mobiel)
                    .IsRequired()
                    .HasColumnName("mobiel")
                    .HasMaxLength(25);

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(50);

                entity.Property(e => e.Operationeelbehandelaar).HasColumnName("operationeelbehandelaar");

                entity.Property(e => e.Operationeelbeheerder).HasColumnName("operationeelbeheerder");

                entity.Property(e => e.Opmerking)
                    .IsRequired()
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.Personeeli)
                    .IsRequired()
                    .HasColumnName("personeeli")
                    .HasMaxLength(255);

                entity.Property(e => e.Personeelsnr)
                    .IsRequired()
                    .HasColumnName("personeelsnr")
                    .HasMaxLength(20);

                entity.Property(e => e.Plaats)
                    .IsRequired()
                    .HasColumnName("plaats")
                    .HasMaxLength(30);

                entity.Property(e => e.Postcode)
                    .IsRequired()
                    .HasColumnName("postcode")
                    .HasMaxLength(15);

                entity.Property(e => e.Priveemail)
                    .IsRequired()
                    .HasColumnName("priveemail")
                    .HasMaxLength(100);

                entity.Property(e => e.Privefax)
                    .IsRequired()
                    .HasColumnName("privefax")
                    .HasMaxLength(25);

                entity.Property(e => e.Privemobieltel)
                    .IsRequired()
                    .HasColumnName("privemobieltel")
                    .HasMaxLength(25);

                entity.Property(e => e.Privetel1)
                    .IsRequired()
                    .HasColumnName("privetel1")
                    .HasMaxLength(25);

                entity.Property(e => e.Privetel2)
                    .IsRequired()
                    .HasColumnName("privetel2")
                    .HasMaxLength(25);

                entity.Property(e => e.Probleembehandelaar).HasColumnName("probleembehandelaar");

                entity.Property(e => e.Probleembeheerder).HasColumnName("probleembeheerder");

                entity.Property(e => e.Projectactiviteitbehandelaar).HasColumnName("projectactiviteitbehandelaar");

                entity.Property(e => e.Projectbeheerder).HasColumnName("projectbeheerder");

                entity.Property(e => e.RefAanhefformeel)
                    .IsRequired()
                    .HasColumnName("ref_aanhefformeel")
                    .HasMaxLength(92);

                entity.Property(e => e.RefAanhefinformeel)
                    .IsRequired()
                    .HasColumnName("ref_aanhefinformeel")
                    .HasMaxLength(92);

                entity.Property(e => e.RefAfdeling)
                    .IsRequired()
                    .HasColumnName("ref_afdeling")
                    .HasMaxLength(100);

                entity.Property(e => e.RefBudgethouder)
                    .IsRequired()
                    .HasColumnName("ref_budgethouder")
                    .HasMaxLength(100);

                entity.Property(e => e.RefDynanaam)
                    .IsRequired()
                    .HasColumnName("ref_dynanaam")
                    .HasMaxLength(109);

                entity.Property(e => e.RefKleur).HasColumnName("ref_kleur");

                entity.Property(e => e.RefPlaats1)
                    .IsRequired()
                    .HasColumnName("ref_plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.Reserveringbeheerder).HasColumnName("reserveringbeheerder");

                entity.Property(e => e.Rfcauthorizer).HasColumnName("rfcauthorizer");

                entity.Property(e => e.Simplechangeoperator).HasColumnName("simplechangeoperator");

                entity.Property(e => e.Slacontractbeheerder).HasColumnName("slacontractbeheerder");

                entity.Property(e => e.SocialSecurityNumber)
                    .IsRequired()
                    .HasColumnName("social_security_number")
                    .HasMaxLength(60);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Straat)
                    .IsRequired()
                    .HasColumnName("straat")
                    .HasMaxLength(50);

                entity.Property(e => e.Sv).HasColumnName("sv");

                entity.Property(e => e.Tasloginnaam)
                    .IsRequired()
                    .HasColumnName("tasloginnaam")
                    .HasMaxLength(100);

                entity.Property(e => e.Taspasshash)
                    .HasColumnName("taspasshash")
                    .HasMaxLength(200);

                entity.Property(e => e.Tasstatus).HasColumnName("tasstatus");

                entity.Property(e => e.Telefoon)
                    .IsRequired()
                    .HasColumnName("telefoon")
                    .HasMaxLength(25);

                entity.Property(e => e.Titel)
                    .IsRequired()
                    .HasColumnName("titel")
                    .HasMaxLength(35);

                entity.Property(e => e.Tussenvoegsel)
                    .IsRequired()
                    .HasColumnName("tussenvoegsel")
                    .HasMaxLength(10);

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Uurprijs)
                    .HasColumnName("uurprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Visibleonplanboard).HasColumnName("visibleonplanboard");

                entity.Property(e => e.Voorletters)
                    .IsRequired()
                    .HasColumnName("voorletters")
                    .HasMaxLength(10);

                entity.Property(e => e.Voornaam)
                    .IsRequired()
                    .HasColumnName("voornaam")
                    .HasMaxLength(30);

                entity.Property(e => e.Voorraadbeheerder).HasColumnName("voorraadbeheerder");

                entity.Property(e => e.Voorzieningbehandelaar).HasColumnName("voorzieningbehandelaar");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Wijzigingsbeheerder).HasColumnName("wijzigingsbeheerder");

                entity.HasOne(d => d.Aanspreekactiedoor)
                    .WithMany(p => p.InverseAanspreekactiedoor)
                    .HasForeignKey(d => d.Aanspreekactiedoorid)
                    .HasConstraintName("fk_actiedoor_aanspreekactiedoorid_actiedoor");

                entity.HasOne(d => d.Afdeling)
                    .WithMany(p => p.Actiedoor)
                    .HasForeignKey(d => d.Afdelingid)
                    .HasConstraintName("fk_afdeling_afdelingid_actiedoor");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Actiedoor)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_actiedoor");

                entity.HasOne(d => d.Attentie)
                    .WithMany(p => p.Actiedoor)
                    .HasForeignKey(d => d.Attentieid)
                    .HasConstraintName("fk_attentie_attentieid_actiedoor");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.ActiedoorAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_actiedoor");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.ActiedoorAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_actiedoor");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.ActiedoorAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_actiedoor");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.ActiedoorAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_actiedoor");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.ActiedoorAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_actiedoor");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Actiedoor)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_actiedoor");

                entity.HasOne(d => d.Land)
                    .WithMany(p => p.Actiedoor)
                    .HasForeignKey(d => d.Landid)
                    .HasConstraintName("fk_land_landid_actiedoor");

                entity.HasOne(d => d.Language)
                    .WithMany(p => p.Actiedoor)
                    .HasForeignKey(d => d.LanguageId)
                    .HasConstraintName("fk_kennistaal_language_id_actiedoor");

                entity.HasOne(d => d.Loginnaamtopdesk)
                    .WithMany(p => p.ActiedoorLoginnaamtopdesk)
                    .HasForeignKey(d => d.Loginnaamtopdeskid)
                    .HasConstraintName("fk_gebruiker_loginnaamtopdeskid_actiedoor");

                entity.HasOne(d => d.Lokatie)
                    .WithMany(p => p.Actiedoor)
                    .HasForeignKey(d => d.Lokatieid)
                    .HasConstraintName("fk_locatie_lokatieid_actiedoor");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ActiedoorUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_actiedoor");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ActiedoorUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_actiedoor");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.Actiedoor)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_actiedoor");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.ActiedoorVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_actiedoor");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.ActiedoorVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_actiedoor");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.ActiedoorVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_actiedoor");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.ActiedoorVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_actiedoor");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.ActiedoorVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_actiedoor");
            });

            modelBuilder.Entity<ActiedoorDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("actiedoor__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_actiedoor__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_actiedoor__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_actiedoor__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_actiedoor__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_actiedoor__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_actiedoor__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ActiedoorDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_actiedoor_kaartid_actiedoor__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ActiedoorDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_actiedoor__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ActiedoorDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_actiedoor__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ActiedoorDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_actiedoor__documenten");
            });

            modelBuilder.Entity<ActiedoorEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("actiedoor__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_actiedoor__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_actiedoor__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_actiedoor__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ActiedoorEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_actiedoor__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ActiedoorEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_actiedoor_kaartid_actiedoor__emailberichten");
            });

            modelBuilder.Entity<Actiedoorlink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("actiedoorlink");

                entity.HasIndex(e => e.Actiedoorgroepid)
                    .HasName("idx_actiedoorlink_actiedoorgroepid");

                entity.HasIndex(e => e.Actiedoorid)
                    .HasName("idx_actiedoorlink_actiedoorid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_actiedoorlink_importid");

                entity.HasIndex(e => new { e.Actiedoorgroepid, e.Actiedoorid })
                    .HasName("uidx_actiedoorlink_actiedoorgroepid_actiedoorid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actiedoorgroepid).HasColumnName("actiedoorgroepid");

                entity.Property(e => e.Actiedoorid).HasColumnName("actiedoorid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.HasOne(d => d.Actiedoorgroep)
                    .WithMany(p => p.ActiedoorlinkActiedoorgroep)
                    .HasForeignKey(d => d.Actiedoorgroepid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_actiedoor_actiedoorgroepid_actiedoorlink");

                entity.HasOne(d => d.Actiedoor)
                    .WithMany(p => p.ActiedoorlinkActiedoor)
                    .HasForeignKey(d => d.Actiedoorid)
                    .HasConstraintName("fk_actiedoor_actiedoorid_actiedoorlink");
            });

            modelBuilder.Entity<ActiedoorLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("actiedoor__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_actiedoor__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_actiedoor__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_actiedoor__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_actiedoor__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_actiedoor__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_actiedoor__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ActiedoorLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_actiedoor_kaartid_actiedoor__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ActiedoorLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_actiedoor__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ActiedoorLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_actiedoor__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ActiedoorLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_actiedoor__logboek");
            });

            modelBuilder.Entity<ActiedoorMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("actiedoor__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_actiedoor__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_actiedoor__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_actiedoor__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_actiedoor__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_actiedoor__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_actiedoor__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_actiedoor__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_actiedoor__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_actiedoor__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.ActiedoorMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_actiedoor__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.ActiedoorMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_actiedoor_parentid_actiedoor__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ActiedoorMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_actiedoor__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ActiedoorMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_actiedoor__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ActiedoorMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_actiedoor__memo_history");
            });

            modelBuilder.Entity<ActiedoorOptionalgrid>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("actiedoor__optionalgrid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_actiedoor__optionalgrid_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_actiedoor__optionalgrid_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_actiedoor__optionalgrid_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_actiedoor__optionalgrid_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_actiedoor__optionalgrid_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_actiedoor__optionalgrid_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_actiedoor__optionalgrid_parentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_actiedoor__optionalgrid_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_actiedoor__optionalgrid_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_actiedoor__optionalgrid_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_actiedoor__optionalgrid_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_actiedoor__optionalgrid_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_actiedoor__optionalgrid_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_actiedoor__optionalgrid_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.ActiedoorOptionalgridAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_actiedoor__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.ActiedoorOptionalgridAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_actiedoor__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.ActiedoorOptionalgridAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_actiedoor__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.ActiedoorOptionalgridAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_actiedoor__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.ActiedoorOptionalgridAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_actiedoor__optionalgrid");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.ActiedoorOptionalgrid)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_actiedoor_parentid_actiedoor__optionalgrid");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ActiedoorOptionalgridUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_actiedoor__optionalgrid");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ActiedoorOptionalgridUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_actiedoor__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.ActiedoorOptionalgridVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_actiedoor__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.ActiedoorOptionalgridVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_actiedoor__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.ActiedoorOptionalgridVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_actiedoor__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.ActiedoorOptionalgridVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_actiedoor__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.ActiedoorOptionalgridVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_actiedoor__optionalgrid");
            });

            modelBuilder.Entity<ActiedoorPicture>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("actiedoor__picture");

                entity.HasIndex(e => e.Cardid)
                    .HasName("idx_actiedoor__picture_cardid");

                entity.HasIndex(e => e.Pictureid)
                    .HasName("idx_actiedoor__picture_pictureid");

                entity.HasIndex(e => new { e.Pictureid, e.Cardid })
                    .HasName("uidx_actiedoor__picture_pictureid_cardid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cardid).HasColumnName("cardid");

                entity.Property(e => e.Isfavourite).HasColumnName("isfavourite");

                entity.Property(e => e.Pictureid).HasColumnName("pictureid");

                entity.Property(e => e.Rank).HasColumnName("rank");

                entity.HasOne(d => d.Card)
                    .WithMany(p => p.ActiedoorPicture)
                    .HasForeignKey(d => d.Cardid)
                    .HasConstraintName("fk_actiedoor_cardid_actiedoor__picture");

                entity.HasOne(d => d.Picture)
                    .WithMany(p => p.ActiedoorPicture)
                    .HasForeignKey(d => d.Pictureid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_picture_pictureid_actiedoor__picture");
            });

            modelBuilder.Entity<Afdeling>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("afdeling");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_afdeling_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_afdeling_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_afdeling_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Afhandelingstatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("afhandelingstatus");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_afhandelingstatus_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_afhandelingstatus_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_afhandelingstatus_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Onhold).HasColumnName("onhold");

                entity.Property(e => e.Processingstate).HasColumnName("processingstate");

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Appliedshift>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("appliedshift");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_appliedshift_operatorid");

                entity.HasIndex(e => e.Shiftid)
                    .HasName("idx_appliedshift_shiftid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_appliedshift_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_appliedshift_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_appliedshift_uidwijzig");

                entity.HasIndex(e => new { e.Operatorid, e.Day })
                    .HasName("uidx_appliedshift_operatorid_day")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Day).HasColumnName("day");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Shiftid).HasColumnName("shiftid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Timezone)
                    .IsRequired()
                    .HasColumnName("timezone")
                    .HasMaxLength(42);

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.Appliedshift)
                    .HasForeignKey(d => d.Operatorid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_actiedoor_operatorid_appliedshift");

                entity.HasOne(d => d.Shift)
                    .WithMany(p => p.Appliedshift)
                    .HasForeignKey(d => d.Shiftid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_shift_shiftid_appliedshift");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.AppliedshiftUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_appliedshift");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.AppliedshiftUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_appliedshift");
            });

            modelBuilder.Entity<Appointment>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("appointment");

                entity.HasIndex(e => e.Branchid)
                    .HasName("idx_appointment_branchid");

                entity.HasIndex(e => e.Datexport)
                    .HasName("idx_appointment_datexport");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_appointment_importid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_appointment_operatorid");

                entity.HasIndex(e => e.Personid)
                    .HasName("idx_appointment_personid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_appointment_status");

                entity.HasIndex(e => new { e.Start, e.End })
                    .HasName("idx_appointment_start_end");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Branchid).HasColumnName("branchid");

                entity.Property(e => e.Briefdescription)
                    .HasColumnName("briefdescription")
                    .HasMaxLength(255);

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datexport)
                    .HasColumnName("datexport")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("ntext");

                entity.Property(e => e.End).HasColumnName("end");

                entity.Property(e => e.Ewsid)
                    .HasColumnName("ewsid")
                    .HasMaxLength(512);

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Number)
                    .IsRequired()
                    .HasColumnName("number")
                    .HasMaxLength(255);

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Personid).HasColumnName("personid");

                entity.Property(e => e.RefBranchCity)
                    .IsRequired()
                    .HasColumnName("ref_branch_city")
                    .HasMaxLength(30);

                entity.Property(e => e.RefBranchName)
                    .IsRequired()
                    .HasColumnName("ref_branch_name")
                    .HasMaxLength(60);

                entity.Property(e => e.RefCreatorName)
                    .IsRequired()
                    .HasColumnName("ref_creator_name")
                    .HasMaxLength(109);

                entity.Property(e => e.RefModifierName)
                    .IsRequired()
                    .HasColumnName("ref_modifier_name")
                    .HasMaxLength(109);

                entity.Property(e => e.RefOperatorName)
                    .IsRequired()
                    .HasColumnName("ref_operator_name")
                    .HasMaxLength(109);

                entity.Property(e => e.RefPersonName)
                    .IsRequired()
                    .HasColumnName("ref_person_name")
                    .HasMaxLength(109);

                entity.Property(e => e.Start).HasColumnName("start");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Branch)
                    .WithMany(p => p.Appointment)
                    .HasForeignKey(d => d.Branchid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vestiging_branchid_appointment");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.Appointment)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_appointment");

                entity.HasOne(d => d.Person)
                    .WithMany(p => p.Appointment)
                    .HasForeignKey(d => d.Personid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_persoon_personid_appointment");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.AppointmentUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_appointment");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.AppointmentUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_appointment");
            });

            modelBuilder.Entity<AppointmentDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("appointment__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_appointment__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_appointment__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_appointment__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_appointment__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.AppointmentDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_appointment_kaartid_appointment__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.AppointmentDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_appointment__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.AppointmentDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_appointment__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.AppointmentDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_appointment__documenten");
            });

            modelBuilder.Entity<AppointmentEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("appointment__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_appointment__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_appointment__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.AppointmentEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_appointment__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.AppointmentEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_appointment_kaartid_appointment__emailberichten");
            });

            modelBuilder.Entity<AppointmentLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("appointment__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_appointment__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_appointment__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_appointment__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_appointment__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.AppointmentLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_appointment_kaartid_appointment__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.AppointmentLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_appointment__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.AppointmentLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_appointment__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.AppointmentLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_appointment__logboek");
            });

            modelBuilder.Entity<Archiefreden>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("archiefreden");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_archiefreden_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_archiefreden_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_archiefreden_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ArtikelBestelLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("artikel_bestel_link");

                entity.HasIndex(e => e.Artikelid)
                    .HasName("idx_artikel_bestel_link_artikelid");

                entity.HasIndex(e => e.Bestellingid)
                    .HasName("idx_artikel_bestel_link_bestellingid");

                entity.HasIndex(e => e.Btwsoortid)
                    .HasName("idx_artikel_bestel_link_btwsoortid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_artikel_bestel_link_importid");

                entity.HasIndex(e => new { e.Artikelid, e.Bestellingid })
                    .HasName("uidx_artikel_bestel_link_artikelid_bestellingid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantal).HasColumnName("aantal");

                entity.Property(e => e.Aantalgeleverd).HasColumnName("aantalgeleverd");

                entity.Property(e => e.Artikelid).HasColumnName("artikelid");

                entity.Property(e => e.Artikelkorting)
                    .HasColumnName("artikelkorting")
                    .HasColumnType("money");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestellingid).HasColumnName("bestellingid");

                entity.Property(e => e.Btwsoortid).HasColumnName("btwsoortid");

                entity.Property(e => e.Fase).HasColumnName("fase");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Prijs)
                    .HasColumnName("prijs")
                    .HasColumnType("money");

                entity.HasOne(d => d.Artikel)
                    .WithMany(p => p.ArtikelBestelLink)
                    .HasForeignKey(d => d.Artikelid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_artikelid_artikel_bestel_link");

                entity.HasOne(d => d.Bestelling)
                    .WithMany(p => p.ArtikelBestelLink)
                    .HasForeignKey(d => d.Bestellingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_bestellingen_bestellingid_artikel_bestel_link");

                entity.HasOne(d => d.Btwsoort)
                    .WithMany(p => p.ArtikelBestelLink)
                    .HasForeignKey(d => d.Btwsoortid)
                    .HasConstraintName("fk_btw_btwsoortid_artikel_bestel_link");
            });

            modelBuilder.Entity<ArtikelLeverancierLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("artikel_leverancier_link");

                entity.HasIndex(e => e.Artikelid)
                    .HasName("idx_artikel_leverancier_link_artikelid");

                entity.HasIndex(e => e.Btwsoortid)
                    .HasName("idx_artikel_leverancier_link_btwsoortid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_artikel_leverancier_link_importid");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_artikel_leverancier_link_leverancierid");

                entity.HasIndex(e => e.RefLeverancier)
                    .HasName("idx_artikel_leverancier_link_ref_leverancier");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_artikel_leverancier_link_status");

                entity.HasIndex(e => new { e.Artikelid, e.Leverancierid })
                    .HasName("uidx_artikel_leverancier_link_artikelid_leverancierid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Artikelid).HasColumnName("artikelid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelcode)
                    .IsRequired()
                    .HasColumnName("bestelcode")
                    .HasMaxLength(30);

                entity.Property(e => e.Btwsoortid).HasColumnName("btwsoortid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Korting).HasColumnName("korting");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Levertijd).HasColumnName("levertijd");

                entity.Property(e => e.Minimumbestelling).HasColumnName("minimumbestelling");

                entity.Property(e => e.Prijs)
                    .HasColumnName("prijs")
                    .HasColumnType("money");

                entity.Property(e => e.RefLeverancier)
                    .IsRequired()
                    .HasColumnName("ref_leverancier")
                    .HasMaxLength(60);

                entity.Property(e => e.Standaardleverancier).HasColumnName("standaardleverancier");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Voorwaarde)
                    .HasColumnName("voorwaarde")
                    .HasColumnType("ntext");

                entity.HasOne(d => d.Artikel)
                    .WithMany(p => p.ArtikelLeverancierLink)
                    .HasForeignKey(d => d.Artikelid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_artikelid_artikel_leverancier_link");

                entity.HasOne(d => d.Btwsoort)
                    .WithMany(p => p.ArtikelLeverancierLink)
                    .HasForeignKey(d => d.Btwsoortid)
                    .HasConstraintName("fk_btw_btwsoortid_artikel_leverancier_link");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.ArtikelLeverancierLink)
                    .HasForeignKey(d => d.Leverancierid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_leverancier_leverancierid_artikel_leverancier_link");
            });

            modelBuilder.Entity<ArtikelMutatie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("artikel_mutatie");

                entity.HasIndex(e => e.Artikelbestellinkid)
                    .HasName("idx_artikel_mutatie_artikelbestellinkid");

                entity.HasIndex(e => e.Artikelid)
                    .HasName("idx_artikel_mutatie_artikelid");

                entity.HasIndex(e => e.Bestelaanvraagartikellinkid)
                    .HasName("idx_artikel_mutatie_bestelaanvraagartikellinkid");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_artikel_mutatie_budgethouderid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_artikel_mutatie_dataanmk");

                entity.HasIndex(e => e.Datum)
                    .HasName("idx_artikel_mutatie_datum");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_artikel_mutatie_importid");

                entity.HasIndex(e => e.Kostendeclaratieleverancierid)
                    .HasName("idx_artikel_mutatie_kostendeclaratieleverancierid");

                entity.HasIndex(e => e.Mutatieredenid)
                    .HasName("idx_artikel_mutatie_mutatieredenid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_artikel_mutatie_uidaanmk");

                entity.HasIndex(e => e.Voorraadid)
                    .HasName("idx_artikel_mutatie_voorraadid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantal).HasColumnName("aantal");

                entity.Property(e => e.Artikelbestellinkid).HasColumnName("artikelbestellinkid");

                entity.Property(e => e.Artikelid).HasColumnName("artikelid");

                entity.Property(e => e.Bestelaanvraagartikellinkid).HasColumnName("bestelaanvraagartikellinkid");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datum)
                    .HasColumnName("datum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Kostendeclaratieleverancierid).HasColumnName("kostendeclaratieleverancierid");

                entity.Property(e => e.Mutatieredenid).HasColumnName("mutatieredenid");

                entity.Property(e => e.Opmerking)
                    .HasColumnName("opmerking")
                    .HasColumnType("ntext");

                entity.Property(e => e.Tussenvoorraad).HasColumnName("tussenvoorraad");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Voorraadid).HasColumnName("voorraadid");

                entity.HasOne(d => d.Artikelbestellink)
                    .WithMany(p => p.ArtikelMutatie)
                    .HasForeignKey(d => d.Artikelbestellinkid)
                    .HasConstraintName("fk_artikel_bestel_link_artikelbestellinkid_artikel_mutatie");

                entity.HasOne(d => d.Artikel)
                    .WithMany(p => p.ArtikelMutatie)
                    .HasForeignKey(d => d.Artikelid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_object_artikelid_artikel_mutatie");

                entity.HasOne(d => d.Bestelaanvraagartikellink)
                    .WithMany(p => p.ArtikelMutatie)
                    .HasForeignKey(d => d.Bestelaanvraagartikellinkid)
                    .HasConstraintName("fk_bestelaanvraag_artikel_link_bestelaanvraagartikellinkid_artikel_mutatie");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.ArtikelMutatie)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_artikel_mutatie");

                entity.HasOne(d => d.Kostendeclaratieleverancier)
                    .WithMany(p => p.ArtikelMutatie)
                    .HasForeignKey(d => d.Kostendeclaratieleverancierid)
                    .HasConstraintName("fk_leverancier_kostendeclaratieleverancierid_artikel_mutatie");

                entity.HasOne(d => d.Mutatiereden)
                    .WithMany(p => p.ArtikelMutatie)
                    .HasForeignKey(d => d.Mutatieredenid)
                    .HasConstraintName("fk_artikelmutatiereden_mutatieredenid_artikel_mutatie");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ArtikelMutatie)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_artikel_mutatie");

                entity.HasOne(d => d.Voorraad)
                    .WithMany(p => p.ArtikelMutatie)
                    .HasForeignKey(d => d.Voorraadid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_configuratie_voorraadid_artikel_mutatie");
            });

            modelBuilder.Entity<Artikelmutatiereden>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("artikelmutatiereden");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_artikelmutatiereden_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_artikelmutatiereden_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_artikelmutatiereden_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Artikelstatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("artikelstatus");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_artikelstatus_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_artikelstatus_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_artikelstatus_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ArtikelVoorraadLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("artikel_voorraad_link");

                entity.HasIndex(e => e.Artikelid)
                    .HasName("idx_artikel_voorraad_link_artikelid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_artikel_voorraad_link_importid");

                entity.HasIndex(e => e.Voorraadid)
                    .HasName("idx_artikel_voorraad_link_voorraadid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Artikelid).HasColumnName("artikelid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Voorraad).HasColumnName("voorraad");

                entity.Property(e => e.Voorraadid).HasColumnName("voorraadid");

                entity.HasOne(d => d.Artikel)
                    .WithMany(p => p.ArtikelVoorraadLink)
                    .HasForeignKey(d => d.Artikelid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_artikelid_artikel_voorraad_link");

                entity.HasOne(d => d.VoorraadNavigation)
                    .WithMany(p => p.ArtikelVoorraadLink)
                    .HasForeignKey(d => d.Voorraadid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_configuratie_voorraadid_artikel_voorraad_link");
            });

            modelBuilder.Entity<Attentie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("attentie");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_attentie_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_attentie_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_attentie_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Kleur).HasColumnName("kleur");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Availabilitycheck>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("availabilitycheck");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_availabilitycheck_operatorgroupid");

                entity.HasIndex(e => e.Taskroleid)
                    .HasName("idx_availabilitycheck_taskroleid");

                entity.HasIndex(e => new { e.Start, e.End, e.Dayofweek })
                    .HasName("idx_availabilitycheck_start_end_dayofweek");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dayofweek).HasColumnName("dayofweek");

                entity.Property(e => e.End).HasColumnName("end");

                entity.Property(e => e.Minimum).HasColumnName("minimum");

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Start).HasColumnName("start");

                entity.Property(e => e.Taskroleid).HasColumnName("taskroleid");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.Availabilitycheck)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_availabilitycheck");

                entity.HasOne(d => d.Taskrole)
                    .WithMany(p => p.Availabilitycheck)
                    .HasForeignKey(d => d.Taskroleid)
                    .HasConstraintName("fk_taskrole_taskroleid_availabilitycheck");
            });

            modelBuilder.Entity<Bestelaanvraag>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bestelaanvraag");

                entity.HasIndex(e => e.Aanmelderafdelingid)
                    .HasName("idx_bestelaanvraag_aanmelderafdelingid");

                entity.HasIndex(e => e.Aanmelderbudgethouderid)
                    .HasName("idx_bestelaanvraag_aanmelderbudgethouderid");

                entity.HasIndex(e => e.Aanmelderlokatieid)
                    .HasName("idx_bestelaanvraag_aanmelderlokatieid");

                entity.HasIndex(e => e.Aanmeldervestigingid)
                    .HasName("idx_bestelaanvraag_aanmeldervestigingid");

                entity.HasIndex(e => e.Aanvraagdatum)
                    .HasName("idx_bestelaanvraag_aanvraagdatum");

                entity.HasIndex(e => e.Aanvragerid)
                    .HasName("idx_bestelaanvraag_aanvragerid");

                entity.HasIndex(e => e.Afhandeldatum)
                    .HasName("idx_bestelaanvraag_afhandeldatum");

                entity.HasIndex(e => e.Afwijsdatum)
                    .HasName("idx_bestelaanvraag_afwijsdatum");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_bestelaanvraag_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_bestelaanvraag_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_bestelaanvraag_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_bestelaanvraag_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_bestelaanvraag_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_bestelaanvraag_attvrijeopzoek5");

                entity.HasIndex(e => e.Behandelaarid)
                    .HasName("idx_bestelaanvraag_behandelaarid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_bestelaanvraag_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_bestelaanvraag_datwijzig");

                entity.HasIndex(e => e.Extraaid)
                    .HasName("idx_bestelaanvraag_extraaid");

                entity.HasIndex(e => e.Extraapersoonid)
                    .HasName("idx_bestelaanvraag_extraapersoonid");

                entity.HasIndex(e => e.Extrabid)
                    .HasName("idx_bestelaanvraag_extrabid");

                entity.HasIndex(e => e.Extrabpersoonid)
                    .HasName("idx_bestelaanvraag_extrabpersoonid");

                entity.HasIndex(e => e.Gewensteleverdatum)
                    .HasName("idx_bestelaanvraag_gewensteleverdatum");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_bestelaanvraag_importid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_bestelaanvraag_naam");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_bestelaanvraag_persoonid");

                entity.HasIndex(e => e.Rappeldatum)
                    .HasName("idx_bestelaanvraag_rappeldatum");

                entity.HasIndex(e => e.RefAanvragerdynanaam)
                    .HasName("idx_bestelaanvraag_ref_aanvragerdynanaam");

                entity.HasIndex(e => e.RefAfdeling)
                    .HasName("idx_bestelaanvraag_ref_afdeling");

                entity.HasIndex(e => e.RefBudgethouder)
                    .HasName("idx_bestelaanvraag_ref_budgethouder");

                entity.HasIndex(e => e.RefLocatie)
                    .HasName("idx_bestelaanvraag_ref_locatie");

                entity.HasIndex(e => e.RefPersnr)
                    .HasName("idx_bestelaanvraag_ref_persnr");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_bestelaanvraag_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_bestelaanvraag_statusid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_bestelaanvraag_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_bestelaanvraag_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_bestelaanvraag_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_bestelaanvraag_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_bestelaanvraag_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_bestelaanvraag_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_bestelaanvraag_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aanmelderafdelingid).HasColumnName("aanmelderafdelingid");

                entity.Property(e => e.Aanmelderbudgethouderid).HasColumnName("aanmelderbudgethouderid");

                entity.Property(e => e.Aanmelderemail)
                    .IsRequired()
                    .HasColumnName("aanmelderemail")
                    .HasMaxLength(100);

                entity.Property(e => e.Aanmelderlokatieid).HasColumnName("aanmelderlokatieid");

                entity.Property(e => e.Aanmeldernaam)
                    .IsRequired()
                    .HasColumnName("aanmeldernaam")
                    .HasMaxLength(109);

                entity.Property(e => e.Aanmelderplaats1)
                    .IsRequired()
                    .HasColumnName("aanmelderplaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.Aanmeldertelefoon)
                    .IsRequired()
                    .HasColumnName("aanmeldertelefoon")
                    .HasMaxLength(25);

                entity.Property(e => e.Aanmeldervestiging)
                    .IsRequired()
                    .HasColumnName("aanmeldervestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.Aanmeldervestigingid).HasColumnName("aanmeldervestigingid");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Aanvraagdatum)
                    .HasColumnName("aanvraagdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Aanvragerid).HasColumnName("aanvragerid");

                entity.Property(e => e.Actie)
                    .HasColumnName("actie")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afhandeldatum)
                    .HasColumnName("afhandeldatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Afwijsdatum)
                    .HasColumnName("afwijsdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Behandelaarid).HasColumnName("behandelaarid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Extraaid).HasColumnName("extraaid");

                entity.Property(e => e.Extraapersoonid).HasColumnName("extraapersoonid");

                entity.Property(e => e.Extrabid).HasColumnName("extrabid");

                entity.Property(e => e.Extrabpersoonid).HasColumnName("extrabpersoonid");

                entity.Property(e => e.Gewensteleverdatum)
                    .HasColumnName("gewensteleverdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(30);

                entity.Property(e => e.Opmerkingen)
                    .HasColumnName("opmerkingen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Rappeldatum)
                    .HasColumnName("rappeldatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefAanvragerdynanaam)
                    .IsRequired()
                    .HasColumnName("ref_aanvragerdynanaam")
                    .HasMaxLength(109);

                entity.Property(e => e.RefAfdeling)
                    .IsRequired()
                    .HasColumnName("ref_afdeling")
                    .HasMaxLength(100);

                entity.Property(e => e.RefBudgethouder)
                    .IsRequired()
                    .HasColumnName("ref_budgethouder")
                    .HasMaxLength(100);

                entity.Property(e => e.RefLocatie)
                    .IsRequired()
                    .HasColumnName("ref_locatie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefPersnr)
                    .IsRequired()
                    .HasColumnName("ref_persnr")
                    .HasMaxLength(20);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Aanmelderafdeling)
                    .WithMany(p => p.Bestelaanvraag)
                    .HasForeignKey(d => d.Aanmelderafdelingid)
                    .HasConstraintName("fk_afdeling_aanmelderafdelingid_bestelaanvraag");

                entity.HasOne(d => d.Aanmelderbudgethouder)
                    .WithMany(p => p.Bestelaanvraag)
                    .HasForeignKey(d => d.Aanmelderbudgethouderid)
                    .HasConstraintName("fk_budgethouder_aanmelderbudgethouderid_bestelaanvraag");

                entity.HasOne(d => d.Aanmelderlokatie)
                    .WithMany(p => p.Bestelaanvraag)
                    .HasForeignKey(d => d.Aanmelderlokatieid)
                    .HasConstraintName("fk_locatie_aanmelderlokatieid_bestelaanvraag");

                entity.HasOne(d => d.AanmeldervestigingNavigation)
                    .WithMany(p => p.Bestelaanvraag)
                    .HasForeignKey(d => d.Aanmeldervestigingid)
                    .HasConstraintName("fk_vestiging_aanmeldervestigingid_bestelaanvraag");

                entity.HasOne(d => d.Aanvrager)
                    .WithMany(p => p.BestelaanvraagAanvrager)
                    .HasForeignKey(d => d.Aanvragerid)
                    .HasConstraintName("fk_persoon_aanvragerid_bestelaanvraag");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Bestelaanvraag)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_bestelaanvraag");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.BestelaanvraagAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_bestelaanvraag");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.BestelaanvraagAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_bestelaanvraag");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.BestelaanvraagAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_bestelaanvraag");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.BestelaanvraagAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_bestelaanvraag");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.BestelaanvraagAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_bestelaanvraag");

                entity.HasOne(d => d.Behandelaar)
                    .WithMany(p => p.Bestelaanvraag)
                    .HasForeignKey(d => d.Behandelaarid)
                    .HasConstraintName("fk_actiedoor_behandelaarid_bestelaanvraag");

                entity.HasOne(d => d.Extraa)
                    .WithMany(p => p.Bestelaanvraag)
                    .HasForeignKey(d => d.Extraaid)
                    .HasConstraintName("fk_extraa_extraaid_bestelaanvraag");

                entity.HasOne(d => d.Extraapersoon)
                    .WithMany(p => p.Bestelaanvraag)
                    .HasForeignKey(d => d.Extraapersoonid)
                    .HasConstraintName("fk_extraapersoon_extraapersoonid_bestelaanvraag");

                entity.HasOne(d => d.Extrab)
                    .WithMany(p => p.Bestelaanvraag)
                    .HasForeignKey(d => d.Extrabid)
                    .HasConstraintName("fk_extrab_extrabid_bestelaanvraag");

                entity.HasOne(d => d.Extrabpersoon)
                    .WithMany(p => p.Bestelaanvraag)
                    .HasForeignKey(d => d.Extrabpersoonid)
                    .HasConstraintName("fk_extrabpersoon_extrabpersoonid_bestelaanvraag");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.BestelaanvraagPersoon)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_bestelaanvraag");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Bestelaanvraag)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_orderrequeststatus_statusid_bestelaanvraag");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.BestelaanvraagUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_bestelaanvraag");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.BestelaanvraagUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_bestelaanvraag");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.BestelaanvraagVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_bestelaanvraag");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.BestelaanvraagVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_bestelaanvraag");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.BestelaanvraagVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_bestelaanvraag");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.BestelaanvraagVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_bestelaanvraag");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.BestelaanvraagVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_bestelaanvraag");
            });

            modelBuilder.Entity<BestelaanvraagArtikelLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bestelaanvraag_artikel_link");

                entity.HasIndex(e => e.Artikelid)
                    .HasName("idx_bestelaanvraag_artikel_link_artikelid");

                entity.HasIndex(e => e.Bestelaanvraagid)
                    .HasName("idx_bestelaanvraag_artikel_link_bestelaanvraagid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_bestelaanvraag_artikel_link_importid");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_bestelaanvraag_artikel_link_leverancierid");

                entity.HasIndex(e => new { e.Artikelid, e.Bestelaanvraagid })
                    .HasName("uidx_bestelaanvraag_artikel_link_artikelid_bestelaanvraagid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantal).HasColumnName("aantal");

                entity.Property(e => e.Aantaluitgeleverd).HasColumnName("aantaluitgeleverd");

                entity.Property(e => e.Artikelid).HasColumnName("artikelid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelaanvraagid).HasColumnName("bestelaanvraagid");

                entity.Property(e => e.Geaccepteerd).HasColumnName("geaccepteerd");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Verkoopprijs)
                    .HasColumnName("verkoopprijs")
                    .HasColumnType("money");

                entity.HasOne(d => d.Artikel)
                    .WithMany(p => p.BestelaanvraagArtikelLink)
                    .HasForeignKey(d => d.Artikelid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_artikelid_bestelaanvraag_artikel_link");

                entity.HasOne(d => d.Bestelaanvraag)
                    .WithMany(p => p.BestelaanvraagArtikelLink)
                    .HasForeignKey(d => d.Bestelaanvraagid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_bestelaanvraag_bestelaanvraagid_bestelaanvraag_artikel_link");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.BestelaanvraagArtikelLink)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_bestelaanvraag_artikel_link");
            });

            modelBuilder.Entity<BestelaanvraagBestellingenLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bestelaanvraag_bestellingen_link");

                entity.HasIndex(e => e.Bestelaanvraagid)
                    .HasName("idx_bestelaanvraag_bestellingen_link_bestelaanvraagid");

                entity.HasIndex(e => e.Bestellingid)
                    .HasName("idx_bestelaanvraag_bestellingen_link_bestellingid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_bestelaanvraag_bestellingen_link_importid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelaanvraagid).HasColumnName("bestelaanvraagid");

                entity.Property(e => e.Bestellingid).HasColumnName("bestellingid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.HasOne(d => d.Bestelaanvraag)
                    .WithMany(p => p.BestelaanvraagBestellingenLink)
                    .HasForeignKey(d => d.Bestelaanvraagid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_bestelaanvraag_bestelaanvraagid_bestelaanvraag_bestellingen_link");

                entity.HasOne(d => d.Bestelling)
                    .WithMany(p => p.BestelaanvraagBestellingenLink)
                    .HasForeignKey(d => d.Bestellingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_bestellingen_bestellingid_bestelaanvraag_bestellingen_link");
            });

            modelBuilder.Entity<BestelaanvraagDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bestelaanvraag__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_bestelaanvraag__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_bestelaanvraag__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_bestelaanvraag__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_bestelaanvraag__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.BestelaanvraagDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_bestelaanvraag_kaartid_bestelaanvraag__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.BestelaanvraagDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_bestelaanvraag__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.BestelaanvraagDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_bestelaanvraag__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.BestelaanvraagDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_bestelaanvraag__documenten");
            });

            modelBuilder.Entity<BestelaanvraagEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bestelaanvraag__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_bestelaanvraag__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_bestelaanvraag__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.BestelaanvraagEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_bestelaanvraag__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.BestelaanvraagEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_bestelaanvraag_kaartid_bestelaanvraag__emailberichten");
            });

            modelBuilder.Entity<BestelaanvraagIncidentLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bestelaanvraag_incident_link");

                entity.HasIndex(e => e.Bestelaanvraagid)
                    .HasName("idx_bestelaanvraag_incident_link_bestelaanvraagid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_bestelaanvraag_incident_link_importid");

                entity.HasIndex(e => e.Incidentid)
                    .HasName("idx_bestelaanvraag_incident_link_incidentid");

                entity.HasIndex(e => new { e.Incidentid, e.Bestelaanvraagid })
                    .HasName("uidx_bestelaanvraag_incident_link_incidentid_bestelaanvraagid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelaanvraagid).HasColumnName("bestelaanvraagid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Incidentid).HasColumnName("incidentid");

                entity.HasOne(d => d.Bestelaanvraag)
                    .WithMany(p => p.BestelaanvraagIncidentLink)
                    .HasForeignKey(d => d.Bestelaanvraagid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_bestelaanvraag_bestelaanvraagid_bestelaanvraag_incident_link");

                entity.HasOne(d => d.Incident)
                    .WithMany(p => p.BestelaanvraagIncidentLink)
                    .HasForeignKey(d => d.Incidentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_incident_incidentid_bestelaanvraag_incident_link");
            });

            modelBuilder.Entity<BestelaanvraagLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bestelaanvraag__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_bestelaanvraag__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_bestelaanvraag__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_bestelaanvraag__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_bestelaanvraag__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.BestelaanvraagLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_bestelaanvraag_kaartid_bestelaanvraag__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.BestelaanvraagLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_bestelaanvraag__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.BestelaanvraagLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_bestelaanvraag__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.BestelaanvraagLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_bestelaanvraag__logboek");
            });

            modelBuilder.Entity<Bestellingen>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bestellingen");

                entity.HasIndex(e => e.Afmeldautorisatieid)
                    .HasName("idx_bestellingen_afmeldautorisatieid");

                entity.HasIndex(e => e.Afmelddatum)
                    .HasName("idx_bestellingen_afmelddatum");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_bestellingen_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_bestellingen_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_bestellingen_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_bestellingen_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_bestellingen_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_bestellingen_attvrijeopzoek5");

                entity.HasIndex(e => e.Behandelaarid)
                    .HasName("idx_bestellingen_behandelaarid");

                entity.HasIndex(e => e.Bestelaanvraagid)
                    .HasName("idx_bestellingen_bestelaanvraagid");

                entity.HasIndex(e => e.Bestelafmeldid)
                    .HasName("idx_bestellingen_bestelafmeldid");

                entity.HasIndex(e => e.Bestelautorisatieid)
                    .HasName("idx_bestellingen_bestelautorisatieid");

                entity.HasIndex(e => e.Besteldatum)
                    .HasName("idx_bestellingen_besteldatum");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_bestellingen_budgethouderid");

                entity.HasIndex(e => e.Contactpersoonid)
                    .HasName("idx_bestellingen_contactpersoonid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_bestellingen_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_bestellingen_datwijzig");

                entity.HasIndex(e => e.Geplandebesteldatum)
                    .HasName("idx_bestellingen_geplandebesteldatum");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_bestellingen_importid");

                entity.HasIndex(e => e.Landid1)
                    .HasName("idx_bestellingen_landid1");

                entity.HasIndex(e => e.Landid2)
                    .HasName("idx_bestellingen_landid2");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_bestellingen_leverancierid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_bestellingen_naam");

                entity.HasIndex(e => e.Ordernrdatum)
                    .HasName("idx_bestellingen_ordernrdatum");

                entity.HasIndex(e => e.RefAutorisator)
                    .HasName("idx_bestellingen_ref_autorisator");

                entity.HasIndex(e => e.RefBestelstatus)
                    .HasName("idx_bestellingen_ref_bestelstatus");

                entity.HasIndex(e => e.RefLeverancier)
                    .HasName("idx_bestellingen_ref_leverancier");

                entity.HasIndex(e => e.RefVestiging)
                    .HasName("idx_bestellingen_ref_vestiging");

                entity.HasIndex(e => e.RefVestiging2)
                    .HasName("idx_bestellingen_ref_vestiging2");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_bestellingen_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_bestellingen_statusid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_bestellingen_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_bestellingen_uidwijzig");

                entity.HasIndex(e => e.Verwachtdatum)
                    .HasName("idx_bestellingen_verwachtdatum");

                entity.HasIndex(e => e.Verzendkostenbtwsoortid)
                    .HasName("idx_bestellingen_verzendkostenbtwsoortid");

                entity.HasIndex(e => e.Vestigingcontactpersoonid)
                    .HasName("idx_bestellingen_vestigingcontactpersoonid");

                entity.HasIndex(e => e.Vestigingcontactpersoonid2)
                    .HasName("idx_bestellingen_vestigingcontactpersoonid2");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_bestellingen_vestigingid");

                entity.HasIndex(e => e.Vestigingid2)
                    .HasName("idx_bestellingen_vestigingid2");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_bestellingen_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_bestellingen_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_bestellingen_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_bestellingen_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_bestellingen_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_bestellingen_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_bestellingen_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantal).HasColumnName("aantal");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Actie)
                    .HasColumnName("actie")
                    .HasColumnType("ntext");

                entity.Property(e => e.Adresmemo1)
                    .HasColumnName("adresmemo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Adresmemo2)
                    .HasColumnName("adresmemo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afmeldautorisatieid).HasColumnName("afmeldautorisatieid");

                entity.Property(e => e.Afmelddatum)
                    .HasColumnName("afmelddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Behandelaarid).HasColumnName("behandelaarid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelaanvraagid).HasColumnName("bestelaanvraagid");

                entity.Property(e => e.Bestelafmeldid).HasColumnName("bestelafmeldid");

                entity.Property(e => e.Bestelautorisatieid).HasColumnName("bestelautorisatieid");

                entity.Property(e => e.Besteldatum)
                    .HasColumnName("besteldatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Contactpersoonid).HasColumnName("contactpersoonid");

                entity.Property(e => e.County1)
                    .IsRequired()
                    .HasColumnName("county1")
                    .HasMaxLength(50);

                entity.Property(e => e.County2)
                    .IsRequired()
                    .HasColumnName("county2")
                    .HasMaxLength(50);

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Geplandebesteldatum)
                    .HasColumnName("geplandebesteldatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Huisnummer1)
                    .IsRequired()
                    .HasColumnName("huisnummer1")
                    .HasMaxLength(50);

                entity.Property(e => e.Huisnummer2)
                    .IsRequired()
                    .HasColumnName("huisnummer2")
                    .HasMaxLength(50);

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Inkoopmemo)
                    .HasColumnName("inkoopmemo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Internbestelnr)
                    .IsRequired()
                    .HasColumnName("internbestelnr")
                    .HasMaxLength(30);

                entity.Property(e => e.KaleArtikelenPrijs)
                    .HasColumnName("kale_artikelen_prijs")
                    .HasColumnType("money");

                entity.Property(e => e.Korting)
                    .HasColumnName("korting")
                    .HasColumnType("money");

                entity.Property(e => e.Kortinginstellen).HasColumnName("kortinginstellen");

                entity.Property(e => e.Kortingprocent).HasColumnName("kortingprocent");

                entity.Property(e => e.Kortingsoort).HasColumnName("kortingsoort");

                entity.Property(e => e.Landid1).HasColumnName("landid1");

                entity.Property(e => e.Landid2).HasColumnName("landid2");

                entity.Property(e => e.LeverancierDebiteurennummer)
                    .IsRequired()
                    .HasColumnName("leverancier_debiteurennummer")
                    .HasMaxLength(24);

                entity.Property(e => e.LeverancierFactuurnummer)
                    .IsRequired()
                    .HasColumnName("leverancier_factuurnummer")
                    .HasMaxLength(40);

                entity.Property(e => e.LeverancierSpecificatie)
                    .IsRequired()
                    .HasColumnName("leverancier_specificatie")
                    .HasMaxLength(60);

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(30);

                entity.Property(e => e.Offertenr)
                    .IsRequired()
                    .HasColumnName("offertenr")
                    .HasMaxLength(30);

                entity.Property(e => e.Ordernr)
                    .IsRequired()
                    .HasColumnName("ordernr")
                    .HasMaxLength(30);

                entity.Property(e => e.Ordernrdatum)
                    .HasColumnName("ordernrdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Plaats1)
                    .IsRequired()
                    .HasColumnName("plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.Plaats2)
                    .IsRequired()
                    .HasColumnName("plaats2")
                    .HasMaxLength(30);

                entity.Property(e => e.Postcode1)
                    .IsRequired()
                    .HasColumnName("postcode1")
                    .HasMaxLength(15);

                entity.Property(e => e.Postcode2)
                    .IsRequired()
                    .HasColumnName("postcode2")
                    .HasMaxLength(15);

                entity.Property(e => e.RefAutorisator)
                    .IsRequired()
                    .HasColumnName("ref_autorisator")
                    .HasMaxLength(109);

                entity.Property(e => e.RefBestelstatus)
                    .IsRequired()
                    .HasColumnName("ref_bestelstatus")
                    .HasMaxLength(100);

                entity.Property(e => e.RefLeverancier)
                    .IsRequired()
                    .HasColumnName("ref_leverancier")
                    .HasMaxLength(60);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.RefVestiging2)
                    .IsRequired()
                    .HasColumnName("ref_vestiging2")
                    .HasMaxLength(60);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Straat1)
                    .IsRequired()
                    .HasColumnName("straat1")
                    .HasMaxLength(50);

                entity.Property(e => e.Straat2)
                    .IsRequired()
                    .HasColumnName("straat2")
                    .HasMaxLength(50);

                entity.Property(e => e.Totaalberekendekorting)
                    .HasColumnName("totaalberekendekorting")
                    .HasColumnType("money");

                entity.Property(e => e.Totaalbtw)
                    .HasColumnName("totaalbtw")
                    .HasColumnType("money");

                entity.Property(e => e.Totaalkosten)
                    .HasColumnName("totaalkosten")
                    .HasColumnType("money");

                entity.Property(e => e.Totaalkosteninclusiefbtw)
                    .HasColumnName("totaalkosteninclusiefbtw")
                    .HasColumnType("money");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vervoerder)
                    .IsRequired()
                    .HasColumnName("vervoerder")
                    .HasMaxLength(30);

                entity.Property(e => e.Verwachtdatum)
                    .HasColumnName("verwachtdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Verzendkosten)
                    .HasColumnName("verzendkosten")
                    .HasColumnType("money");

                entity.Property(e => e.Verzendkostenbtwsoortid).HasColumnName("verzendkostenbtwsoortid");

                entity.Property(e => e.VestigingDebiteurennummer)
                    .IsRequired()
                    .HasColumnName("vestiging_debiteurennummer")
                    .HasMaxLength(24);

                entity.Property(e => e.VestigingDebiteurennummer2)
                    .IsRequired()
                    .HasColumnName("vestiging_debiteurennummer2")
                    .HasMaxLength(24);

                entity.Property(e => e.VestigingEmail)
                    .IsRequired()
                    .HasColumnName("vestiging_email")
                    .HasMaxLength(100);

                entity.Property(e => e.VestigingEmail2)
                    .IsRequired()
                    .HasColumnName("vestiging_email2")
                    .HasMaxLength(100);

                entity.Property(e => e.VestigingFax)
                    .IsRequired()
                    .HasColumnName("vestiging_fax")
                    .HasMaxLength(25);

                entity.Property(e => e.VestigingFax2)
                    .IsRequired()
                    .HasColumnName("vestiging_fax2")
                    .HasMaxLength(25);

                entity.Property(e => e.VestigingSpecificatie)
                    .IsRequired()
                    .HasColumnName("vestiging_specificatie")
                    .HasMaxLength(60);

                entity.Property(e => e.VestigingSpecificatie2)
                    .IsRequired()
                    .HasColumnName("vestiging_specificatie2")
                    .HasMaxLength(60);

                entity.Property(e => e.VestigingTelefoon)
                    .IsRequired()
                    .HasColumnName("vestiging_telefoon")
                    .HasMaxLength(25);

                entity.Property(e => e.VestigingTelefoon2)
                    .IsRequired()
                    .HasColumnName("vestiging_telefoon2")
                    .HasMaxLength(25);

                entity.Property(e => e.VestigingWebsite)
                    .IsRequired()
                    .HasColumnName("vestiging_website")
                    .HasMaxLength(100);

                entity.Property(e => e.VestigingWebsite2)
                    .IsRequired()
                    .HasColumnName("vestiging_website2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vestigingcontactpersoonid).HasColumnName("vestigingcontactpersoonid");

                entity.Property(e => e.Vestigingcontactpersoonid2).HasColumnName("vestigingcontactpersoonid2");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Vestigingid2).HasColumnName("vestigingid2");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Afmeldautorisatie)
                    .WithMany(p => p.BestellingenAfmeldautorisatie)
                    .HasForeignKey(d => d.Afmeldautorisatieid)
                    .HasConstraintName("fk_actiedoor_afmeldautorisatieid_bestellingen");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Bestellingen)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_bestellingen");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.BestellingenAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_bestellingen");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.BestellingenAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_bestellingen");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.BestellingenAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_bestellingen");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.BestellingenAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_bestellingen");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.BestellingenAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_bestellingen");

                entity.HasOne(d => d.Behandelaar)
                    .WithMany(p => p.BestellingenBehandelaar)
                    .HasForeignKey(d => d.Behandelaarid)
                    .HasConstraintName("fk_actiedoor_behandelaarid_bestellingen");

                entity.HasOne(d => d.Bestelaanvraag)
                    .WithMany(p => p.BestellingenBestelaanvraag)
                    .HasForeignKey(d => d.Bestelaanvraagid)
                    .HasConstraintName("fk_bestelreden_bestelaanvraagid_bestellingen");

                entity.HasOne(d => d.Bestelafmeld)
                    .WithMany(p => p.BestellingenBestelafmeld)
                    .HasForeignKey(d => d.Bestelafmeldid)
                    .HasConstraintName("fk_bestelreden_bestelafmeldid_bestellingen");

                entity.HasOne(d => d.Bestelautorisatie)
                    .WithMany(p => p.BestellingenBestelautorisatie)
                    .HasForeignKey(d => d.Bestelautorisatieid)
                    .HasConstraintName("fk_actiedoor_bestelautorisatieid_bestellingen");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Bestellingen)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_bestellingen");

                entity.HasOne(d => d.Contactpersoon)
                    .WithMany(p => p.Bestellingen)
                    .HasForeignKey(d => d.Contactpersoonid)
                    .HasConstraintName("fk_leveranciercontactpersoon_contactpersoonid_bestellingen");

                entity.HasOne(d => d.Landid1Navigation)
                    .WithMany(p => p.BestellingenLandid1Navigation)
                    .HasForeignKey(d => d.Landid1)
                    .HasConstraintName("fk_land_landid1_bestellingen");

                entity.HasOne(d => d.Landid2Navigation)
                    .WithMany(p => p.BestellingenLandid2Navigation)
                    .HasForeignKey(d => d.Landid2)
                    .HasConstraintName("fk_land_landid2_bestellingen");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.BestellingenNavigation)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_bestellingen");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Bestellingen)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_bestelstatus_statusid_bestellingen");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.BestellingenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_bestellingen");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.BestellingenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_bestellingen");

                entity.HasOne(d => d.Verzendkostenbtwsoort)
                    .WithMany(p => p.Bestellingen)
                    .HasForeignKey(d => d.Verzendkostenbtwsoortid)
                    .HasConstraintName("fk_btw_verzendkostenbtwsoortid_bestellingen");

                entity.HasOne(d => d.Vestigingcontactpersoon)
                    .WithMany(p => p.BestellingenVestigingcontactpersoon)
                    .HasForeignKey(d => d.Vestigingcontactpersoonid)
                    .HasConstraintName("fk_persoon_vestigingcontactpersoonid_bestellingen");

                entity.HasOne(d => d.Vestigingcontactpersoonid2Navigation)
                    .WithMany(p => p.BestellingenVestigingcontactpersoonid2Navigation)
                    .HasForeignKey(d => d.Vestigingcontactpersoonid2)
                    .HasConstraintName("fk_persoon_vestigingcontactpersoonid2_bestellingen");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.BestellingenVestiging)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_bestellingen");

                entity.HasOne(d => d.Vestigingid2Navigation)
                    .WithMany(p => p.BestellingenVestigingid2Navigation)
                    .HasForeignKey(d => d.Vestigingid2)
                    .HasConstraintName("fk_vestiging_vestigingid2_bestellingen");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.BestellingenVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_bestellingen");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.BestellingenVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_bestellingen");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.BestellingenVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_bestellingen");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.BestellingenVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_bestellingen");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.BestellingenVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_bestellingen");
            });

            modelBuilder.Entity<BestellingenDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bestellingen__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_bestellingen__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_bestellingen__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_bestellingen__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_bestellingen__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_bestellingen__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_bestellingen__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.BestellingenDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_bestellingen_kaartid_bestellingen__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.BestellingenDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_bestellingen__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.BestellingenDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_bestellingen__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.BestellingenDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_bestellingen__documenten");
            });

            modelBuilder.Entity<BestellingenEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bestellingen__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_bestellingen__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_bestellingen__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_bestellingen__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.BestellingenEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_bestellingen__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.BestellingenEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_bestellingen_kaartid_bestellingen__emailberichten");
            });

            modelBuilder.Entity<BestellingenLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bestellingen__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_bestellingen__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_bestellingen__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_bestellingen__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_bestellingen__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_bestellingen__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_bestellingen__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.BestellingenLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_bestellingen_kaartid_bestellingen__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.BestellingenLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_bestellingen__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.BestellingenLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_bestellingen__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.BestellingenLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_bestellingen__logboek");
            });

            modelBuilder.Entity<Bestelreden>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bestelreden");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_bestelreden_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_bestelreden_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_bestelreden_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.Soort).HasColumnName("soort");
            });

            modelBuilder.Entity<Bestelstatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bestelstatus");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_bestelstatus_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_bestelstatus_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_bestelstatus_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Bezoeker>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bezoeker");

                entity.HasIndex(e => e.Aanmelderafdelingid)
                    .HasName("idx_bezoeker_aanmelderafdelingid");

                entity.HasIndex(e => e.Aanmelderbudgethouderid)
                    .HasName("idx_bezoeker_aanmelderbudgethouderid");

                entity.HasIndex(e => e.Aanmelderlokatieid)
                    .HasName("idx_bezoeker_aanmelderlokatieid");

                entity.HasIndex(e => e.Aanmeldervestigingid)
                    .HasName("idx_bezoeker_aanmeldervestigingid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_bezoeker_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_bezoeker_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_bezoeker_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_bezoeker_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_bezoeker_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_bezoeker_attvrijeopzoek5");

                entity.HasIndex(e => e.Extraaid)
                    .HasName("idx_bezoeker_extraaid");

                entity.HasIndex(e => e.Extraapersoonid)
                    .HasName("idx_bezoeker_extraapersoonid");

                entity.HasIndex(e => e.Extrabid)
                    .HasName("idx_bezoeker_extrabid");

                entity.HasIndex(e => e.Extrabpersoonid)
                    .HasName("idx_bezoeker_extrabpersoonid");

                entity.HasIndex(e => e.Identiteitsbewijsid)
                    .HasName("idx_bezoeker_identiteitsbewijsid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_bezoeker_importid");

                entity.HasIndex(e => e.Parkeerplaatsid)
                    .HasName("idx_bezoeker_parkeerplaatsid");

                entity.HasIndex(e => e.Passid)
                    .HasName("idx_bezoeker_passid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_bezoeker_persoonid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_bezoeker_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_bezoeker_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_bezoeker_uidwijzig");

                entity.HasIndex(e => e.Verwachteaankomst)
                    .HasName("idx_bezoeker_verwachteaankomst");

                entity.HasIndex(e => e.Verwachtvertrek)
                    .HasName("idx_bezoeker_verwachtvertrek");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_bezoeker_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_bezoeker_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_bezoeker_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_bezoeker_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_bezoeker_vrijeopzoek5");

                entity.HasIndex(e => e.Werkelijkeaankomst)
                    .HasName("idx_bezoeker_werkelijkeaankomst");

                entity.HasIndex(e => e.Werkelijkvertrek)
                    .HasName("idx_bezoeker_werkelijkvertrek");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aanmelderafdelingid).HasColumnName("aanmelderafdelingid");

                entity.Property(e => e.Aanmelderbudgethouderid).HasColumnName("aanmelderbudgethouderid");

                entity.Property(e => e.Aanmelderemail)
                    .IsRequired()
                    .HasColumnName("aanmelderemail")
                    .HasMaxLength(100);

                entity.Property(e => e.Aanmelderlokatieid).HasColumnName("aanmelderlokatieid");

                entity.Property(e => e.Aanmeldernaam)
                    .IsRequired()
                    .HasColumnName("aanmeldernaam")
                    .HasMaxLength(109);

                entity.Property(e => e.Aanmeldertelefoon)
                    .IsRequired()
                    .HasColumnName("aanmeldertelefoon")
                    .HasMaxLength(25);

                entity.Property(e => e.Aanmeldervestigingid).HasColumnName("aanmeldervestigingid");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bezoekerbedrijf)
                    .IsRequired()
                    .HasColumnName("bezoekerbedrijf")
                    .HasMaxLength(60);

                entity.Property(e => e.Canceldate)
                    .HasColumnName("canceldate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Commentaar)
                    .HasColumnName("commentaar")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasColumnName("email")
                    .HasMaxLength(100);

                entity.Property(e => e.Extraaid).HasColumnName("extraaid");

                entity.Property(e => e.Extraapersoonid).HasColumnName("extraapersoonid");

                entity.Property(e => e.Extrabid).HasColumnName("extrabid");

                entity.Property(e => e.Extrabpersoonid).HasColumnName("extrabpersoonid");

                entity.Property(e => e.Identiteitsbewijsid).HasColumnName("identiteitsbewijsid");

                entity.Property(e => e.Identiteitsnummer)
                    .IsRequired()
                    .HasColumnName("identiteitsnummer")
                    .HasMaxLength(100);

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Korteomschrijving)
                    .IsRequired()
                    .HasColumnName("korteomschrijving")
                    .HasMaxLength(100);

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(85);

                entity.Property(e => e.Nummer)
                    .IsRequired()
                    .HasColumnName("nummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Nummerplaat)
                    .IsRequired()
                    .HasColumnName("nummerplaat")
                    .HasMaxLength(20);

                entity.Property(e => e.Parkeerplaatsid).HasColumnName("parkeerplaatsid");

                entity.Property(e => e.Passid).HasColumnName("passid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.RefParkeerplaats)
                    .IsRequired()
                    .HasColumnName("ref_parkeerplaats")
                    .HasMaxLength(100);

                entity.Property(e => e.RefPass)
                    .IsRequired()
                    .HasColumnName("ref_pass")
                    .HasMaxLength(100);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Telefoon)
                    .IsRequired()
                    .HasColumnName("telefoon")
                    .HasMaxLength(25);

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Verwachteaankomst)
                    .HasColumnName("verwachteaankomst")
                    .HasColumnType("datetime");

                entity.Property(e => e.Verwachtvertrek)
                    .HasColumnName("verwachtvertrek")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Werkelijkeaankomst)
                    .HasColumnName("werkelijkeaankomst")
                    .HasColumnType("datetime");

                entity.Property(e => e.Werkelijkvertrek)
                    .HasColumnName("werkelijkvertrek")
                    .HasColumnType("datetime");

                entity.HasOne(d => d.Aanmelderafdeling)
                    .WithMany(p => p.Bezoeker)
                    .HasForeignKey(d => d.Aanmelderafdelingid)
                    .HasConstraintName("fk_afdeling_aanmelderafdelingid_bezoeker");

                entity.HasOne(d => d.Aanmelderbudgethouder)
                    .WithMany(p => p.Bezoeker)
                    .HasForeignKey(d => d.Aanmelderbudgethouderid)
                    .HasConstraintName("fk_budgethouder_aanmelderbudgethouderid_bezoeker");

                entity.HasOne(d => d.Aanmelderlokatie)
                    .WithMany(p => p.Bezoeker)
                    .HasForeignKey(d => d.Aanmelderlokatieid)
                    .HasConstraintName("fk_locatie_aanmelderlokatieid_bezoeker");

                entity.HasOne(d => d.Aanmeldervestiging)
                    .WithMany(p => p.Bezoeker)
                    .HasForeignKey(d => d.Aanmeldervestigingid)
                    .HasConstraintName("fk_vestiging_aanmeldervestigingid_bezoeker");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Bezoeker)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_bezoeker");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.BezoekerAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_bezoeker");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.BezoekerAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_bezoeker");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.BezoekerAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_bezoeker");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.BezoekerAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_bezoeker");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.BezoekerAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_bezoeker");

                entity.HasOne(d => d.Extraa)
                    .WithMany(p => p.Bezoeker)
                    .HasForeignKey(d => d.Extraaid)
                    .HasConstraintName("fk_extraa_extraaid_bezoeker");

                entity.HasOne(d => d.Extraapersoon)
                    .WithMany(p => p.Bezoeker)
                    .HasForeignKey(d => d.Extraapersoonid)
                    .HasConstraintName("fk_extraapersoon_extraapersoonid_bezoeker");

                entity.HasOne(d => d.Extrab)
                    .WithMany(p => p.Bezoeker)
                    .HasForeignKey(d => d.Extrabid)
                    .HasConstraintName("fk_extrab_extrabid_bezoeker");

                entity.HasOne(d => d.Extrabpersoon)
                    .WithMany(p => p.Bezoeker)
                    .HasForeignKey(d => d.Extrabpersoonid)
                    .HasConstraintName("fk_extrabpersoon_extrabpersoonid_bezoeker");

                entity.HasOne(d => d.Identiteitsbewijs)
                    .WithMany(p => p.Bezoeker)
                    .HasForeignKey(d => d.Identiteitsbewijsid)
                    .HasConstraintName("fk_identiteitsbewijs_identiteitsbewijsid_bezoeker");

                entity.HasOne(d => d.Parkeerplaats)
                    .WithMany(p => p.Bezoeker)
                    .HasForeignKey(d => d.Parkeerplaatsid)
                    .HasConstraintName("fk_bezoekerparkeerplaats_parkeerplaatsid_bezoeker");

                entity.HasOne(d => d.Pass)
                    .WithMany(p => p.Bezoeker)
                    .HasForeignKey(d => d.Passid)
                    .HasConstraintName("fk_bezoekerpass_passid_bezoeker");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Bezoeker)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_bezoeker");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.BezoekerUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_bezoeker");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.BezoekerUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_bezoeker");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.BezoekerVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_bezoeker");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.BezoekerVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_bezoeker");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.BezoekerVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_bezoeker");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.BezoekerVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_bezoeker");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.BezoekerVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_bezoeker");
            });

            modelBuilder.Entity<BezoekerDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bezoeker__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_bezoeker__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_bezoeker__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_bezoeker__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_bezoeker__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.BezoekerDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_bezoeker_kaartid_bezoeker__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.BezoekerDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_bezoeker__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.BezoekerDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_bezoeker__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.BezoekerDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_bezoeker__documenten");
            });

            modelBuilder.Entity<BezoekerEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bezoeker__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_bezoeker__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_bezoeker__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.BezoekerEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_bezoeker__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.BezoekerEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_bezoeker_kaartid_bezoeker__emailberichten");
            });

            modelBuilder.Entity<BezoekerLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bezoeker__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_bezoeker__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_bezoeker__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_bezoeker__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_bezoeker__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.BezoekerLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_bezoeker_kaartid_bezoeker__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.BezoekerLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_bezoeker__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.BezoekerLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_bezoeker__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.BezoekerLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_bezoeker__logboek");
            });

            modelBuilder.Entity<BezoekerMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bezoeker__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_bezoeker__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_bezoeker__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_bezoeker__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_bezoeker__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_bezoeker__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_bezoeker__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_bezoeker__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_bezoeker__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_bezoeker__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.BezoekerMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_bezoeker__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.BezoekerMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_bezoeker_parentid_bezoeker__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.BezoekerMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_bezoeker__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.BezoekerMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_bezoeker__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.BezoekerMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_bezoeker__memo_history");
            });

            modelBuilder.Entity<Bezoekerparkeerplaats>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bezoekerparkeerplaats");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_bezoekerparkeerplaats_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_bezoekerparkeerplaats_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_bezoekerparkeerplaats_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Bezoekerpass>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("bezoekerpass");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_bezoekerpass_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_bezoekerpass_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_bezoekerpass_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<BranchDesignation>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("branch_designation");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_branch_designation_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_branch_designation_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_branch_designation_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Branchfilter>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("branchfilter");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_branchfilter_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_branchfilter_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_branchfilter_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Active).HasColumnName("active");

                entity.Property(e => e.Allowescalate).HasColumnName("allowescalate");

                entity.Property(e => e.Branchtype).HasColumnName("branchtype");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("ntext");

                entity.Property(e => e.Head2sub).HasColumnName("head2sub");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(100);

                entity.Property(e => e.Shownobranch).HasColumnName("shownobranch");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Sub2head).HasColumnName("sub2head");

                entity.Property(e => e.Sub2sub).HasColumnName("sub2sub");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Userscope).HasColumnName("userscope");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.BranchfilterUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_branchfilter");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.BranchfilterUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_branchfilter");
            });

            modelBuilder.Entity<BranchfilterBranches>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("branchfilter_branches");

                entity.HasIndex(e => e.Branchfilterid)
                    .HasName("idx_branchfilter_branches_branchfilterid");

                entity.HasIndex(e => e.Branchid)
                    .HasName("idx_branchfilter_branches_branchid");

                entity.HasIndex(e => new { e.Branchfilterid, e.Branchid })
                    .HasName("uidx_branchfilter_branches_branchfilterid_branchid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Branchfilterid).HasColumnName("branchfilterid");

                entity.Property(e => e.Branchid).HasColumnName("branchid");

                entity.HasOne(d => d.Branchfilter)
                    .WithMany(p => p.BranchfilterBranches)
                    .HasForeignKey(d => d.Branchfilterid)
                    .HasConstraintName("fk_branchfilter_branchfilterid_branchfilter_branches");

                entity.HasOne(d => d.Branch)
                    .WithMany(p => p.BranchfilterBranches)
                    .HasForeignKey(d => d.Branchid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_vestiging_branchid_branchfilter_branches");
            });

            modelBuilder.Entity<Branchfiltercache>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("branchfiltercache");

                entity.HasIndex(e => e.Branchid)
                    .HasName("idx_branchfiltercache_branchid");

                entity.HasIndex(e => e.Userid)
                    .HasName("idx_branchfiltercache_userid");

                entity.HasIndex(e => new { e.Userid, e.Branchid })
                    .HasName("idx_branchfiltercache_userid_branchid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Branchid).HasColumnName("branchid");

                entity.Property(e => e.Userid).HasColumnName("userid");

                entity.HasOne(d => d.Branch)
                    .WithMany(p => p.Branchfiltercache)
                    .HasForeignKey(d => d.Branchid)
                    .HasConstraintName("fk_vestiging_branchid_branchfiltercache");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Branchfiltercache)
                    .HasForeignKey(d => d.Userid)
                    .HasConstraintName("fk_gebruiker_userid_branchfiltercache");
            });

            modelBuilder.Entity<BranchfilterOperator>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("branchfilter_operator");

                entity.HasIndex(e => e.Branchfilterid)
                    .HasName("idx_branchfilter_operator_branchfilterid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_branchfilter_operator_operatorid");

                entity.HasIndex(e => new { e.Branchfilterid, e.Operatorid })
                    .HasName("uidx_branchfilter_operator_branchfilterid_operatorid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Branchfilterid).HasColumnName("branchfilterid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.HasOne(d => d.Branchfilter)
                    .WithMany(p => p.BranchfilterOperator)
                    .HasForeignKey(d => d.Branchfilterid)
                    .HasConstraintName("fk_branchfilter_branchfilterid_branchfilter_operator");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.BranchfilterOperator)
                    .HasForeignKey(d => d.Operatorid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_actiedoor_operatorid_branchfilter_operator");
            });

            modelBuilder.Entity<BranchMeasurement>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("branch_measurement");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_branch_measurement_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_branch_measurement_parentid");

                entity.HasIndex(e => e.Personid)
                    .HasName("idx_branch_measurement_personid");

                entity.HasIndex(e => e.Typeid)
                    .HasName("idx_branch_measurement_typeid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_branch_measurement_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_branch_measurement_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Measurement).HasColumnName("measurement");

                entity.Property(e => e.Measurementdate)
                    .HasColumnName("measurementdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Personid).HasColumnName("personid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Typeid).HasColumnName("typeid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.BranchMeasurement)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_vestiging_parentid_branch_measurement");

                entity.HasOne(d => d.Person)
                    .WithMany(p => p.BranchMeasurement)
                    .HasForeignKey(d => d.Personid)
                    .HasConstraintName("fk_persoon_personid_branch_measurement");

                entity.HasOne(d => d.Type)
                    .WithMany(p => p.BranchMeasurement)
                    .HasForeignKey(d => d.Typeid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_measurement_type_typeid_branch_measurement");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.BranchMeasurementUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_branch_measurement");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.BranchMeasurementUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_branch_measurement");
            });

            modelBuilder.Entity<Btw>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("btw");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_btw_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_btw_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_btw_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Percentage).HasColumnName("percentage");

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Budgethouder>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("budgethouder");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_budgethouder_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_budgethouder_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_budgethouder_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<BuildingLevelEpc>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("building_level_epc");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_building_level_epc_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_building_level_epc_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_building_level_epc_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<BuildingZone>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("building_zone");

                entity.HasIndex(e => e.Branchid)
                    .HasName("idx_building_zone_branchid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Branchid).HasColumnName("branchid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.HasOne(d => d.Branch)
                    .WithMany(p => p.BuildingZone)
                    .HasForeignKey(d => d.Branchid)
                    .HasConstraintName("fk_vestiging_branchid_building_zone");
            });

            modelBuilder.Entity<Campaign>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("campaign");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_campaign_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_campaign_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_campaign_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_campaign_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_campaign_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_campaign_attvrijeopzoek5");

                entity.HasIndex(e => e.Enddate)
                    .HasName("idx_campaign_enddate");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_campaign_importid");

                entity.HasIndex(e => e.Startdate)
                    .HasName("idx_campaign_startdate");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_campaign_status");

                entity.HasIndex(e => e.Surveyid)
                    .HasName("idx_campaign_surveyid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_campaign_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_campaign_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_campaign_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_campaign_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_campaign_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_campaign_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_campaign_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Enddate)
                    .HasColumnName("enddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invitationemailtext)
                    .HasColumnName("invitationemailtext")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(80);

                entity.Property(e => e.Notefinish)
                    .HasColumnName("notefinish")
                    .HasColumnType("ntext");

                entity.Property(e => e.Noteintroduction)
                    .HasColumnName("noteintroduction")
                    .HasColumnType("ntext");

                entity.Property(e => e.Startdate)
                    .HasColumnName("startdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Surveyid).HasColumnName("surveyid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Campaign)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_campaign");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.CampaignAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_campaign");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.CampaignAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_campaign");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.CampaignAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_campaign");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.CampaignAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_campaign");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.CampaignAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_campaign");

                entity.HasOne(d => d.Survey)
                    .WithMany(p => p.Campaign)
                    .HasForeignKey(d => d.Surveyid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_survey_surveyid_campaign");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.CampaignUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_campaign");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.CampaignUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_campaign");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.CampaignVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_campaign");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.CampaignVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_campaign");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.CampaignVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_campaign");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.CampaignVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_campaign");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.CampaignVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_campaign");
            });

            modelBuilder.Entity<CampaignDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("campaign__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_campaign__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_campaign__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_campaign__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_campaign__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.CampaignDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_campaign_kaartid_campaign__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.CampaignDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_campaign__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.CampaignDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_campaign__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.CampaignDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_campaign__documenten");
            });

            modelBuilder.Entity<CampaignEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("campaign__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_campaign__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_campaign__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.CampaignEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_campaign__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.CampaignEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_campaign_kaartid_campaign__emailberichten");
            });

            modelBuilder.Entity<CampaignLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("campaign__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_campaign__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_campaign__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_campaign__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_campaign__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.CampaignLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_campaign_kaartid_campaign__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.CampaignLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_campaign__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.CampaignLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_campaign__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.CampaignLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_campaign__logboek");
            });

            modelBuilder.Entity<Campaignmailing>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("campaignmailing");

                entity.HasIndex(e => e.Campaignid)
                    .HasName("idx_campaignmailing_campaignid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_campaignmailing_importid");

                entity.HasIndex(e => e.Incidentselectionid)
                    .HasName("idx_campaignmailing_incidentselectionid");

                entity.HasIndex(e => e.Invitationmailid)
                    .HasName("idx_campaignmailing_invitationmailid");

                entity.HasIndex(e => e.Personselectionid)
                    .HasName("idx_campaignmailing_personselectionid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_campaignmailing_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_campaignmailing_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_campaignmailing_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Campaignid).HasColumnName("campaignid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Incidentselectionid).HasColumnName("incidentselectionid");

                entity.Property(e => e.Invitationmailid).HasColumnName("invitationmailid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(60);

                entity.Property(e => e.Personselectionid).HasColumnName("personselectionid");

                entity.Property(e => e.Randomselectionsize).HasColumnName("randomselectionsize");

                entity.Property(e => e.Selectiontype).HasColumnName("selectiontype");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Userandomselection).HasColumnName("userandomselection");

                entity.HasOne(d => d.Campaign)
                    .WithMany(p => p.Campaignmailing)
                    .HasForeignKey(d => d.Campaignid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_campaign_campaignid_campaignmailing");

                entity.HasOne(d => d.Incidentselection)
                    .WithMany(p => p.CampaignmailingIncidentselection)
                    .HasForeignKey(d => d.Incidentselectionid)
                    .HasConstraintName("fk_selvast_incidentselectionid_campaignmailing");

                entity.HasOne(d => d.Invitationmail)
                    .WithMany(p => p.Campaignmailing)
                    .HasForeignKey(d => d.Invitationmailid)
                    .HasConstraintName("fk_mailactie_invitationmailid_campaignmailing");

                entity.HasOne(d => d.Personselection)
                    .WithMany(p => p.CampaignmailingPersonselection)
                    .HasForeignKey(d => d.Personselectionid)
                    .HasConstraintName("fk_selvast_personselectionid_campaignmailing");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.CampaignmailingUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_campaignmailing");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.CampaignmailingUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_campaignmailing");
            });

            modelBuilder.Entity<CampaignmailingDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("campaignmailing__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_campaignmailing__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_campaignmailing__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_campaignmailing__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_campaignmailing__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.CampaignmailingDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_campaignmailing_kaartid_campaignmailing__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.CampaignmailingDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_campaignmailing__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.CampaignmailingDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_campaignmailing__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.CampaignmailingDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_campaignmailing__documenten");
            });

            modelBuilder.Entity<CampaignmailingEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("campaignmailing__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_campaignmailing__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_campaignmailing__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.CampaignmailingEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_campaignmailing__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.CampaignmailingEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_campaignmailing_kaartid_campaignmailing__emailberichten");
            });

            modelBuilder.Entity<Campaignmailinginvitation>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("campaignmailinginvitation");

                entity.HasIndex(e => e.Campaignmailingid)
                    .HasName("idx_campaignmailinginvitation_campaignmailingid");

                entity.HasIndex(e => e.Incidentid)
                    .HasName("idx_campaignmailinginvitation_incidentid");

                entity.HasIndex(e => e.Invitationdate)
                    .HasName("idx_campaignmailinginvitation_invitationdate");

                entity.HasIndex(e => e.Invitationhash)
                    .HasName("uidx_campaignmailinginvitation_invitationhash")
                    .IsUnique();

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_campaignmailinginvitation_persoonid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_campaignmailinginvitation_status");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Campaignmailingid).HasColumnName("campaignmailingid");

                entity.Property(e => e.Incidentid).HasColumnName("incidentid");

                entity.Property(e => e.Invitationdate)
                    .HasColumnName("invitationdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Invitationhash)
                    .IsRequired()
                    .HasColumnName("invitationhash")
                    .HasColumnType("nchar(32)");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.HasOne(d => d.Campaignmailing)
                    .WithMany(p => p.Campaignmailinginvitation)
                    .HasForeignKey(d => d.Campaignmailingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_campaignmailing_campaignmailingid_campaignmailinginvitation");

                entity.HasOne(d => d.Incident)
                    .WithMany(p => p.Campaignmailinginvitation)
                    .HasForeignKey(d => d.Incidentid)
                    .HasConstraintName("fk_incident_incidentid_campaignmailinginvitation");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Campaignmailinginvitation)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_campaignmailinginvitation");
            });

            modelBuilder.Entity<CampaignmailingLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("campaignmailing__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_campaignmailing__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_campaignmailing__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_campaignmailing__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_campaignmailing__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.CampaignmailingLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_campaignmailing_kaartid_campaignmailing__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.CampaignmailingLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_campaignmailing__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.CampaignmailingLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_campaignmailing__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.CampaignmailingLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_campaignmailing__logboek");
            });

            modelBuilder.Entity<CampaignmailingMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("campaignmailing__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_campaignmailing__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_campaignmailing__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_campaignmailing__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_campaignmailing__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_campaignmailing__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_campaignmailing__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_campaignmailing__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_campaignmailing__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_campaignmailing__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.CampaignmailingMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_campaignmailing__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.CampaignmailingMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_campaignmailing_parentid_campaignmailing__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.CampaignmailingMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_campaignmailing__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.CampaignmailingMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_campaignmailing__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.CampaignmailingMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_campaignmailing__memo_history");
            });

            modelBuilder.Entity<CampaignMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("campaign__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_campaign__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_campaign__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_campaign__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_campaign__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_campaign__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_campaign__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_campaign__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_campaign__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_campaign__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.CampaignMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_campaign__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.CampaignMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_campaign_parentid_campaign__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.CampaignMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_campaign__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.CampaignMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_campaign__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.CampaignMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_campaign__memo_history");
            });

            modelBuilder.Entity<Campaignresponse>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("campaignresponse");

                entity.HasIndex(e => e.Campaignmailinginvitationid)
                    .HasName("idx_campaignresponse_campaignmailinginvitationid");

                entity.HasIndex(e => e.Surveyanswerid)
                    .HasName("idx_campaignresponse_surveyanswerid");

                entity.HasIndex(e => e.Surveyquestionid)
                    .HasName("idx_campaignresponse_surveyquestionid");

                entity.HasIndex(e => new { e.Campaignmailinginvitationid, e.Surveyanswerid })
                    .HasName("uidx_campaignresponse_campaignmailinginvitationid_surveyanswerid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Campaignmailinginvitationid).HasColumnName("campaignmailinginvitationid");

                entity.Property(e => e.Openanswer)
                    .HasColumnName("openanswer")
                    .HasColumnType("ntext");

                entity.Property(e => e.Surveyanswerid).HasColumnName("surveyanswerid");

                entity.Property(e => e.Surveyquestionid).HasColumnName("surveyquestionid");

                entity.HasOne(d => d.Campaignmailinginvitation)
                    .WithMany(p => p.Campaignresponse)
                    .HasForeignKey(d => d.Campaignmailinginvitationid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_campaignmailinginvitation_campaignmailinginvitationid_campaignresponse");

                entity.HasOne(d => d.Surveyanswer)
                    .WithMany(p => p.Campaignresponse)
                    .HasForeignKey(d => d.Surveyanswerid)
                    .HasConstraintName("fk_surveyanswer_surveyanswerid_campaignresponse");

                entity.HasOne(d => d.Surveyquestion)
                    .WithMany(p => p.Campaignresponse)
                    .HasForeignKey(d => d.Surveyquestionid)
                    .HasConstraintName("fk_surveyquestion_surveyquestionid_campaignresponse");
            });

            modelBuilder.Entity<CartContents>(entity =>
            {
                entity.ToTable("cart_contents");

                entity.HasIndex(e => e.CartId)
                    .HasName("idx_cart_contents_cart_id");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .ValueGeneratedNever();

                entity.Property(e => e.CartId).HasColumnName("cart_id");

                entity.Property(e => e.ItemId).HasColumnName("item_id");

                entity.HasOne(d => d.Cart)
                    .WithMany(p => p.CartContents)
                    .HasForeignKey(d => d.CartId)
                    .HasConstraintName("fk_carts_cart_id_cart_contents");
            });

            modelBuilder.Entity<Carts>(entity =>
            {
                entity.ToTable("carts");

                entity.HasIndex(e => e.UserId)
                    .HasName("idx_carts_user_id");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .ValueGeneratedNever();

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(255);

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Carts)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("fk_gebruiker_user_id_carts");
            });

            modelBuilder.Entity<Categoryfilter>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("categoryfilter");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_categoryfilter_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_categoryfilter_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_categoryfilter_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Active).HasColumnName("active");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("ntext");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(100);

                entity.Property(e => e.Shownocategory).HasColumnName("shownocategory");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Userscope).HasColumnName("userscope");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.CategoryfilterUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_categoryfilter");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.CategoryfilterUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_categoryfilter");
            });

            modelBuilder.Entity<Categoryfiltercache>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("categoryfiltercache");

                entity.HasIndex(e => e.Categoryid)
                    .HasName("idx_categoryfiltercache_categoryid");

                entity.HasIndex(e => e.Userid)
                    .HasName("idx_categoryfiltercache_userid");

                entity.HasIndex(e => new { e.Userid, e.Categoryid })
                    .HasName("idx_categoryfiltercache_userid_categoryid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Categoryid).HasColumnName("categoryid");

                entity.Property(e => e.Userid).HasColumnName("userid");

                entity.HasOne(d => d.Category)
                    .WithMany(p => p.Categoryfiltercache)
                    .HasForeignKey(d => d.Categoryid)
                    .HasConstraintName("fk_classificatie_categoryid_categoryfiltercache");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Categoryfiltercache)
                    .HasForeignKey(d => d.Userid)
                    .HasConstraintName("fk_gebruiker_userid_categoryfiltercache");
            });

            modelBuilder.Entity<CategoryfilterCategory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("categoryfilter_category");

                entity.HasIndex(e => e.Categoryfilterid)
                    .HasName("idx_categoryfilter_category_categoryfilterid");

                entity.HasIndex(e => e.Categoryid)
                    .HasName("idx_categoryfilter_category_categoryid");

                entity.HasIndex(e => new { e.Categoryfilterid, e.Categoryid })
                    .HasName("uidx_categoryfilter_category_categoryfilterid_categoryid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Categoryfilterid).HasColumnName("categoryfilterid");

                entity.Property(e => e.Categoryid).HasColumnName("categoryid");

                entity.HasOne(d => d.Categoryfilter)
                    .WithMany(p => p.CategoryfilterCategory)
                    .HasForeignKey(d => d.Categoryfilterid)
                    .HasConstraintName("fk_categoryfilter_categoryfilterid_categoryfilter_category");

                entity.HasOne(d => d.Category)
                    .WithMany(p => p.CategoryfilterCategory)
                    .HasForeignKey(d => d.Categoryid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_classificatie_categoryid_categoryfilter_category");
            });

            modelBuilder.Entity<CategoryfilterOperator>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("categoryfilter_operator");

                entity.HasIndex(e => e.Categoryfilterid)
                    .HasName("idx_categoryfilter_operator_categoryfilterid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_categoryfilter_operator_operatorid");

                entity.HasIndex(e => new { e.Categoryfilterid, e.Operatorid })
                    .HasName("uidx_categoryfilter_operator_categoryfilterid_operatorid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Categoryfilterid).HasColumnName("categoryfilterid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.HasOne(d => d.Categoryfilter)
                    .WithMany(p => p.CategoryfilterOperator)
                    .HasForeignKey(d => d.Categoryfilterid)
                    .HasConstraintName("fk_categoryfilter_categoryfilterid_categoryfilter_operator");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.CategoryfilterOperator)
                    .HasForeignKey(d => d.Operatorid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_actiedoor_operatorid_categoryfilter_operator");
            });

            modelBuilder.Entity<Change>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change");

                entity.HasIndex(e => e.Aanmelderafdelingid)
                    .HasName("idx_change_aanmelderafdelingid");

                entity.HasIndex(e => e.Aanmelderbudgethouderid)
                    .HasName("idx_change_aanmelderbudgethouderid");

                entity.HasIndex(e => e.Aanmelderlokatieid)
                    .HasName("idx_change_aanmelderlokatieid");

                entity.HasIndex(e => e.Aanmeldervestigingid)
                    .HasName("idx_change_aanmeldervestigingid");

                entity.HasIndex(e => e.Appointmentid)
                    .HasName("idx_change_appointmentid");

                entity.HasIndex(e => e.Archivereasonid)
                    .HasName("idx_change_archivereasonid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_change_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_change_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_change_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_change_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_change_attvrijeopzoek5");

                entity.HasIndex(e => e.Authorizationdate)
                    .HasName("idx_change_authorizationdate");

                entity.HasIndex(e => e.Benefitid)
                    .HasName("idx_change_benefitid");

                entity.HasIndex(e => e.Branchid)
                    .HasName("idx_change_branchid");

                entity.HasIndex(e => e.Calldate)
                    .HasName("idx_change_calldate");

                entity.HasIndex(e => e.Canceldate)
                    .HasName("idx_change_canceldate");

                entity.HasIndex(e => e.Canceledbyoperatorid)
                    .HasName("idx_change_canceledbyoperatorid");

                entity.HasIndex(e => e.Canceledbypersonid)
                    .HasName("idx_change_canceledbypersonid");

                entity.HasIndex(e => e.Cancelreasonid)
                    .HasName("idx_change_cancelreasonid");

                entity.HasIndex(e => e.Categoryid)
                    .HasName("idx_change_categoryid");

                entity.HasIndex(e => e.Closed)
                    .HasName("idx_change_closed");

                entity.HasIndex(e => e.Closeddate)
                    .HasName("idx_change_closeddate");

                entity.HasIndex(e => e.Completed)
                    .HasName("idx_change_completed");

                entity.HasIndex(e => e.Completeddate)
                    .HasName("idx_change_completeddate");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_change_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_change_datwijzig");

                entity.HasIndex(e => e.EvalAuthoperatorid)
                    .HasName("idx_change_eval_authoperatorid");

                entity.HasIndex(e => e.EvalAuthpersonid)
                    .HasName("idx_change_eval_authpersonid");

                entity.HasIndex(e => e.Extraaid)
                    .HasName("idx_change_extraaid");

                entity.HasIndex(e => e.Extraapersoonid)
                    .HasName("idx_change_extraapersoonid");

                entity.HasIndex(e => e.Extrabid)
                    .HasName("idx_change_extrabid");

                entity.HasIndex(e => e.Extrabpersoonid)
                    .HasName("idx_change_extrabpersoonid");

                entity.HasIndex(e => e.Finaldate)
                    .HasName("idx_change_finaldate");

                entity.HasIndex(e => e.Impactid)
                    .HasName("idx_change_impactid");

                entity.HasIndex(e => e.Implementationdate)
                    .HasName("idx_change_implementationdate");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_change_importid");

                entity.HasIndex(e => e.Incidentid)
                    .HasName("idx_change_incidentid");

                entity.HasIndex(e => e.Locationid)
                    .HasName("idx_change_locationid");

                entity.HasIndex(e => e.Managerid)
                    .HasName("idx_change_managerid");

                entity.HasIndex(e => e.Milestoneid)
                    .HasName("idx_change_milestoneid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_change_objectid");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_change_operatorgroupid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_change_operatorid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_change_persoonid");

                entity.HasIndex(e => e.Plannedauthdate)
                    .HasName("idx_change_plannedauthdate");

                entity.HasIndex(e => e.Plannedfinaldate)
                    .HasName("idx_change_plannedfinaldate");

                entity.HasIndex(e => e.Plannedimpldate)
                    .HasName("idx_change_plannedimpldate");

                entity.HasIndex(e => e.Plannedstartdate)
                    .HasName("idx_change_plannedstartdate");

                entity.HasIndex(e => e.Priorityid)
                    .HasName("idx_change_priorityid");

                entity.HasIndex(e => e.ProAuthoperatorid)
                    .HasName("idx_change_pro_authoperatorid");

                entity.HasIndex(e => e.ProAuthpersonid)
                    .HasName("idx_change_pro_authpersonid");

                entity.HasIndex(e => e.ProRejecteddate)
                    .HasName("idx_change_pro_rejecteddate");

                entity.HasIndex(e => e.Rejecteddate)
                    .HasName("idx_change_rejecteddate");

                entity.HasIndex(e => e.Rejectionreasonid)
                    .HasName("idx_change_rejectionreasonid");

                entity.HasIndex(e => e.ReqAuthoperatorid)
                    .HasName("idx_change_req_authoperatorid");

                entity.HasIndex(e => e.ReqAuthpersonid)
                    .HasName("idx_change_req_authpersonid");

                entity.HasIndex(e => e.Started)
                    .HasName("idx_change_started");

                entity.HasIndex(e => e.Starteddate)
                    .HasName("idx_change_starteddate");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_change_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_change_statusid");

                entity.HasIndex(e => e.Subcategoryid)
                    .HasName("idx_change_subcategoryid");

                entity.HasIndex(e => e.Submitdate)
                    .HasName("idx_change_submitdate");

                entity.HasIndex(e => e.Templateid)
                    .HasName("idx_change_templateid");

                entity.HasIndex(e => e.Typeid)
                    .HasName("idx_change_typeid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_change_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_change_uidwijzig");

                entity.HasIndex(e => e.Versionid)
                    .HasName("idx_change_versionid");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_change_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_change_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_change_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_change_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_change_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aanmelderafdelingid).HasColumnName("aanmelderafdelingid");

                entity.Property(e => e.Aanmelderbudgethouderid).HasColumnName("aanmelderbudgethouderid");

                entity.Property(e => e.Aanmelderemail)
                    .IsRequired()
                    .HasColumnName("aanmelderemail")
                    .HasMaxLength(100);

                entity.Property(e => e.Aanmelderlokatieid).HasColumnName("aanmelderlokatieid");

                entity.Property(e => e.Aanmeldernaam)
                    .IsRequired()
                    .HasColumnName("aanmeldernaam")
                    .HasMaxLength(109);

                entity.Property(e => e.Aanmeldertelefoon)
                    .IsRequired()
                    .HasColumnName("aanmeldertelefoon")
                    .HasMaxLength(25);

                entity.Property(e => e.Aanmeldervestigingid).HasColumnName("aanmeldervestigingid");

                entity.Property(e => e.Action)
                    .HasColumnName("action")
                    .HasColumnType("ntext");

                entity.Property(e => e.Appointmentid).HasColumnName("appointmentid");

                entity.Property(e => e.Archivereasonid).HasColumnName("archivereasonid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Authorizationdate)
                    .HasColumnName("authorizationdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Benefitid).HasColumnName("benefitid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Branchid).HasColumnName("branchid");

                entity.Property(e => e.Briefdescription)
                    .IsRequired()
                    .HasColumnName("briefdescription")
                    .HasMaxLength(80);

                entity.Property(e => e.CalcTypeAuthdate).HasColumnName("calc_type_authdate");

                entity.Property(e => e.CalcTypeFinaldate).HasColumnName("calc_type_finaldate");

                entity.Property(e => e.CalcTypeImpldate).HasColumnName("calc_type_impldate");

                entity.Property(e => e.Calldate)
                    .HasColumnName("calldate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Canceldate)
                    .HasColumnName("canceldate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Canceledby).HasColumnName("canceledby");

                entity.Property(e => e.Canceledbyoperatorid).HasColumnName("canceledbyoperatorid");

                entity.Property(e => e.Canceledbypersonid).HasColumnName("canceledbypersonid");

                entity.Property(e => e.Cancelreasonid).HasColumnName("cancelreasonid");

                entity.Property(e => e.Categoryid).HasColumnName("categoryid");

                entity.Property(e => e.Changetype).HasColumnName("changetype");

                entity.Property(e => e.Closed).HasColumnName("closed");

                entity.Property(e => e.Closeddate)
                    .HasColumnName("closeddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasColumnType("ntext");

                entity.Property(e => e.Completed).HasColumnName("completed");

                entity.Property(e => e.Completeddate)
                    .HasColumnName("completeddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Currentphase).HasColumnName("currentphase");

                entity.Property(e => e.Currentplanexpenses)
                    .HasColumnName("currentplanexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.Currentplantimetaken).HasColumnName("currentplantimetaken");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("ntext");

                entity.Property(e => e.Estimateexpenses)
                    .HasColumnName("estimateexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.Estimatetimetaken).HasColumnName("estimatetimetaken");

                entity.Property(e => e.EvalAuthoperatorid).HasColumnName("eval_authoperatorid");

                entity.Property(e => e.EvalAuthpersonid).HasColumnName("eval_authpersonid");

                entity.Property(e => e.EvalDecidedby).HasColumnName("eval_decidedby");

                entity.Property(e => e.Expenses)
                    .HasColumnName("expenses")
                    .HasColumnType("money");

                entity.Property(e => e.Externalnumber)
                    .IsRequired()
                    .HasColumnName("externalnumber")
                    .HasMaxLength(60);

                entity.Property(e => e.Extraaid).HasColumnName("extraaid");

                entity.Property(e => e.Extraapersoonid).HasColumnName("extraapersoonid");

                entity.Property(e => e.Extrabid).HasColumnName("extrabid");

                entity.Property(e => e.Extrabpersoonid).HasColumnName("extrabpersoonid");

                entity.Property(e => e.Finaldate)
                    .HasColumnName("finaldate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Impactid).HasColumnName("impactid");

                entity.Property(e => e.Implementationdate)
                    .HasColumnName("implementationdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Incidentid).HasColumnName("incidentid");

                entity.Property(e => e.Isurgent).HasColumnName("isurgent");

                entity.Property(e => e.Locationid).HasColumnName("locationid");

                entity.Property(e => e.Managerid).HasColumnName("managerid");

                entity.Property(e => e.MayauthorizeEval).HasColumnName("mayauthorize_eval");

                entity.Property(e => e.MayauthorizePro).HasColumnName("mayauthorize_pro");

                entity.Property(e => e.MayauthorizeRfc).HasColumnName("mayauthorize_rfc");

                entity.Property(e => e.Milestoneid).HasColumnName("milestoneid");

                entity.Property(e => e.Number)
                    .IsRequired()
                    .HasColumnName("number")
                    .HasMaxLength(30);

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Originalplanexpenses)
                    .HasColumnName("originalplanexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.Originalplantimetaken).HasColumnName("originalplantimetaken");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Plannedauthdate)
                    .HasColumnName("plannedauthdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Plannedfinaldate)
                    .HasColumnName("plannedfinaldate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Plannedimpldate)
                    .HasColumnName("plannedimpldate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Plannedstartdate)
                    .HasColumnName("plannedstartdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Priorityid).HasColumnName("priorityid");

                entity.Property(e => e.ProAuthoperatorid).HasColumnName("pro_authoperatorid");

                entity.Property(e => e.ProAuthpersonid).HasColumnName("pro_authpersonid");

                entity.Property(e => e.ProDecidedby).HasColumnName("pro_decidedby");

                entity.Property(e => e.ProRejecteddate)
                    .HasColumnName("pro_rejecteddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.PublishDescription)
                    .HasColumnName("publish_description")
                    .HasColumnType("ntext");

                entity.Property(e => e.PublishDescriptionType).HasColumnName("publish_description_type");

                entity.Property(e => e.PublishTitle)
                    .IsRequired()
                    .HasColumnName("publish_title")
                    .HasMaxLength(80);

                entity.Property(e => e.PublishType).HasColumnName("publish_type");

                entity.Property(e => e.RefCategoryName)
                    .IsRequired()
                    .HasColumnName("ref_category_name")
                    .HasMaxLength(30);

                entity.Property(e => e.RefEvalAuthoperatorName)
                    .IsRequired()
                    .HasColumnName("ref_eval_authoperator_name")
                    .HasMaxLength(109);

                entity.Property(e => e.RefOperatorname)
                    .IsRequired()
                    .HasColumnName("ref_operatorname")
                    .HasMaxLength(109);

                entity.Property(e => e.RefProAuthoperatorName)
                    .IsRequired()
                    .HasColumnName("ref_pro_authoperator_name")
                    .HasMaxLength(109);

                entity.Property(e => e.RefProgresstrail)
                    .HasColumnName("ref_progresstrail")
                    .HasColumnType("ntext");

                entity.Property(e => e.RefReqAuthoperatorName)
                    .IsRequired()
                    .HasColumnName("ref_req_authoperator_name")
                    .HasMaxLength(109);

                entity.Property(e => e.RefSubcategoryName)
                    .IsRequired()
                    .HasColumnName("ref_subcategory_name")
                    .HasMaxLength(30);

                entity.Property(e => e.RefTypeName)
                    .IsRequired()
                    .HasColumnName("ref_type_name")
                    .HasMaxLength(100);

                entity.Property(e => e.Rejected).HasColumnName("rejected");

                entity.Property(e => e.Rejectedby).HasColumnName("rejectedby");

                entity.Property(e => e.Rejecteddate)
                    .HasColumnName("rejecteddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Rejectionreasonid).HasColumnName("rejectionreasonid");

                entity.Property(e => e.ReqAuthoperatorid).HasColumnName("req_authoperatorid");

                entity.Property(e => e.ReqAuthpersonid).HasColumnName("req_authpersonid");

                entity.Property(e => e.Savedinsecure).HasColumnName("savedinsecure");

                entity.Property(e => e.Started).HasColumnName("started");

                entity.Property(e => e.Starteddate)
                    .HasColumnName("starteddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Subcategoryid).HasColumnName("subcategoryid");

                entity.Property(e => e.Submitdate)
                    .HasColumnName("submitdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.SumRealizedexpenses)
                    .HasColumnName("sum_realizedexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.SumRealizedtime).HasColumnName("sum_realizedtime");

                entity.Property(e => e.SumRemainingexpenses)
                    .HasColumnName("sum_remainingexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.SumRemainingtime).HasColumnName("sum_remainingtime");

                entity.Property(e => e.Templateid).HasColumnName("templateid");

                entity.Property(e => e.Timetaken).HasColumnName("timetaken");

                entity.Property(e => e.Typeid).HasColumnName("typeid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Versionid).HasColumnName("versionid");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Withevaluation).HasColumnName("withevaluation");

                entity.HasOne(d => d.Aanmelderafdeling)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Aanmelderafdelingid)
                    .HasConstraintName("fk_afdeling_aanmelderafdelingid_change");

                entity.HasOne(d => d.Aanmelderbudgethouder)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Aanmelderbudgethouderid)
                    .HasConstraintName("fk_budgethouder_aanmelderbudgethouderid_change");

                entity.HasOne(d => d.Aanmelderlokatie)
                    .WithMany(p => p.ChangeAanmelderlokatie)
                    .HasForeignKey(d => d.Aanmelderlokatieid)
                    .HasConstraintName("fk_locatie_aanmelderlokatieid_change");

                entity.HasOne(d => d.Aanmeldervestiging)
                    .WithMany(p => p.ChangeAanmeldervestiging)
                    .HasForeignKey(d => d.Aanmeldervestigingid)
                    .HasConstraintName("fk_vestiging_aanmeldervestigingid_change");

                entity.HasOne(d => d.Appointment)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Appointmentid)
                    .HasConstraintName("fk_appointment_appointmentid_change");

                entity.HasOne(d => d.Archivereason)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Archivereasonid)
                    .HasConstraintName("fk_archiefreden_archivereasonid_change");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.ChangeAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_change");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.ChangeAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_change");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.ChangeAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_change");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.ChangeAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_change");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.ChangeAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_change");

                entity.HasOne(d => d.Benefit)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Benefitid)
                    .HasConstraintName("fk_changebenefit_benefitid_change");

                entity.HasOne(d => d.Branch)
                    .WithMany(p => p.ChangeBranch)
                    .HasForeignKey(d => d.Branchid)
                    .HasConstraintName("fk_vestiging_branchid_change");

                entity.HasOne(d => d.Canceledbyoperator)
                    .WithMany(p => p.ChangeCanceledbyoperator)
                    .HasForeignKey(d => d.Canceledbyoperatorid)
                    .HasConstraintName("fk_actiedoor_canceledbyoperatorid_change");

                entity.HasOne(d => d.Canceledbyperson)
                    .WithMany(p => p.ChangeCanceledbyperson)
                    .HasForeignKey(d => d.Canceledbypersonid)
                    .HasConstraintName("fk_persoon_canceledbypersonid_change");

                entity.HasOne(d => d.Cancelreason)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Cancelreasonid)
                    .HasConstraintName("fk_changecancelreason_cancelreasonid_change");

                entity.HasOne(d => d.Category)
                    .WithMany(p => p.ChangeCategory)
                    .HasForeignKey(d => d.Categoryid)
                    .HasConstraintName("fk_classificatie_categoryid_change");

                entity.HasOne(d => d.EvalAuthoperator)
                    .WithMany(p => p.ChangeEvalAuthoperator)
                    .HasForeignKey(d => d.EvalAuthoperatorid)
                    .HasConstraintName("fk_actiedoor_eval_authoperatorid_change");

                entity.HasOne(d => d.EvalAuthperson)
                    .WithMany(p => p.ChangeEvalAuthperson)
                    .HasForeignKey(d => d.EvalAuthpersonid)
                    .HasConstraintName("fk_persoon_eval_authpersonid_change");

                entity.HasOne(d => d.Extraa)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Extraaid)
                    .HasConstraintName("fk_extraa_extraaid_change");

                entity.HasOne(d => d.Extraapersoon)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Extraapersoonid)
                    .HasConstraintName("fk_extraapersoon_extraapersoonid_change");

                entity.HasOne(d => d.Extrab)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Extrabid)
                    .HasConstraintName("fk_extrab_extrabid_change");

                entity.HasOne(d => d.Extrabpersoon)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Extrabpersoonid)
                    .HasConstraintName("fk_extrabpersoon_extrabpersoonid_change");

                entity.HasOne(d => d.Impact)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Impactid)
                    .HasConstraintName("fk_wijziging_impact_impactid_change");

                entity.HasOne(d => d.Incident)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Incidentid)
                    .HasConstraintName("fk_incident_incidentid_change");

                entity.HasOne(d => d.Location)
                    .WithMany(p => p.ChangeLocation)
                    .HasForeignKey(d => d.Locationid)
                    .HasConstraintName("fk_locatie_locationid_change");

                entity.HasOne(d => d.Manager)
                    .WithMany(p => p.ChangeManager)
                    .HasForeignKey(d => d.Managerid)
                    .HasConstraintName("fk_actiedoor_managerid_change");

                entity.HasOne(d => d.Milestone)
                    .WithMany(p => p.ChangeMilestone)
                    .HasForeignKey(d => d.Milestoneid)
                    .HasConstraintName("fk_changeversion_milestoneid_change");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Objectid)
                    .HasConstraintName("fk_object_objectid_change");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.ChangeOperatorgroup)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_change");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.ChangeOperator)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_change");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangePersoon)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_change");

                entity.HasOne(d => d.Priority)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Priorityid)
                    .HasConstraintName("fk_change_priority_priorityid_change");

                entity.HasOne(d => d.ProAuthoperator)
                    .WithMany(p => p.ChangeProAuthoperator)
                    .HasForeignKey(d => d.ProAuthoperatorid)
                    .HasConstraintName("fk_actiedoor_pro_authoperatorid_change");

                entity.HasOne(d => d.ProAuthperson)
                    .WithMany(p => p.ChangeProAuthperson)
                    .HasForeignKey(d => d.ProAuthpersonid)
                    .HasConstraintName("fk_persoon_pro_authpersonid_change");

                entity.HasOne(d => d.Rejectionreason)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Rejectionreasonid)
                    .HasConstraintName("fk_changerejectionreason_rejectionreasonid_change");

                entity.HasOne(d => d.ReqAuthoperator)
                    .WithMany(p => p.ChangeReqAuthoperator)
                    .HasForeignKey(d => d.ReqAuthoperatorid)
                    .HasConstraintName("fk_actiedoor_req_authoperatorid_change");

                entity.HasOne(d => d.ReqAuthperson)
                    .WithMany(p => p.ChangeReqAuthperson)
                    .HasForeignKey(d => d.ReqAuthpersonid)
                    .HasConstraintName("fk_persoon_req_authpersonid_change");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_wijzigingstatus_statusid_change");

                entity.HasOne(d => d.Subcategory)
                    .WithMany(p => p.ChangeSubcategory)
                    .HasForeignKey(d => d.Subcategoryid)
                    .HasConstraintName("fk_classificatie_subcategoryid_change");

                entity.HasOne(d => d.Template)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Templateid)
                    .HasConstraintName("fk_change_template_templateid_change");

                entity.HasOne(d => d.Type)
                    .WithMany(p => p.Change)
                    .HasForeignKey(d => d.Typeid)
                    .HasConstraintName("fk_wbaanvraagtype_typeid_change");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_change");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_change");

                entity.HasOne(d => d.Version)
                    .WithMany(p => p.ChangeVersion)
                    .HasForeignKey(d => d.Versionid)
                    .HasConstraintName("fk_changeversion_versionid_change");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.ChangeVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_change");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.ChangeVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_change");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.ChangeVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_change");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.ChangeVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_change");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.ChangeVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_change");
            });

            modelBuilder.Entity<Changeactivity>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeactivity");

                entity.HasIndex(e => e.Activitystatusid)
                    .HasName("idx_changeactivity_activitystatusid");

                entity.HasIndex(e => e.Activitytemplateid)
                    .HasName("idx_changeactivity_activitytemplateid");

                entity.HasIndex(e => e.Appointmentid)
                    .HasName("idx_changeactivity_appointmentid");

                entity.HasIndex(e => e.Approveddate)
                    .HasName("idx_changeactivity_approveddate");

                entity.HasIndex(e => e.Archivereasonid)
                    .HasName("idx_changeactivity_archivereasonid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_changeactivity_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_changeactivity_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_changeactivity_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_changeactivity_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_changeactivity_attvrijeopzoek5");

                entity.HasIndex(e => e.Categoryid)
                    .HasName("idx_changeactivity_categoryid");

                entity.HasIndex(e => e.Changeid)
                    .HasName("idx_changeactivity_changeid");

                entity.HasIndex(e => e.Decidedbypersonid)
                    .HasName("idx_changeactivity_decidedbypersonid");

                entity.HasIndex(e => e.Groupid)
                    .HasName("idx_changeactivity_groupid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_changeactivity_importid");

                entity.HasIndex(e => e.Milestoneid)
                    .HasName("idx_changeactivity_milestoneid");

                entity.HasIndex(e => e.Number)
                    .HasName("idx_changeactivity_number");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_changeactivity_operatorgroupid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_changeactivity_operatorid");

                entity.HasIndex(e => e.Plannedfinaldate)
                    .HasName("idx_changeactivity_plannedfinaldate");

                entity.HasIndex(e => e.Plannedstartdate)
                    .HasName("idx_changeactivity_plannedstartdate");

                entity.HasIndex(e => e.Rejecteddate)
                    .HasName("idx_changeactivity_rejecteddate");

                entity.HasIndex(e => e.Rejectionreasonid)
                    .HasName("idx_changeactivity_rejectionreasonid");

                entity.HasIndex(e => e.Resolveddate)
                    .HasName("idx_changeactivity_resolveddate");

                entity.HasIndex(e => e.Skippeddate)
                    .HasName("idx_changeactivity_skippeddate");

                entity.HasIndex(e => e.Skippedreasonid)
                    .HasName("idx_changeactivity_skippedreasonid");

                entity.HasIndex(e => e.Starteddate)
                    .HasName("idx_changeactivity_starteddate");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_changeactivity_status");

                entity.HasIndex(e => e.Subcategoryid)
                    .HasName("idx_changeactivity_subcategoryid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_changeactivity_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_changeactivity_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_changeactivity_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_changeactivity_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_changeactivity_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_changeactivity_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_changeactivity_vrijeopzoek5");

                entity.HasIndex(e => new { e.Resolved, e.Skipped, e.Approved })
                    .HasName("idx_changeactivity_resolved_skipped_approved");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Action)
                    .HasColumnName("action")
                    .HasColumnType("ntext");

                entity.Property(e => e.Activitystatusid).HasColumnName("activitystatusid");

                entity.Property(e => e.Activitytemplateid).HasColumnName("activitytemplateid");

                entity.Property(e => e.Appointmentid).HasColumnName("appointmentid");

                entity.Property(e => e.Approved).HasColumnName("approved");

                entity.Property(e => e.Approveddate)
                    .HasColumnName("approveddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Archivereasonid).HasColumnName("archivereasonid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Briefdescription)
                    .IsRequired()
                    .HasColumnName("briefdescription")
                    .HasMaxLength(80);

                entity.Property(e => e.Categoryid).HasColumnName("categoryid");

                entity.Property(e => e.Changeid).HasColumnName("changeid");

                entity.Property(e => e.Changephase).HasColumnName("changephase");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasColumnType("ntext");

                entity.Property(e => e.Currentplanexpenses)
                    .HasColumnName("currentplanexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.Currentplantimetaken).HasColumnName("currentplantimetaken");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Decidedby).HasColumnName("decidedby");

                entity.Property(e => e.Decidedbypersonid).HasColumnName("decidedbypersonid");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("ntext");

                entity.Property(e => e.Displayincalendar).HasColumnName("displayincalendar");

                entity.Property(e => e.DurationInMinutes).HasColumnName("duration_in_minutes");

                entity.Property(e => e.DurationInWorkdays).HasColumnName("duration_in_workdays");

                entity.Property(e => e.Expectedexpenses)
                    .HasColumnName("expectedexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.Expectedtimetaken).HasColumnName("expectedtimetaken");

                entity.Property(e => e.Expenses)
                    .HasColumnName("expenses")
                    .HasColumnType("money");

                entity.Property(e => e.Groupid).HasColumnName("groupid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Maystart).HasColumnName("maystart");

                entity.Property(e => e.Milestoneid).HasColumnName("milestoneid");

                entity.Property(e => e.Monitored).HasColumnName("monitored");

                entity.Property(e => e.Number)
                    .IsRequired()
                    .HasColumnName("number")
                    .HasMaxLength(30);

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Originalplanexpenses)
                    .HasColumnName("originalplanexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.Originalplantimetaken).HasColumnName("originalplantimetaken");

                entity.Property(e => e.Plannedfinaldate)
                    .HasColumnName("plannedfinaldate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Plannedstartdate)
                    .HasColumnName("plannedstartdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Planningfixed).HasColumnName("planningfixed");

                entity.Property(e => e.Realizedexpenses)
                    .HasColumnName("realizedexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.RefChangeBriefDescription)
                    .IsRequired()
                    .HasColumnName("ref_change_brief_description")
                    .HasMaxLength(80);

                entity.Property(e => e.RefChangeNumber)
                    .IsRequired()
                    .HasColumnName("ref_change_number")
                    .HasMaxLength(30);

                entity.Property(e => e.RefOperatorName)
                    .IsRequired()
                    .HasColumnName("ref_operator_name")
                    .HasMaxLength(109);

                entity.Property(e => e.RefProgresstrail)
                    .HasColumnName("ref_progresstrail")
                    .HasColumnType("ntext");

                entity.Property(e => e.Rejected).HasColumnName("rejected");

                entity.Property(e => e.Rejecteddate)
                    .HasColumnName("rejecteddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Rejectionreasonid).HasColumnName("rejectionreasonid");

                entity.Property(e => e.Resolved).HasColumnName("resolved");

                entity.Property(e => e.Resolveddate)
                    .HasColumnName("resolveddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Skipped).HasColumnName("skipped");

                entity.Property(e => e.Skippeddate)
                    .HasColumnName("skippeddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Skippedreasonid).HasColumnName("skippedreasonid");

                entity.Property(e => e.Started).HasColumnName("started");

                entity.Property(e => e.Starteddate)
                    .HasColumnName("starteddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Subcategoryid).HasColumnName("subcategoryid");

                entity.Property(e => e.Timetaken).HasColumnName("timetaken");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Activitystatus)
                    .WithMany(p => p.Changeactivity)
                    .HasForeignKey(d => d.Activitystatusid)
                    .HasConstraintName("fk_changeactivity_status_activitystatusid_changeactivity");

                entity.HasOne(d => d.Activitytemplate)
                    .WithMany(p => p.Changeactivity)
                    .HasForeignKey(d => d.Activitytemplateid)
                    .HasConstraintName("fk_change_activitytemplate_activitytemplateid_changeactivity");

                entity.HasOne(d => d.Appointment)
                    .WithMany(p => p.Changeactivity)
                    .HasForeignKey(d => d.Appointmentid)
                    .HasConstraintName("fk_appointment_appointmentid_changeactivity");

                entity.HasOne(d => d.Archivereason)
                    .WithMany(p => p.Changeactivity)
                    .HasForeignKey(d => d.Archivereasonid)
                    .HasConstraintName("fk_archiefreden_archivereasonid_changeactivity");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.ChangeactivityAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_changeactivity");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.ChangeactivityAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_changeactivity");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.ChangeactivityAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_changeactivity");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.ChangeactivityAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_changeactivity");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.ChangeactivityAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_changeactivity");

                entity.HasOne(d => d.Category)
                    .WithMany(p => p.ChangeactivityCategory)
                    .HasForeignKey(d => d.Categoryid)
                    .HasConstraintName("fk_classificatie_categoryid_changeactivity");

                entity.HasOne(d => d.Change)
                    .WithMany(p => p.Changeactivity)
                    .HasForeignKey(d => d.Changeid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_changeid_changeactivity");

                entity.HasOne(d => d.Decidedbyperson)
                    .WithMany(p => p.Changeactivity)
                    .HasForeignKey(d => d.Decidedbypersonid)
                    .HasConstraintName("fk_persoon_decidedbypersonid_changeactivity");

                entity.HasOne(d => d.Group)
                    .WithMany(p => p.Changeactivity)
                    .HasForeignKey(d => d.Groupid)
                    .HasConstraintName("fk_change_group_groupid_changeactivity");

                entity.HasOne(d => d.Milestone)
                    .WithMany(p => p.Changeactivity)
                    .HasForeignKey(d => d.Milestoneid)
                    .HasConstraintName("fk_changeversion_milestoneid_changeactivity");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.ChangeactivityOperatorgroup)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_changeactivity");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.ChangeactivityOperator)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_changeactivity");

                entity.HasOne(d => d.Rejectionreason)
                    .WithMany(p => p.Changeactivity)
                    .HasForeignKey(d => d.Rejectionreasonid)
                    .HasConstraintName("fk_changeactivity_rejectionreason_rejectionreasonid_changeactivity");

                entity.HasOne(d => d.Skippedreason)
                    .WithMany(p => p.Changeactivity)
                    .HasForeignKey(d => d.Skippedreasonid)
                    .HasConstraintName("fk_changeactivity_skippedreason_skippedreasonid_changeactivity");

                entity.HasOne(d => d.Subcategory)
                    .WithMany(p => p.ChangeactivitySubcategory)
                    .HasForeignKey(d => d.Subcategoryid)
                    .HasConstraintName("fk_classificatie_subcategoryid_changeactivity");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeactivityUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_changeactivity");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeactivityUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_changeactivity");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.ChangeactivityVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_changeactivity");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.ChangeactivityVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_changeactivity");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.ChangeactivityVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_changeactivity");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.ChangeactivityVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_changeactivity");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.ChangeactivityVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_changeactivity");
            });

            modelBuilder.Entity<ChangeactivityDependency>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeactivity__dependency");

                entity.HasIndex(e => e.Headid)
                    .HasName("idx_changeactivity__dependency_headid");

                entity.HasIndex(e => e.Tailid)
                    .HasName("idx_changeactivity__dependency_tailid");

                entity.HasIndex(e => new { e.Headid, e.Tailid })
                    .HasName("uidx_changeactivity__dependency_headid_tailid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Headid).HasColumnName("headid");

                entity.Property(e => e.Tailid).HasColumnName("tailid");

                entity.HasOne(d => d.Head)
                    .WithMany(p => p.ChangeactivityDependencyHead)
                    .HasForeignKey(d => d.Headid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_changeactivity_headid_changeactivity__dependency");

                entity.HasOne(d => d.Tail)
                    .WithMany(p => p.ChangeactivityDependencyTail)
                    .HasForeignKey(d => d.Tailid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_changeactivity_tailid_changeactivity__dependency");
            });

            modelBuilder.Entity<ChangeactivityDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeactivity__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_changeactivity__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_changeactivity__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_changeactivity__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_changeactivity__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeactivityDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_changeactivity_kaartid_changeactivity__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeactivityDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_changeactivity__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeactivityDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_changeactivity__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeactivityDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_changeactivity__documenten");
            });

            modelBuilder.Entity<ChangeactivityEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeactivity__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_changeactivity__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_changeactivity__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ChangeactivityEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_changeactivity__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeactivityEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_changeactivity_kaartid_changeactivity__emailberichten");
            });

            modelBuilder.Entity<ChangeactivityLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeactivity__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_changeactivity__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_changeactivity__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_changeactivity__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_changeactivity__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeactivityLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_changeactivity_kaartid_changeactivity__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeactivityLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_changeactivity__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeactivityLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_changeactivity__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeactivityLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_changeactivity__logboek");
            });

            modelBuilder.Entity<ChangeactivityMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeactivity__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_changeactivity__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_changeactivity__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_changeactivity__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_changeactivity__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_changeactivity__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_changeactivity__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_changeactivity__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_changeactivity__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_changeactivity__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.ChangeactivityMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_changeactivity__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.ChangeactivityMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_changeactivity_parentid_changeactivity__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeactivityMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_changeactivity__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeactivityMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_changeactivity__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeactivityMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_changeactivity__memo_history");
            });

            modelBuilder.Entity<ChangeactivityObjectLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeactivity_object_link");

                entity.HasIndex(e => e.Changeactivityid)
                    .HasName("idx_changeactivity_object_link_changeactivityid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_changeactivity_object_link_importid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_changeactivity_object_link_objectid");

                entity.HasIndex(e => new { e.Changeactivityid, e.Objectid })
                    .HasName("uidx_changeactivity_object_link_changeactivityid_objectid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Changeactivityid).HasColumnName("changeactivityid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.HasOne(d => d.Changeactivity)
                    .WithMany(p => p.ChangeactivityObjectLink)
                    .HasForeignKey(d => d.Changeactivityid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_changeactivity_changeactivityid_changeactivity_object_link");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.ChangeactivityObjectLink)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_changeactivity_object_link");
            });

            modelBuilder.Entity<Changeactivityorderlink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeactivityorderlink");

                entity.HasIndex(e => e.Activityid)
                    .HasName("idx_changeactivityorderlink_activityid");

                entity.HasIndex(e => e.Orderid)
                    .HasName("idx_changeactivityorderlink_orderid");

                entity.HasIndex(e => new { e.Activityid, e.Orderid })
                    .HasName("uidx_changeactivityorderlink_activityid_orderid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Activityid).HasColumnName("activityid");

                entity.Property(e => e.Orderid).HasColumnName("orderid");

                entity.HasOne(d => d.Activity)
                    .WithMany(p => p.Changeactivityorderlink)
                    .HasForeignKey(d => d.Activityid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_changeactivity_activityid_changeactivityorderlink");

                entity.HasOne(d => d.Order)
                    .WithMany(p => p.Changeactivityorderlink)
                    .HasForeignKey(d => d.Orderid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_bestellingen_orderid_changeactivityorderlink");
            });

            modelBuilder.Entity<ChangeactivityRejectionreason>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeactivity_rejectionreason");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_changeactivity_rejectionreason_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_changeactivity_rejectionreason_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_changeactivity_rejectionreason_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ChangeactivitySkippedreason>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeactivity_skippedreason");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_changeactivity_skippedreason_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_changeactivity_skippedreason_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_changeactivity_skippedreason_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.InChangeManagement).HasColumnName("in_change_management");

                entity.Property(e => e.InProjectManagement).HasColumnName("in_project_management");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ChangeactivityStatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeactivity_status");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_changeactivity_status_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_changeactivity_status_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_changeactivity_status_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.ActivityState).HasColumnName("activity_state");

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.AuthorizationactivityState).HasColumnName("authorizationactivity_state");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ChangeActivitytemplate>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_activitytemplate");

                entity.HasIndex(e => e.Activitystatusid)
                    .HasName("idx_change_activitytemplate_activitystatusid");

                entity.HasIndex(e => e.Archivereasonid)
                    .HasName("idx_change_activitytemplate_archivereasonid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_change_activitytemplate_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_change_activitytemplate_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_change_activitytemplate_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_change_activitytemplate_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_change_activitytemplate_attvrijeopzoek5");

                entity.HasIndex(e => e.Categoryid)
                    .HasName("idx_change_activitytemplate_categoryid");

                entity.HasIndex(e => e.Decidedbypersonid)
                    .HasName("idx_change_activitytemplate_decidedbypersonid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_change_activitytemplate_importid");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_change_activitytemplate_operatorgroupid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_change_activitytemplate_operatorid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_change_activitytemplate_status");

                entity.HasIndex(e => e.Subcategoryid)
                    .HasName("idx_change_activitytemplate_subcategoryid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_change_activitytemplate_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_change_activitytemplate_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_change_activitytemplate_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_change_activitytemplate_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_change_activitytemplate_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_change_activitytemplate_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_change_activitytemplate_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Action)
                    .HasColumnName("action")
                    .HasColumnType("ntext");

                entity.Property(e => e.Activitystatusid).HasColumnName("activitystatusid");

                entity.Property(e => e.Archivereasonid).HasColumnName("archivereasonid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Briefdescription)
                    .IsRequired()
                    .HasColumnName("briefdescription")
                    .HasMaxLength(80);

                entity.Property(e => e.Categoryid).HasColumnName("categoryid");

                entity.Property(e => e.Changephase).HasColumnName("changephase");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Decidedby).HasColumnName("decidedby");

                entity.Property(e => e.Decidedbypersonid).HasColumnName("decidedbypersonid");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("ntext");

                entity.Property(e => e.Displayincalendar).HasColumnName("displayincalendar");

                entity.Property(e => e.DurationInMinutes).HasColumnName("duration_in_minutes");

                entity.Property(e => e.DurationInWorkdays).HasColumnName("duration_in_workdays");

                entity.Property(e => e.Estimatedexpenses)
                    .HasColumnName("estimatedexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.Estimatedtimetaken).HasColumnName("estimatedtimetaken");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Metanotes)
                    .HasColumnName("metanotes")
                    .HasColumnType("ntext");

                entity.Property(e => e.Number)
                    .IsRequired()
                    .HasColumnName("number")
                    .HasMaxLength(30);

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Optional).HasColumnName("optional");

                entity.Property(e => e.Planningfixed).HasColumnName("planningfixed");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Subcategoryid).HasColumnName("subcategoryid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Useforactivity).HasColumnName("useforactivity");

                entity.Property(e => e.UsingCurrentOperator).HasColumnName("using_current_operator");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Activitystatus)
                    .WithMany(p => p.ChangeActivitytemplate)
                    .HasForeignKey(d => d.Activitystatusid)
                    .HasConstraintName("fk_changeactivity_status_activitystatusid_change_activitytemplate");

                entity.HasOne(d => d.Archivereason)
                    .WithMany(p => p.ChangeActivitytemplate)
                    .HasForeignKey(d => d.Archivereasonid)
                    .HasConstraintName("fk_archiefreden_archivereasonid_change_activitytemplate");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.ChangeActivitytemplateAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_change_activitytemplate");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.ChangeActivitytemplateAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_change_activitytemplate");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.ChangeActivitytemplateAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_change_activitytemplate");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.ChangeActivitytemplateAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_change_activitytemplate");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.ChangeActivitytemplateAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_change_activitytemplate");

                entity.HasOne(d => d.Category)
                    .WithMany(p => p.ChangeActivitytemplateCategory)
                    .HasForeignKey(d => d.Categoryid)
                    .HasConstraintName("fk_classificatie_categoryid_change_activitytemplate");

                entity.HasOne(d => d.Decidedbyperson)
                    .WithMany(p => p.ChangeActivitytemplate)
                    .HasForeignKey(d => d.Decidedbypersonid)
                    .HasConstraintName("fk_persoon_decidedbypersonid_change_activitytemplate");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.ChangeActivitytemplateOperatorgroup)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_change_activitytemplate");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.ChangeActivitytemplateOperator)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_change_activitytemplate");

                entity.HasOne(d => d.Subcategory)
                    .WithMany(p => p.ChangeActivitytemplateSubcategory)
                    .HasForeignKey(d => d.Subcategoryid)
                    .HasConstraintName("fk_classificatie_subcategoryid_change_activitytemplate");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeActivitytemplateUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_change_activitytemplate");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeActivitytemplateUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_change_activitytemplate");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.ChangeActivitytemplateVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_change_activitytemplate");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.ChangeActivitytemplateVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_change_activitytemplate");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.ChangeActivitytemplateVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_change_activitytemplate");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.ChangeActivitytemplateVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_change_activitytemplate");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.ChangeActivitytemplateVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_change_activitytemplate");
            });

            modelBuilder.Entity<ChangeActivitytemplateDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_activitytemplate__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_change_activitytemplate__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_change_activitytemplate__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_change_activitytemplate__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_change_activitytemplate__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeActivitytemplateDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_change_activitytemplate_kaartid_change_activitytemplate__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeActivitytemplateDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_change_activitytemplate__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeActivitytemplateDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_change_activitytemplate__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeActivitytemplateDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_change_activitytemplate__documenten");
            });

            modelBuilder.Entity<ChangeActivitytemplateDocuments>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_activitytemplate_documents");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_change_activitytemplate_documents_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_change_activitytemplate_documents_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_change_activitytemplate_documents_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_change_activitytemplate_documents_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeActivitytemplateDocuments)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_change_activitytemplate_kaartid_change_activitytemplate_documents");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeActivitytemplateDocuments)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_change_activitytemplate_documents");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeActivitytemplateDocumentsUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_change_activitytemplate_documents");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeActivitytemplateDocumentsUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_change_activitytemplate_documents");
            });

            modelBuilder.Entity<ChangeActivitytemplateEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_activitytemplate__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_change_activitytemplate__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_change_activitytemplate__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ChangeActivitytemplateEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_change_activitytemplate__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeActivitytemplateEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_change_activitytemplate_kaartid_change_activitytemplate__emailberichten");
            });

            modelBuilder.Entity<ChangeActivitytemplateLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_activitytemplate__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_change_activitytemplate__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_change_activitytemplate__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_change_activitytemplate__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_change_activitytemplate__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeActivitytemplateLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_change_activitytemplate_kaartid_change_activitytemplate__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeActivitytemplateLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_change_activitytemplate__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeActivitytemplateLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_change_activitytemplate__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeActivitytemplateLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_change_activitytemplate__logboek");
            });

            modelBuilder.Entity<ChangeActivitytemplateMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_activitytemplate__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_change_activitytemplate__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_change_activitytemplate__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_change_activitytemplate__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_change_activitytemplate__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_change_activitytemplate__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_change_activitytemplate__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_change_activitytemplate__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_change_activitytemplate__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_change_activitytemplate__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.ChangeActivitytemplateMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_change_activitytemplate__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.ChangeActivitytemplateMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_change_activitytemplate_parentid_change_activitytemplate__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeActivitytemplateMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_change_activitytemplate__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeActivitytemplateMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_change_activitytemplate__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeActivitytemplateMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_change_activitytemplate__memo_history");
            });

            modelBuilder.Entity<ChangeActOrderreqLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_act_orderreq_link");

                entity.HasIndex(e => e.Activityid)
                    .HasName("idx_change_act_orderreq_link_activityid");

                entity.HasIndex(e => e.Orderrequestid)
                    .HasName("idx_change_act_orderreq_link_orderrequestid");

                entity.HasIndex(e => new { e.Activityid, e.Orderrequestid })
                    .HasName("uidx_change_act_orderreq_link_activityid_orderrequestid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Activityid).HasColumnName("activityid");

                entity.Property(e => e.Orderrequestid).HasColumnName("orderrequestid");

                entity.HasOne(d => d.Activity)
                    .WithMany(p => p.ChangeActOrderreqLink)
                    .HasForeignKey(d => d.Activityid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_changeactivity_activityid_change_act_orderreq_link");

                entity.HasOne(d => d.Orderrequest)
                    .WithMany(p => p.ChangeActOrderreqLink)
                    .HasForeignKey(d => d.Orderrequestid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_bestelaanvraag_orderrequestid_change_act_orderreq_link");
            });

            modelBuilder.Entity<ChangeActTemplDependency>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_act_templ_dependency");

                entity.HasIndex(e => e.Headid)
                    .HasName("idx_change_act_templ_dependency_headid");

                entity.HasIndex(e => e.Tailid)
                    .HasName("idx_change_act_templ_dependency_tailid");

                entity.HasIndex(e => e.Templateid)
                    .HasName("idx_change_act_templ_dependency_templateid");

                entity.HasIndex(e => new { e.Headid, e.Tailid, e.Templateid })
                    .HasName("uidx_change_act_templ_dependency_headid_tailid_templateid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Headid).HasColumnName("headid");

                entity.Property(e => e.Startautomatically).HasColumnName("startautomatically");

                entity.Property(e => e.Tailid).HasColumnName("tailid");

                entity.Property(e => e.Templateid).HasColumnName("templateid");

                entity.HasOne(d => d.Head)
                    .WithMany(p => p.ChangeActTemplDependencyHead)
                    .HasForeignKey(d => d.Headid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_activitytemplate_headid_change_act_templ_dependency");

                entity.HasOne(d => d.Tail)
                    .WithMany(p => p.ChangeActTemplDependencyTail)
                    .HasForeignKey(d => d.Tailid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_activitytemplate_tailid_change_act_templ_dependency");

                entity.HasOne(d => d.Template)
                    .WithMany(p => p.ChangeActTemplDependency)
                    .HasForeignKey(d => d.Templateid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_template_templateid_change_act_templ_dependency");
            });

            modelBuilder.Entity<Changeauthorization>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeauthorization");

                entity.HasIndex(e => e.Authorizationdate)
                    .HasName("idx_changeauthorization_authorizationdate");

                entity.HasIndex(e => e.Byoperatorid)
                    .HasName("idx_changeauthorization_byoperatorid");

                entity.HasIndex(e => e.Bypersonid)
                    .HasName("idx_changeauthorization_bypersonid");

                entity.HasIndex(e => e.Changeid)
                    .HasName("idx_changeauthorization_changeid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_changeauthorization_importid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_changeauthorization_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Authorizationdate)
                    .HasColumnName("authorizationdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Authorized).HasColumnName("authorized");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Byoperatorid).HasColumnName("byoperatorid");

                entity.Property(e => e.Bypersonid).HasColumnName("bypersonid");

                entity.Property(e => e.Changeid).HasColumnName("changeid");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Newphase).HasColumnName("newphase");

                entity.Property(e => e.Oldphase).HasColumnName("oldphase");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Byoperator)
                    .WithMany(p => p.Changeauthorization)
                    .HasForeignKey(d => d.Byoperatorid)
                    .HasConstraintName("fk_actiedoor_byoperatorid_changeauthorization");

                entity.HasOne(d => d.Byperson)
                    .WithMany(p => p.Changeauthorization)
                    .HasForeignKey(d => d.Bypersonid)
                    .HasConstraintName("fk_persoon_bypersonid_changeauthorization");

                entity.HasOne(d => d.Change)
                    .WithMany(p => p.Changeauthorization)
                    .HasForeignKey(d => d.Changeid)
                    .HasConstraintName("fk_change_changeid_changeauthorization");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Changeauthorization)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_changeauthorization");
            });

            modelBuilder.Entity<Changebenefit>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changebenefit");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_changebenefit_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_changebenefit_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_changebenefit_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ChangeBranchLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_branch_link");

                entity.HasIndex(e => e.Branchid)
                    .HasName("idx_change_branch_link_branchid");

                entity.HasIndex(e => e.Changeid)
                    .HasName("idx_change_branch_link_changeid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_change_branch_link_importid");

                entity.HasIndex(e => new { e.Branchid, e.Changeid })
                    .HasName("uidx_change_branch_link_branchid_changeid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Branchid).HasColumnName("branchid");

                entity.Property(e => e.Changeid).HasColumnName("changeid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.HasOne(d => d.Branch)
                    .WithMany(p => p.ChangeBranchLink)
                    .HasForeignKey(d => d.Branchid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_vestiging_branchid_change_branch_link");

                entity.HasOne(d => d.Change)
                    .WithMany(p => p.ChangeBranchLink)
                    .HasForeignKey(d => d.Changeid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_changeid_change_branch_link");
            });

            modelBuilder.Entity<Changecancelreason>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changecancelreason");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_changecancelreason_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_changecancelreason_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_changecancelreason_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ChangeDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_change__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_change__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_change__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_change__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_change_kaartid_change__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_change__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_change__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_change__documenten");
            });

            modelBuilder.Entity<Changeduration>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeduration");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_changeduration_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_changeduration_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_changeduration_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Count).HasColumnName("count");

                entity.Property(e => e.InChangeManagement).HasColumnName("in_change_management");

                entity.Property(e => e.InProjectManagement).HasColumnName("in_project_management");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.Type).HasColumnName("type");
            });

            modelBuilder.Entity<ChangeEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_change__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_change__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ChangeEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_change__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_change_kaartid_change__emailberichten");
            });

            modelBuilder.Entity<ChangeGroup>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_group");

                entity.HasIndex(e => e.Name)
                    .HasName("idx_change_group_name");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Color).HasColumnName("color");

                entity.Property(e => e.Linkable).HasColumnName("linkable");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<Changegrouplink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changegrouplink");

                entity.HasIndex(e => e.Changeid)
                    .HasName("idx_changegrouplink_changeid");

                entity.HasIndex(e => e.Groupid)
                    .HasName("idx_changegrouplink_groupid");

                entity.HasIndex(e => new { e.Changeid, e.Groupid })
                    .HasName("uidx_changegrouplink_changeid_groupid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Changeid).HasColumnName("changeid");

                entity.Property(e => e.Groupid).HasColumnName("groupid");

                entity.HasOne(d => d.Change)
                    .WithMany(p => p.Changegrouplink)
                    .HasForeignKey(d => d.Changeid)
                    .HasConstraintName("fk_change_changeid_changegrouplink");

                entity.HasOne(d => d.Group)
                    .WithMany(p => p.Changegrouplink)
                    .HasForeignKey(d => d.Groupid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_group_groupid_changegrouplink");
            });

            modelBuilder.Entity<ChangeIncCausedbyLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_inc_causedby_link");

                entity.HasIndex(e => e.Changeid)
                    .HasName("idx_change_inc_causedby_link_changeid");

                entity.HasIndex(e => e.Incidentid)
                    .HasName("idx_change_inc_causedby_link_incidentid");

                entity.HasIndex(e => new { e.Changeid, e.Incidentid })
                    .HasName("uidx_change_inc_causedby_link_changeid_incidentid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Changeid).HasColumnName("changeid");

                entity.Property(e => e.Incidentid).HasColumnName("incidentid");

                entity.HasOne(d => d.Change)
                    .WithMany(p => p.ChangeIncCausedbyLink)
                    .HasForeignKey(d => d.Changeid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_changeid_change_inc_causedby_link");

                entity.HasOne(d => d.Incident)
                    .WithMany(p => p.ChangeIncCausedbyLink)
                    .HasForeignKey(d => d.Incidentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_incident_incidentid_change_inc_causedby_link");
            });

            modelBuilder.Entity<ChangeIncidentLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_incident_link");

                entity.HasIndex(e => e.Changeid)
                    .HasName("idx_change_incident_link_changeid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_change_incident_link_importid");

                entity.HasIndex(e => e.Incidentid)
                    .HasName("idx_change_incident_link_incidentid");

                entity.HasIndex(e => new { e.Changeid, e.Incidentid })
                    .HasName("uidx_change_incident_link_changeid_incidentid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Changeid).HasColumnName("changeid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Incidentid).HasColumnName("incidentid");

                entity.HasOne(d => d.Change)
                    .WithMany(p => p.ChangeIncidentLink)
                    .HasForeignKey(d => d.Changeid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_changeid_change_incident_link");

                entity.HasOne(d => d.Incident)
                    .WithMany(p => p.ChangeIncidentLink)
                    .HasForeignKey(d => d.Incidentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_incident_incidentid_change_incident_link");
            });

            modelBuilder.Entity<ChangeLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_change__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_change__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_change__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_change__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_change_kaartid_change__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_change__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_change__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_change__logboek");
            });

            modelBuilder.Entity<ChangeMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_change__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_change__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_change__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_change__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_change__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_change__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_change__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_change__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_change__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.ChangeMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_change__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.ChangeMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_change_parentid_change__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_change__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_change__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_change__memo_history");
            });

            modelBuilder.Entity<ChangeObjectLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_object_link");

                entity.HasIndex(e => e.Changeid)
                    .HasName("idx_change_object_link_changeid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_change_object_link_importid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_change_object_link_objectid");

                entity.HasIndex(e => new { e.Changeid, e.Objectid })
                    .HasName("uidx_change_object_link_changeid_objectid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Changeid).HasColumnName("changeid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.HasOne(d => d.Change)
                    .WithMany(p => p.ChangeObjectLink)
                    .HasForeignKey(d => d.Changeid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_changeid_change_object_link");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.ChangeObjectLink)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_change_object_link");
            });

            modelBuilder.Entity<ChangePersonLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_person_link");

                entity.HasIndex(e => e.Changeid)
                    .HasName("idx_change_person_link_changeid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_change_person_link_importid");

                entity.HasIndex(e => e.Personid)
                    .HasName("idx_change_person_link_personid");

                entity.HasIndex(e => new { e.Changeid, e.Personid })
                    .HasName("uidx_change_person_link_changeid_personid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Changeid).HasColumnName("changeid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Personid).HasColumnName("personid");

                entity.HasOne(d => d.Change)
                    .WithMany(p => p.ChangePersonLink)
                    .HasForeignKey(d => d.Changeid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_changeid_change_person_link");

                entity.HasOne(d => d.Person)
                    .WithMany(p => p.ChangePersonLink)
                    .HasForeignKey(d => d.Personid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_persoon_personid_change_person_link");
            });

            modelBuilder.Entity<ChangePriority>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_priority");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_change_priority_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_change_priority_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_change_priority_rang");

                entity.HasIndex(e => e.SimpleProgressChdurationid)
                    .HasName("idx_change_priority_simple_progress_chdurationid");

                entity.HasIndex(e => e.SimpleRequestChdurationid)
                    .HasName("idx_change_priority_simple_request_chdurationid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.SimpleProgressChdurationid).HasColumnName("simple_progress_chdurationid");

                entity.Property(e => e.SimpleRequestChdurationid).HasColumnName("simple_request_chdurationid");

                entity.HasOne(d => d.SimpleProgressChduration)
                    .WithMany(p => p.ChangePrioritySimpleProgressChduration)
                    .HasForeignKey(d => d.SimpleProgressChdurationid)
                    .HasConstraintName("fk_changeduration_simple_progress_chdurationid_change_priority");

                entity.HasOne(d => d.SimpleRequestChduration)
                    .WithMany(p => p.ChangePrioritySimpleRequestChduration)
                    .HasForeignKey(d => d.SimpleRequestChdurationid)
                    .HasConstraintName("fk_changeduration_simple_request_chdurationid_change_priority");
            });

            modelBuilder.Entity<ChangePrioritylink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_prioritylink");

                entity.HasIndex(e => e.Benefitid)
                    .HasName("idx_change_prioritylink_benefitid");

                entity.HasIndex(e => e.Impactid)
                    .HasName("idx_change_prioritylink_impactid");

                entity.HasIndex(e => e.Priorityid)
                    .HasName("idx_change_prioritylink_priorityid");

                entity.HasIndex(e => new { e.Impactid, e.Benefitid })
                    .HasName("uidx_change_prioritylink_impactid_benefitid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Benefitid).HasColumnName("benefitid");

                entity.Property(e => e.Impactid).HasColumnName("impactid");

                entity.Property(e => e.Priorityid).HasColumnName("priorityid");

                entity.HasOne(d => d.Benefit)
                    .WithMany(p => p.ChangePrioritylink)
                    .HasForeignKey(d => d.Benefitid)
                    .HasConstraintName("fk_changebenefit_benefitid_change_prioritylink");

                entity.HasOne(d => d.Impact)
                    .WithMany(p => p.ChangePrioritylink)
                    .HasForeignKey(d => d.Impactid)
                    .HasConstraintName("fk_wijziging_impact_impactid_change_prioritylink");

                entity.HasOne(d => d.Priority)
                    .WithMany(p => p.ChangePrioritylink)
                    .HasForeignKey(d => d.Priorityid)
                    .HasConstraintName("fk_change_priority_priorityid_change_prioritylink");
            });

            modelBuilder.Entity<ChangeProblemCausedbyLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_problem_causedby_link");

                entity.HasIndex(e => e.Changeid)
                    .HasName("idx_change_problem_causedby_link_changeid");

                entity.HasIndex(e => e.Problemid)
                    .HasName("idx_change_problem_causedby_link_problemid");

                entity.HasIndex(e => new { e.Changeid, e.Problemid })
                    .HasName("uidx_change_problem_causedby_link_changeid_problemid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Changeid).HasColumnName("changeid");

                entity.Property(e => e.Problemid).HasColumnName("problemid");

                entity.HasOne(d => d.Change)
                    .WithMany(p => p.ChangeProblemCausedbyLink)
                    .HasForeignKey(d => d.Changeid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_changeid_change_problem_causedby_link");

                entity.HasOne(d => d.Problem)
                    .WithMany(p => p.ChangeProblemCausedbyLink)
                    .HasForeignKey(d => d.Problemid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_probleem_problemid_change_problem_causedby_link");
            });

            modelBuilder.Entity<ChangeProblemLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_problem_link");

                entity.HasIndex(e => e.Changeid)
                    .HasName("idx_change_problem_link_changeid");

                entity.HasIndex(e => e.Problemid)
                    .HasName("idx_change_problem_link_problemid");

                entity.HasIndex(e => new { e.Changeid, e.Problemid })
                    .HasName("uidx_change_problem_link_changeid_problemid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Changeid).HasColumnName("changeid");

                entity.Property(e => e.Problemid).HasColumnName("problemid");

                entity.HasOne(d => d.Change)
                    .WithMany(p => p.ChangeProblemLink)
                    .HasForeignKey(d => d.Changeid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_changeid_change_problem_link");

                entity.HasOne(d => d.Problem)
                    .WithMany(p => p.ChangeProblemLink)
                    .HasForeignKey(d => d.Problemid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_probleem_problemid_change_problem_link");
            });

            modelBuilder.Entity<Changerejectionreason>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changerejectionreason");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_changerejectionreason_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_changerejectionreason_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_changerejectionreason_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ChangeTemplActivityLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_templ_activity_link");

                entity.HasIndex(e => e.Activityid)
                    .HasName("idx_change_templ_activity_link_activityid");

                entity.HasIndex(e => e.Groupid)
                    .HasName("idx_change_templ_activity_link_groupid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_change_templ_activity_link_importid");

                entity.HasIndex(e => e.Templateid)
                    .HasName("idx_change_templ_activity_link_templateid");

                entity.HasIndex(e => new { e.Activityid, e.Templateid })
                    .HasName("uidx_change_templ_activity_link_activityid_templateid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Activityid).HasColumnName("activityid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Groupid).HasColumnName("groupid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Templateid).HasColumnName("templateid");

                entity.HasOne(d => d.Activity)
                    .WithMany(p => p.ChangeTemplActivityLink)
                    .HasForeignKey(d => d.Activityid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_activitytemplate_activityid_change_templ_activity_link");

                entity.HasOne(d => d.Group)
                    .WithMany(p => p.ChangeTemplActivityLink)
                    .HasForeignKey(d => d.Groupid)
                    .HasConstraintName("fk_change_group_groupid_change_templ_activity_link");

                entity.HasOne(d => d.Template)
                    .WithMany(p => p.ChangeTemplActivityLink)
                    .HasForeignKey(d => d.Templateid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_template_templateid_change_templ_activity_link");
            });

            modelBuilder.Entity<ChangeTemplate>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_template");

                entity.HasIndex(e => e.Archivereasonid)
                    .HasName("idx_change_template_archivereasonid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_change_template_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_change_template_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_change_template_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_change_template_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_change_template_attvrijeopzoek5");

                entity.HasIndex(e => e.Benefitid)
                    .HasName("idx_change_template_benefitid");

                entity.HasIndex(e => e.CallerBranchid)
                    .HasName("idx_change_template_caller_branchid");

                entity.HasIndex(e => e.CallerBudgetholderid)
                    .HasName("idx_change_template_caller_budgetholderid");

                entity.HasIndex(e => e.CallerDepartmentid)
                    .HasName("idx_change_template_caller_departmentid");

                entity.HasIndex(e => e.Categoryid)
                    .HasName("idx_change_template_categoryid");

                entity.HasIndex(e => e.EvalAuthoperatorid)
                    .HasName("idx_change_template_eval_authoperatorid");

                entity.HasIndex(e => e.EvalAuthpersonid)
                    .HasName("idx_change_template_eval_authpersonid");

                entity.HasIndex(e => e.Impactid)
                    .HasName("idx_change_template_impactid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_change_template_importid");

                entity.HasIndex(e => e.IncidentTypeid)
                    .HasName("idx_change_template_incident_typeid");

                entity.HasIndex(e => e.Managerid)
                    .HasName("idx_change_template_managerid");

                entity.HasIndex(e => e.ObjectMakeid)
                    .HasName("idx_change_template_object_makeid");

                entity.HasIndex(e => e.ObjectTypeid)
                    .HasName("idx_change_template_object_typeid");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_change_template_operatorgroupid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_change_template_operatorid");

                entity.HasIndex(e => e.Priorityid)
                    .HasName("idx_change_template_priorityid");

                entity.HasIndex(e => e.ProAuthoperatorid)
                    .HasName("idx_change_template_pro_authoperatorid");

                entity.HasIndex(e => e.ProAuthpersonid)
                    .HasName("idx_change_template_pro_authpersonid");

                entity.HasIndex(e => e.ReqAuthoperatorid)
                    .HasName("idx_change_template_req_authoperatorid");

                entity.HasIndex(e => e.ReqAuthpersonid)
                    .HasName("idx_change_template_req_authpersonid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_change_template_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_change_template_statusid");

                entity.HasIndex(e => e.Subcategoryid)
                    .HasName("idx_change_template_subcategoryid");

                entity.HasIndex(e => e.Typeid)
                    .HasName("idx_change_template_typeid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_change_template_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_change_template_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_change_template_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_change_template_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_change_template_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_change_template_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_change_template_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Action)
                    .HasColumnName("action")
                    .HasColumnType("ntext");

                entity.Property(e => e.Archivereasonid).HasColumnName("archivereasonid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Benefitid).HasColumnName("benefitid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Briefdescription)
                    .IsRequired()
                    .HasColumnName("briefdescription")
                    .HasMaxLength(80);

                entity.Property(e => e.CallerBranchFilterActive).HasColumnName("caller_branch_filter_active");

                entity.Property(e => e.CallerBranchid).HasColumnName("caller_branchid");

                entity.Property(e => e.CallerBudgetFilterActive).HasColumnName("caller_budget_filter_active");

                entity.Property(e => e.CallerBudgetholderid).HasColumnName("caller_budgetholderid");

                entity.Property(e => e.CallerDepFilterActive).HasColumnName("caller_dep_filter_active");

                entity.Property(e => e.CallerDepartmentid).HasColumnName("caller_departmentid");

                entity.Property(e => e.CallerFilterType).HasColumnName("caller_filter_type");

                entity.Property(e => e.Categoryid).HasColumnName("categoryid");

                entity.Property(e => e.Changetype).HasColumnName("changetype");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("ntext");

                entity.Property(e => e.DurationInMinutesRfc).HasColumnName("duration_in_minutes_rfc");

                entity.Property(e => e.DurationInMinutesSimple).HasColumnName("duration_in_minutes_simple");

                entity.Property(e => e.DurationInWorkdaysRfc).HasColumnName("duration_in_workdays_rfc");

                entity.Property(e => e.DurationInWorkdaysSimple).HasColumnName("duration_in_workdays_simple");

                entity.Property(e => e.Estimatedexpenses)
                    .HasColumnName("estimatedexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.Estimatedtimetaken).HasColumnName("estimatedtimetaken");

                entity.Property(e => e.EvalAuthoperatorid).HasColumnName("eval_authoperatorid");

                entity.Property(e => e.EvalAuthpersonid).HasColumnName("eval_authpersonid");

                entity.Property(e => e.EvalDecidedby).HasColumnName("eval_decidedby");

                entity.Property(e => e.Impactid).HasColumnName("impactid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.IncidentCategoryActive).HasColumnName("incident_category_active");

                entity.Property(e => e.IncidentFilterType).HasColumnName("incident_filter_type");

                entity.Property(e => e.IncidentSubcategoryActive).HasColumnName("incident_subcategory_active");

                entity.Property(e => e.IncidentTypeActive).HasColumnName("incident_type_active");

                entity.Property(e => e.IncidentTypeid).HasColumnName("incident_typeid");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isurgent).HasColumnName("isurgent");

                entity.Property(e => e.Managerid).HasColumnName("managerid");

                entity.Property(e => e.Metanotes)
                    .HasColumnName("metanotes")
                    .HasColumnType("ntext");

                entity.Property(e => e.Number)
                    .IsRequired()
                    .HasColumnName("number")
                    .HasMaxLength(30);

                entity.Property(e => e.ObjectCardtype)
                    .HasColumnName("object_cardtype")
                    .HasMaxLength(20);

                entity.Property(e => e.ObjectCardtypeFilterActive).HasColumnName("object_cardtype_filter_active");

                entity.Property(e => e.ObjectFilterType).HasColumnName("object_filter_type");

                entity.Property(e => e.ObjectMakeFilterActive).HasColumnName("object_make_filter_active");

                entity.Property(e => e.ObjectMakeid).HasColumnName("object_makeid");

                entity.Property(e => e.ObjectTypeFilterActive).HasColumnName("object_type_filter_active");

                entity.Property(e => e.ObjectTypeid).HasColumnName("object_typeid");

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.PrelReqApproved).HasColumnName("prel_req_approved");

                entity.Property(e => e.Priorityid).HasColumnName("priorityid");

                entity.Property(e => e.ProAuthoperatorid).HasColumnName("pro_authoperatorid");

                entity.Property(e => e.ProAuthpersonid).HasColumnName("pro_authpersonid");

                entity.Property(e => e.ProDecidedby).HasColumnName("pro_decidedby");

                entity.Property(e => e.ReqApproved).HasColumnName("req_approved");

                entity.Property(e => e.ReqAuthoperatorid).HasColumnName("req_authoperatorid");

                entity.Property(e => e.ReqAuthpersonid).HasColumnName("req_authpersonid");

                entity.Property(e => e.RfcCategoryActive).HasColumnName("rfc_category_active");

                entity.Property(e => e.RfcFilterType).HasColumnName("rfc_filter_type");

                entity.Property(e => e.RfcImpactActive).HasColumnName("rfc_impact_active");

                entity.Property(e => e.RfcSubcategoryActive).HasColumnName("rfc_subcategory_active");

                entity.Property(e => e.RfcTypeActive).HasColumnName("rfc_type_active");

                entity.Property(e => e.RfcUrgencyActive).HasColumnName("rfc_urgency_active");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Subcategoryid).HasColumnName("subcategoryid");

                entity.Property(e => e.Typeid).HasColumnName("typeid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.UseCurrentManager).HasColumnName("use_current_manager");

                entity.Property(e => e.UseCurrentOperator).HasColumnName("use_current_operator");

                entity.Property(e => e.UseInIncident).HasColumnName("use_in_incident");

                entity.Property(e => e.UseInRfc).HasColumnName("use_in_rfc");

                entity.Property(e => e.UseInSsd).HasColumnName("use_in_ssd");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Withevaluation).HasColumnName("withevaluation");

                entity.HasOne(d => d.Archivereason)
                    .WithMany(p => p.ChangeTemplate)
                    .HasForeignKey(d => d.Archivereasonid)
                    .HasConstraintName("fk_archiefreden_archivereasonid_change_template");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.ChangeTemplateAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_change_template");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.ChangeTemplateAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_change_template");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.ChangeTemplateAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_change_template");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.ChangeTemplateAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_change_template");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.ChangeTemplateAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_change_template");

                entity.HasOne(d => d.Benefit)
                    .WithMany(p => p.ChangeTemplate)
                    .HasForeignKey(d => d.Benefitid)
                    .HasConstraintName("fk_changebenefit_benefitid_change_template");

                entity.HasOne(d => d.CallerBranch)
                    .WithMany(p => p.ChangeTemplate)
                    .HasForeignKey(d => d.CallerBranchid)
                    .HasConstraintName("fk_vestiging_caller_branchid_change_template");

                entity.HasOne(d => d.CallerBudgetholder)
                    .WithMany(p => p.ChangeTemplate)
                    .HasForeignKey(d => d.CallerBudgetholderid)
                    .HasConstraintName("fk_budgethouder_caller_budgetholderid_change_template");

                entity.HasOne(d => d.CallerDepartment)
                    .WithMany(p => p.ChangeTemplate)
                    .HasForeignKey(d => d.CallerDepartmentid)
                    .HasConstraintName("fk_afdeling_caller_departmentid_change_template");

                entity.HasOne(d => d.Category)
                    .WithMany(p => p.ChangeTemplateCategory)
                    .HasForeignKey(d => d.Categoryid)
                    .HasConstraintName("fk_classificatie_categoryid_change_template");

                entity.HasOne(d => d.EvalAuthoperator)
                    .WithMany(p => p.ChangeTemplateEvalAuthoperator)
                    .HasForeignKey(d => d.EvalAuthoperatorid)
                    .HasConstraintName("fk_actiedoor_eval_authoperatorid_change_template");

                entity.HasOne(d => d.EvalAuthperson)
                    .WithMany(p => p.ChangeTemplateEvalAuthperson)
                    .HasForeignKey(d => d.EvalAuthpersonid)
                    .HasConstraintName("fk_persoon_eval_authpersonid_change_template");

                entity.HasOne(d => d.Impact)
                    .WithMany(p => p.ChangeTemplate)
                    .HasForeignKey(d => d.Impactid)
                    .HasConstraintName("fk_wijziging_impact_impactid_change_template");

                entity.HasOne(d => d.IncidentType)
                    .WithMany(p => p.ChangeTemplate)
                    .HasForeignKey(d => d.IncidentTypeid)
                    .HasConstraintName("fk_soortmelding_incident_typeid_change_template");

                entity.HasOne(d => d.Manager)
                    .WithMany(p => p.ChangeTemplateManager)
                    .HasForeignKey(d => d.Managerid)
                    .HasConstraintName("fk_actiedoor_managerid_change_template");

                entity.HasOne(d => d.ObjectMake)
                    .WithMany(p => p.ChangeTemplate)
                    .HasForeignKey(d => d.ObjectMakeid)
                    .HasConstraintName("fk_objectmerk_object_makeid_change_template");

                entity.HasOne(d => d.ObjectType)
                    .WithMany(p => p.ChangeTemplate)
                    .HasForeignKey(d => d.ObjectTypeid)
                    .HasConstraintName("fk_objectsoort_object_typeid_change_template");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.ChangeTemplateOperatorgroup)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_change_template");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.ChangeTemplateOperator)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_change_template");

                entity.HasOne(d => d.Priority)
                    .WithMany(p => p.ChangeTemplate)
                    .HasForeignKey(d => d.Priorityid)
                    .HasConstraintName("fk_change_priority_priorityid_change_template");

                entity.HasOne(d => d.ProAuthoperator)
                    .WithMany(p => p.ChangeTemplateProAuthoperator)
                    .HasForeignKey(d => d.ProAuthoperatorid)
                    .HasConstraintName("fk_actiedoor_pro_authoperatorid_change_template");

                entity.HasOne(d => d.ProAuthperson)
                    .WithMany(p => p.ChangeTemplateProAuthperson)
                    .HasForeignKey(d => d.ProAuthpersonid)
                    .HasConstraintName("fk_persoon_pro_authpersonid_change_template");

                entity.HasOne(d => d.ReqAuthoperator)
                    .WithMany(p => p.ChangeTemplateReqAuthoperator)
                    .HasForeignKey(d => d.ReqAuthoperatorid)
                    .HasConstraintName("fk_actiedoor_req_authoperatorid_change_template");

                entity.HasOne(d => d.ReqAuthperson)
                    .WithMany(p => p.ChangeTemplateReqAuthperson)
                    .HasForeignKey(d => d.ReqAuthpersonid)
                    .HasConstraintName("fk_persoon_req_authpersonid_change_template");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.ChangeTemplate)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_wijzigingstatus_statusid_change_template");

                entity.HasOne(d => d.Subcategory)
                    .WithMany(p => p.ChangeTemplateSubcategory)
                    .HasForeignKey(d => d.Subcategoryid)
                    .HasConstraintName("fk_classificatie_subcategoryid_change_template");

                entity.HasOne(d => d.Type)
                    .WithMany(p => p.ChangeTemplate)
                    .HasForeignKey(d => d.Typeid)
                    .HasConstraintName("fk_wbaanvraagtype_typeid_change_template");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeTemplateUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_change_template");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeTemplateUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_change_template");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.ChangeTemplateVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_change_template");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.ChangeTemplateVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_change_template");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.ChangeTemplateVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_change_template");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.ChangeTemplateVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_change_template");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.ChangeTemplateVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_change_template");
            });

            modelBuilder.Entity<ChangeTemplateDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_template__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_change_template__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_change_template__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_change_template__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_change_template__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeTemplateDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_change_template_kaartid_change_template__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeTemplateDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_change_template__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeTemplateDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_change_template__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeTemplateDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_change_template__documenten");
            });

            modelBuilder.Entity<ChangeTemplateDocuments>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_template_documents");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_change_template_documents_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_change_template_documents_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_change_template_documents_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_change_template_documents_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeTemplateDocuments)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_change_template_kaartid_change_template_documents");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeTemplateDocuments)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_change_template_documents");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeTemplateDocumentsUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_change_template_documents");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeTemplateDocumentsUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_change_template_documents");
            });

            modelBuilder.Entity<ChangeTemplateEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_template__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_change_template__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_change_template__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ChangeTemplateEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_change_template__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeTemplateEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_change_template_kaartid_change_template__emailberichten");
            });

            modelBuilder.Entity<Changetemplategrouplink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changetemplategrouplink");

                entity.HasIndex(e => e.Changetemplateid)
                    .HasName("idx_changetemplategrouplink_changetemplateid");

                entity.HasIndex(e => e.Groupid)
                    .HasName("idx_changetemplategrouplink_groupid");

                entity.HasIndex(e => new { e.Changetemplateid, e.Groupid })
                    .HasName("uidx_changetemplategrouplink_changetemplateid_groupid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Changetemplateid).HasColumnName("changetemplateid");

                entity.Property(e => e.Groupid).HasColumnName("groupid");

                entity.HasOne(d => d.Changetemplate)
                    .WithMany(p => p.Changetemplategrouplink)
                    .HasForeignKey(d => d.Changetemplateid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_template_changetemplateid_changetemplategrouplink");

                entity.HasOne(d => d.Group)
                    .WithMany(p => p.Changetemplategrouplink)
                    .HasForeignKey(d => d.Groupid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_group_groupid_changetemplategrouplink");
            });

            modelBuilder.Entity<ChangeTemplateLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_template__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_change_template__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_change_template__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_change_template__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_change_template__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeTemplateLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_change_template_kaartid_change_template__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeTemplateLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_change_template__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeTemplateLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_change_template__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeTemplateLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_change_template__logboek");
            });

            modelBuilder.Entity<ChangeTemplateMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("change_template__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_change_template__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_change_template__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_change_template__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_change_template__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_change_template__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_change_template__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_change_template__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_change_template__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_change_template__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.ChangeTemplateMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_change_template__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.ChangeTemplateMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_change_template_parentid_change_template__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeTemplateMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_change_template__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeTemplateMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_change_template__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeTemplateMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_change_template__memo_history");
            });

            modelBuilder.Entity<Changeversion>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeversion");

                entity.HasIndex(e => e.Archivereasonid)
                    .HasName("idx_changeversion_archivereasonid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_changeversion_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_changeversion_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_changeversion_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_changeversion_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_changeversion_attvrijeopzoek5");

                entity.HasIndex(e => e.Benefitid)
                    .HasName("idx_changeversion_benefitid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_changeversion_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_changeversion_datwijzig");

                entity.HasIndex(e => e.Freezedate)
                    .HasName("idx_changeversion_freezedate");

                entity.HasIndex(e => e.Impactid)
                    .HasName("idx_changeversion_impactid");

                entity.HasIndex(e => e.Implementationdate)
                    .HasName("idx_changeversion_implementationdate");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_changeversion_importid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_changeversion_operatorid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_changeversion_parentid");

                entity.HasIndex(e => e.Plannedimpldate)
                    .HasName("idx_changeversion_plannedimpldate");

                entity.HasIndex(e => e.Priorityid)
                    .HasName("idx_changeversion_priorityid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_changeversion_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_changeversion_statusid");

                entity.HasIndex(e => e.Typeid)
                    .HasName("idx_changeversion_typeid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_changeversion_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_changeversion_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_changeversion_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_changeversion_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_changeversion_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_changeversion_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_changeversion_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Action)
                    .HasColumnName("action")
                    .HasColumnType("ntext");

                entity.Property(e => e.Archivereasonid).HasColumnName("archivereasonid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Benefitid).HasColumnName("benefitid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Briefdescription)
                    .IsRequired()
                    .HasColumnName("briefdescription")
                    .HasMaxLength(80);

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("ntext");

                entity.Property(e => e.Freezedate)
                    .HasColumnName("freezedate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Impactid).HasColumnName("impactid");

                entity.Property(e => e.Implementationdate)
                    .HasColumnName("implementationdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Implemented).HasColumnName("implemented");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasColumnType("ntext");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Plannedimpldate)
                    .HasColumnName("plannedimpldate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Priorityid).HasColumnName("priorityid");

                entity.Property(e => e.PublishDescription)
                    .HasColumnName("publish_description")
                    .HasColumnType("ntext");

                entity.Property(e => e.PublishDescriptionType).HasColumnName("publish_description_type");

                entity.Property(e => e.PublishTitle)
                    .IsRequired()
                    .HasColumnName("publish_title")
                    .HasMaxLength(80);

                entity.Property(e => e.PublishType).HasColumnName("publish_type");

                entity.Property(e => e.RefProgresstrail)
                    .HasColumnName("ref_progresstrail")
                    .HasColumnType("ntext");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Typeid).HasColumnName("typeid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Archivereason)
                    .WithMany(p => p.Changeversion)
                    .HasForeignKey(d => d.Archivereasonid)
                    .HasConstraintName("fk_archiefreden_archivereasonid_changeversion");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.ChangeversionAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_changeversion");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.ChangeversionAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_changeversion");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.ChangeversionAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_changeversion");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.ChangeversionAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_changeversion");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.ChangeversionAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_changeversion");

                entity.HasOne(d => d.Benefit)
                    .WithMany(p => p.Changeversion)
                    .HasForeignKey(d => d.Benefitid)
                    .HasConstraintName("fk_changebenefit_benefitid_changeversion");

                entity.HasOne(d => d.Impact)
                    .WithMany(p => p.Changeversion)
                    .HasForeignKey(d => d.Impactid)
                    .HasConstraintName("fk_wijziging_impact_impactid_changeversion");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.Changeversion)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_changeversion");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.InverseParent)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_changeversion_parentid_changeversion");

                entity.HasOne(d => d.Priority)
                    .WithMany(p => p.Changeversion)
                    .HasForeignKey(d => d.Priorityid)
                    .HasConstraintName("fk_change_priority_priorityid_changeversion");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Changeversion)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_wijzigingstatus_statusid_changeversion");

                entity.HasOne(d => d.Type)
                    .WithMany(p => p.Changeversion)
                    .HasForeignKey(d => d.Typeid)
                    .HasConstraintName("fk_wbaanvraagtype_typeid_changeversion");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeversionUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_changeversion");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeversionUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_changeversion");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.ChangeversionVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_changeversion");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.ChangeversionVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_changeversion");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.ChangeversionVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_changeversion");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.ChangeversionVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_changeversion");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.ChangeversionVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_changeversion");
            });

            modelBuilder.Entity<ChangeversionDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeversion__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_changeversion__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_changeversion__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_changeversion__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_changeversion__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeversionDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_changeversion_kaartid_changeversion__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeversionDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_changeversion__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeversionDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_changeversion__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeversionDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_changeversion__documenten");
            });

            modelBuilder.Entity<ChangeversionEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeversion__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_changeversion__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_changeversion__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ChangeversionEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_changeversion__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeversionEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_changeversion_kaartid_changeversion__emailberichten");
            });

            modelBuilder.Entity<ChangeversionLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeversion__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_changeversion__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_changeversion__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_changeversion__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_changeversion__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ChangeversionLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_changeversion_kaartid_changeversion__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeversionLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_changeversion__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeversionLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_changeversion__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeversionLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_changeversion__logboek");
            });

            modelBuilder.Entity<ChangeversionMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("changeversion__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_changeversion__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_changeversion__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_changeversion__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_changeversion__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_changeversion__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_changeversion__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_changeversion__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_changeversion__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_changeversion__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.ChangeversionMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_changeversion__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.ChangeversionMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_changeversion_parentid_changeversion__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ChangeversionMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_changeversion__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ChangeversionMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_changeversion__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ChangeversionMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_changeversion__memo_history");
            });

            modelBuilder.Entity<Classificatie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("classificatie");

                entity.HasIndex(e => e.Changeactivity)
                    .HasName("idx_classificatie_changeactivity");

                entity.HasIndex(e => e.Changeauthactivity)
                    .HasName("idx_classificatie_changeauthactivity");

                entity.HasIndex(e => e.Changecoordinator)
                    .HasName("idx_classificatie_changecoordinator");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_classificatie_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_classificatie_datwijzig");

                entity.HasIndex(e => e.Firstlinesupplier)
                    .HasName("idx_classificatie_firstlinesupplier");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_classificatie_importid");

                entity.HasIndex(e => e.Lijn1actiedoorid)
                    .HasName("idx_classificatie_lijn1actiedoorid");

                entity.HasIndex(e => e.Lijn2actiedoorid)
                    .HasName("idx_classificatie_lijn2actiedoorid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_classificatie_naam");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_classificatie_parentid");

                entity.HasIndex(e => e.Projectcoordinatorid)
                    .HasName("idx_classificatie_projectcoordinatorid");

                entity.HasIndex(e => e.Projectoperatorid)
                    .HasName("idx_classificatie_projectoperatorid");

                entity.HasIndex(e => e.Secondlinesupplier)
                    .HasName("idx_classificatie_secondlinesupplier");

                entity.HasIndex(e => e.Simplechange)
                    .HasName("idx_classificatie_simplechange");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_classificatie_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_classificatie_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_classificatie_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Changeactivity).HasColumnName("changeactivity");

                entity.Property(e => e.Changeauthactivity).HasColumnName("changeauthactivity");

                entity.Property(e => e.Changecoordinator).HasColumnName("changecoordinator");

                entity.Property(e => e.Changemanagement).HasColumnName("changemanagement");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Dnocontract).HasColumnName("dnocontract");

                entity.Property(e => e.Firstlinesupplier).HasColumnName("firstlinesupplier");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Incidentbeheer).HasColumnName("incidentbeheer");

                entity.Property(e => e.Lijn1actiedoorid).HasColumnName("lijn1actiedoorid");

                entity.Property(e => e.Lijn2actiedoorid).HasColumnName("lijn2actiedoorid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(30);

                entity.Property(e => e.Operationeelbeheer).HasColumnName("operationeelbeheer");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Probleembeheer).HasColumnName("probleembeheer");

                entity.Property(e => e.Projectcoordinatorid).HasColumnName("projectcoordinatorid");

                entity.Property(e => e.Projectmanagement).HasColumnName("projectmanagement");

                entity.Property(e => e.Projectoperatorid).HasColumnName("projectoperatorid");

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.Secondlinesupplier).HasColumnName("secondlinesupplier");

                entity.Property(e => e.Simplechange).HasColumnName("simplechange");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Steekwoorden)
                    .HasColumnName("steekwoorden")
                    .HasColumnType("ntext");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.ChangeactivityNavigation)
                    .WithMany(p => p.ClassificatieChangeactivityNavigation)
                    .HasForeignKey(d => d.Changeactivity)
                    .HasConstraintName("fk_actiedoor_changeactivity_classificatie");

                entity.HasOne(d => d.ChangeauthactivityNavigation)
                    .WithMany(p => p.ClassificatieChangeauthactivityNavigation)
                    .HasForeignKey(d => d.Changeauthactivity)
                    .HasConstraintName("fk_actiedoor_changeauthactivity_classificatie");

                entity.HasOne(d => d.ChangecoordinatorNavigation)
                    .WithMany(p => p.ClassificatieChangecoordinatorNavigation)
                    .HasForeignKey(d => d.Changecoordinator)
                    .HasConstraintName("fk_actiedoor_changecoordinator_classificatie");

                entity.HasOne(d => d.FirstlinesupplierNavigation)
                    .WithMany(p => p.ClassificatieFirstlinesupplierNavigation)
                    .HasForeignKey(d => d.Firstlinesupplier)
                    .HasConstraintName("fk_leverancier_firstlinesupplier_classificatie");

                entity.HasOne(d => d.Lijn1actiedoor)
                    .WithMany(p => p.ClassificatieLijn1actiedoor)
                    .HasForeignKey(d => d.Lijn1actiedoorid)
                    .HasConstraintName("fk_actiedoor_lijn1actiedoorid_classificatie");

                entity.HasOne(d => d.Lijn2actiedoor)
                    .WithMany(p => p.ClassificatieLijn2actiedoor)
                    .HasForeignKey(d => d.Lijn2actiedoorid)
                    .HasConstraintName("fk_actiedoor_lijn2actiedoorid_classificatie");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.InverseParent)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_classificatie_parentid_classificatie");

                entity.HasOne(d => d.Projectcoordinator)
                    .WithMany(p => p.ClassificatieProjectcoordinator)
                    .HasForeignKey(d => d.Projectcoordinatorid)
                    .HasConstraintName("fk_actiedoor_projectcoordinatorid_classificatie");

                entity.HasOne(d => d.Projectoperator)
                    .WithMany(p => p.ClassificatieProjectoperator)
                    .HasForeignKey(d => d.Projectoperatorid)
                    .HasConstraintName("fk_actiedoor_projectoperatorid_classificatie");

                entity.HasOne(d => d.SecondlinesupplierNavigation)
                    .WithMany(p => p.ClassificatieSecondlinesupplierNavigation)
                    .HasForeignKey(d => d.Secondlinesupplier)
                    .HasConstraintName("fk_leverancier_secondlinesupplier_classificatie");

                entity.HasOne(d => d.SimplechangeNavigation)
                    .WithMany(p => p.ClassificatieSimplechangeNavigation)
                    .HasForeignKey(d => d.Simplechange)
                    .HasConstraintName("fk_actiedoor_simplechange_classificatie");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ClassificatieUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_classificatie");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ClassificatieUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_classificatie");
            });

            modelBuilder.Entity<ClassificatieTranslation>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("classificatie_translation");

                entity.HasIndex(e => e.Entityid)
                    .HasName("idx_classificatie_translation_entityid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_classificatie_translation_importid");

                entity.HasIndex(e => e.Localeid)
                    .HasName("idx_classificatie_translation_localeid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Entityid).HasColumnName("entityid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Localeid).HasColumnName("localeid");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(30);

                entity.Property(e => e.Rank).HasColumnName("rank");

                entity.HasOne(d => d.Entity)
                    .WithMany(p => p.ClassificatieTranslation)
                    .HasForeignKey(d => d.Entityid)
                    .HasConstraintName("fk_classificatie_entityid_classificatie_translation");

                entity.HasOne(d => d.Locale)
                    .WithMany(p => p.ClassificatieTranslation)
                    .HasForeignKey(d => d.Localeid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_kennistaal_localeid_classificatie_translation");
            });

            modelBuilder.Entity<Collectiveagreement>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("collectiveagreement");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_collectiveagreement_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_collectiveagreement_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_collectiveagreement_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Configuratie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("configuratie");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_configuratie_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_configuratie_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_configuratie_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_configuratie_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_configuratie_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_configuratie_attvrijeopzoek5");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_configuratie_budgethouderid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_configuratie_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_configuratie_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_configuratie_importid");

                entity.HasIndex(e => e.Lokatieid)
                    .HasName("idx_configuratie_lokatieid");

                entity.HasIndex(e => e.Naam)
                    .HasName("uidx_configuratie_naam")
                    .IsUnique();

                entity.HasIndex(e => e.Persoongroepid)
                    .HasName("idx_configuratie_persoongroepid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_configuratie_persoonid");

                entity.HasIndex(e => e.RefAfdeling)
                    .HasName("idx_configuratie_ref_afdeling");

                entity.HasIndex(e => e.RefBudgethouder)
                    .HasName("idx_configuratie_ref_budgethouder");

                entity.HasIndex(e => e.RefGebruiker)
                    .HasName("idx_configuratie_ref_gebruiker");

                entity.HasIndex(e => e.RefGebruikerdynanaam)
                    .HasName("idx_configuratie_ref_gebruikerdynanaam");

                entity.HasIndex(e => e.RefGroepnaam)
                    .HasName("idx_configuratie_ref_groepnaam");

                entity.HasIndex(e => e.RefLokatie)
                    .HasName("idx_configuratie_ref_lokatie");

                entity.HasIndex(e => e.RefPlaats1)
                    .HasName("idx_configuratie_ref_plaats1");

                entity.HasIndex(e => e.RefVestiging)
                    .HasName("idx_configuratie_ref_vestiging");

                entity.HasIndex(e => e.Soortaansluitingid)
                    .HasName("idx_configuratie_soortaansluitingid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_configuratie_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_configuratie_statusid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_configuratie_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_configuratie_uidwijzig");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_configuratie_vestigingid");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_configuratie_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_configuratie_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_configuratie_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_configuratie_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_configuratie_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_configuratie_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_configuratie_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diversen)
                    .HasColumnName("diversen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Gebruikerofgroepkeuze).HasColumnName("gebruikerofgroepkeuze");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Lokatieid).HasColumnName("lokatieid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(30);

                entity.Property(e => e.Nodenummer)
                    .IsRequired()
                    .HasColumnName("nodenummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Persoongroepid).HasColumnName("persoongroepid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.RefAfdeling)
                    .IsRequired()
                    .HasColumnName("ref_afdeling")
                    .HasMaxLength(100);

                entity.Property(e => e.RefBudgethouder)
                    .IsRequired()
                    .HasColumnName("ref_budgethouder")
                    .HasMaxLength(100);

                entity.Property(e => e.RefGebruiker)
                    .IsRequired()
                    .HasColumnName("ref_gebruiker")
                    .HasMaxLength(109);

                entity.Property(e => e.RefGebruikerdynanaam)
                    .IsRequired()
                    .HasColumnName("ref_gebruikerdynanaam")
                    .HasMaxLength(109);

                entity.Property(e => e.RefGroepnaam)
                    .IsRequired()
                    .HasColumnName("ref_groepnaam")
                    .HasMaxLength(50);

                entity.Property(e => e.RefLokatie)
                    .IsRequired()
                    .HasColumnName("ref_lokatie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefPlaats1)
                    .IsRequired()
                    .HasColumnName("ref_plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.Soortaansluitingid).HasColumnName("soortaansluitingid");

                entity.Property(e => e.Specificatie1)
                    .IsRequired()
                    .HasColumnName("specificatie1")
                    .HasMaxLength(30);

                entity.Property(e => e.Specificatie2)
                    .IsRequired()
                    .HasColumnName("specificatie2")
                    .HasMaxLength(30);

                entity.Property(e => e.Specificatie3)
                    .IsRequired()
                    .HasColumnName("specificatie3")
                    .HasMaxLength(30);

                entity.Property(e => e.Specificatie4)
                    .IsRequired()
                    .HasColumnName("specificatie4")
                    .HasMaxLength(30);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Configuratie)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_configuratie");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.ConfiguratieAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_configuratie");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.ConfiguratieAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_configuratie");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.ConfiguratieAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_configuratie");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.ConfiguratieAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_configuratie");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.ConfiguratieAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_configuratie");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Configuratie)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_configuratie");

                entity.HasOne(d => d.Lokatie)
                    .WithMany(p => p.Configuratie)
                    .HasForeignKey(d => d.Lokatieid)
                    .HasConstraintName("fk_locatie_lokatieid_configuratie");

                entity.HasOne(d => d.Persoongroep)
                    .WithMany(p => p.Configuratie)
                    .HasForeignKey(d => d.Persoongroepid)
                    .HasConstraintName("fk_persoongroep_persoongroepid_configuratie");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Configuratie)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_configuratie");

                entity.HasOne(d => d.Soortaansluiting)
                    .WithMany(p => p.Configuratie)
                    .HasForeignKey(d => d.Soortaansluitingid)
                    .HasConstraintName("fk_soortaansluiting_soortaansluitingid_configuratie");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Configuratie)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_objectstatus_statusid_configuratie");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ConfiguratieUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_configuratie");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ConfiguratieUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_configuratie");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.Configuratie)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_configuratie");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.ConfiguratieVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_configuratie");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.ConfiguratieVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_configuratie");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.ConfiguratieVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_configuratie");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.ConfiguratieVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_configuratie");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.ConfiguratieVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_configuratie");
            });

            modelBuilder.Entity<ConfiguratieConfiguratieLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("configuratie_configuratie_link");

                entity.HasIndex(e => e.Childid)
                    .HasName("idx_configuratie_configuratie_link_childid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_configuratie_configuratie_link_parentid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Childid).HasColumnName("childid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.HasOne(d => d.Child)
                    .WithMany(p => p.ConfiguratieConfiguratieLinkChild)
                    .HasForeignKey(d => d.Childid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_configuratie_childid_configuratie_configuratie_link");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.ConfiguratieConfiguratieLinkParent)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_configuratie_parentid_configuratie_configuratie_link");
            });

            modelBuilder.Entity<ConfiguratieDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("configuratie__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_configuratie__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_configuratie__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_configuratie__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_configuratie__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_configuratie__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_configuratie__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ConfiguratieDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_configuratie_kaartid_configuratie__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ConfiguratieDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_configuratie__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ConfiguratieDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_configuratie__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ConfiguratieDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_configuratie__documenten");
            });

            modelBuilder.Entity<ConfiguratieEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("configuratie__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_configuratie__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_configuratie__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_configuratie__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ConfiguratieEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_configuratie__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ConfiguratieEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_configuratie_kaartid_configuratie__emailberichten");
            });

            modelBuilder.Entity<ConfiguratieLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("configuratie__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_configuratie__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_configuratie__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_configuratie__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_configuratie__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_configuratie__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_configuratie__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ConfiguratieLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_configuratie_kaartid_configuratie__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ConfiguratieLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_configuratie__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ConfiguratieLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_configuratie__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ConfiguratieLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_configuratie__logboek");
            });

            modelBuilder.Entity<ConfiguratieMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("configuratie__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_configuratie__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_configuratie__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_configuratie__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_configuratie__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_configuratie__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_configuratie__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_configuratie__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_configuratie__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_configuratie__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.ConfiguratieMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_configuratie__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.ConfiguratieMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_configuratie_parentid_configuratie__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ConfiguratieMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_configuratie__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ConfiguratieMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_configuratie__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ConfiguratieMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_configuratie__memo_history");
            });

            modelBuilder.Entity<Connectie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("connectie");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Eind).HasColumnName("eind");

                entity.Property(e => e.Nummer).HasColumnName("nummer");

                entity.Property(e => e.Start).HasColumnName("start");
            });

            modelBuilder.Entity<Contracttype>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("contracttype");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_contracttype_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_contracttype_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_contracttype_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ConversationsHide>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("conversations_hide");

                entity.HasIndex(e => e.Messageid)
                    .HasName("idx_conversations_hide_messageid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_conversations_hide_operatorid");

                entity.HasIndex(e => new { e.Operatorid, e.Messageid })
                    .HasName("uidx_conversations_hide_operatorid_messageid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Messageid).HasColumnName("messageid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.HasOne(d => d.Message)
                    .WithMany(p => p.ConversationsHide)
                    .HasForeignKey(d => d.Messageid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_conversations_post_messageid_conversations_hide");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.ConversationsHide)
                    .HasForeignKey(d => d.Operatorid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_actiedoor_operatorid_conversations_hide");
            });

            modelBuilder.Entity<ConversationsLike>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("conversations_like");

                entity.HasIndex(e => e.Messageid)
                    .HasName("idx_conversations_like_messageid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_conversations_like_operatorid");

                entity.HasIndex(e => new { e.Operatorid, e.Messageid })
                    .HasName("uidx_conversations_like_operatorid_messageid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Messageid).HasColumnName("messageid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.HasOne(d => d.Message)
                    .WithMany(p => p.ConversationsLike)
                    .HasForeignKey(d => d.Messageid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_conversations_post_messageid_conversations_like");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.ConversationsLike)
                    .HasForeignKey(d => d.Operatorid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_actiedoor_operatorid_conversations_like");
            });

            modelBuilder.Entity<ConversationsPost>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("conversations_post");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_conversations_post_operatorid");

                entity.HasIndex(e => e.ReplyTo)
                    .HasName("idx_conversations_post_reply_to");

                entity.HasIndex(e => e.Timestamp)
                    .HasName("idx_conversations_post_timestamp");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Message)
                    .HasColumnName("message")
                    .HasColumnType("ntext");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.ReplyTo).HasColumnName("reply_to");

                entity.Property(e => e.Timestamp)
                    .HasColumnName("timestamp")
                    .HasColumnType("datetime");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.ConversationsPost)
                    .HasForeignKey(d => d.Operatorid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_actiedoor_operatorid_conversations_post");

                entity.HasOne(d => d.ReplyToNavigation)
                    .WithMany(p => p.InverseReplyToNavigation)
                    .HasForeignKey(d => d.ReplyTo)
                    .HasConstraintName("fk_conversations_post_reply_to_conversations_post");
            });

            modelBuilder.Entity<Dnocontract>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnocontract");

                entity.HasIndex(e => e.Aanvangsdatum)
                    .HasName("idx_dnocontract_aanvangsdatum");

                entity.HasIndex(e => e.Afdelingid)
                    .HasName("idx_dnocontract_afdelingid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_dnocontract_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_dnocontract_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_dnocontract_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_dnocontract_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_dnocontract_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_dnocontract_attvrijeopzoek5");

                entity.HasIndex(e => e.Behandelaarid)
                    .HasName("idx_dnocontract_behandelaarid");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_dnocontract_budgethouderid");

                entity.HasIndex(e => e.Categorieid)
                    .HasName("idx_dnocontract_categorieid");

                entity.HasIndex(e => e.Contractbudgethouderid)
                    .HasName("idx_dnocontract_contractbudgethouderid");

                entity.HasIndex(e => e.Contractstatusid)
                    .HasName("idx_dnocontract_contractstatusid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_dnocontract_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_dnocontract_datwijzig");

                entity.HasIndex(e => e.Einddatum)
                    .HasName("idx_dnocontract_einddatum");

                entity.HasIndex(e => e.Extraaid)
                    .HasName("idx_dnocontract_extraaid");

                entity.HasIndex(e => e.Extrabid)
                    .HasName("idx_dnocontract_extrabid");

                entity.HasIndex(e => e.Getekendop)
                    .HasName("idx_dnocontract_getekendop");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_dnocontract_importid");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_dnocontract_leverancierid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_dnocontract_naam");

                entity.HasIndex(e => e.Opzegdatum)
                    .HasName("idx_dnocontract_opzegdatum");

                entity.HasIndex(e => e.Periodeid)
                    .HasName("idx_dnocontract_periodeid");

                entity.HasIndex(e => e.Periodeverlengingid)
                    .HasName("idx_dnocontract_periodeverlengingid");

                entity.HasIndex(e => e.Rappeldatum)
                    .HasName("idx_dnocontract_rappeldatum");

                entity.HasIndex(e => e.RefLeverancier)
                    .HasName("idx_dnocontract_ref_leverancier");

                entity.HasIndex(e => e.Soortid)
                    .HasName("idx_dnocontract_soortid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_dnocontract_status");

                entity.HasIndex(e => e.Subcategorieid)
                    .HasName("idx_dnocontract_subcategorieid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_dnocontract_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_dnocontract_uidwijzig");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_dnocontract_vestigingid");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_dnocontract_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_dnocontract_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_dnocontract_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_dnocontract_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_dnocontract_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_dnocontract_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_dnocontract_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Aanvangsdatum)
                    .HasColumnName("aanvangsdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Afdelingid).HasColumnName("afdelingid");

                entity.Property(e => e.Archiefnummer)
                    .HasColumnName("archiefnummer")
                    .HasMaxLength(60);

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Behandelaarid).HasColumnName("behandelaarid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Categorieid).HasColumnName("categorieid");

                entity.Property(e => e.Contractbudgethouderid).HasColumnName("contractbudgethouderid");

                entity.Property(e => e.Contractstatusid).HasColumnName("contractstatusid");

                entity.Property(e => e.Costcalculationtype).HasColumnName("costcalculationtype");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Einddatum)
                    .HasColumnName("einddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Extraaid).HasColumnName("extraaid");

                entity.Property(e => e.Extrabid).HasColumnName("extrabid");

                entity.Property(e => e.Getekenddoor)
                    .HasColumnName("getekenddoor")
                    .HasMaxLength(60);

                entity.Property(e => e.Getekendop)
                    .HasColumnName("getekendop")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Kosten)
                    .HasColumnName("kosten")
                    .HasColumnType("money");

                entity.Property(e => e.Kostencumulatief)
                    .HasColumnName("kostencumulatief")
                    .HasColumnType("money");

                entity.Property(e => e.Kostenfactor).HasColumnName("kostenfactor");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(40);

                entity.Property(e => e.Omschrijving)
                    .IsRequired()
                    .HasColumnName("omschrijving")
                    .HasMaxLength(40);

                entity.Property(e => e.Opzegdatum)
                    .HasColumnName("opzegdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Periodeid).HasColumnName("periodeid");

                entity.Property(e => e.Periodekosten)
                    .HasColumnName("periodekosten")
                    .HasColumnType("money");

                entity.Property(e => e.Periodeverlengingid).HasColumnName("periodeverlengingid");

                entity.Property(e => e.Rappeldatum)
                    .HasColumnName("rappeldatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefLeverancier)
                    .IsRequired()
                    .HasColumnName("ref_leverancier")
                    .HasMaxLength(60);

                entity.Property(e => e.Soortid).HasColumnName("soortid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Subcategorieid).HasColumnName("subcategorieid");

                entity.Property(e => e.Toelichting)
                    .HasColumnName("toelichting")
                    .HasColumnType("ntext");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Verlengd).HasColumnName("verlengd");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Vestigingofbudgethouder).HasColumnName("vestigingofbudgethouder");

                entity.Property(e => e.Volgnummer).HasColumnName("volgnummer");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Afdeling)
                    .WithMany(p => p.Dnocontract)
                    .HasForeignKey(d => d.Afdelingid)
                    .HasConstraintName("fk_afdeling_afdelingid_dnocontract");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Dnocontract)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_dnocontract");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.DnocontractAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_dnocontract");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.DnocontractAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_dnocontract");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.DnocontractAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_dnocontract");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.DnocontractAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_dnocontract");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.DnocontractAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_dnocontract");

                entity.HasOne(d => d.Behandelaar)
                    .WithMany(p => p.Dnocontract)
                    .HasForeignKey(d => d.Behandelaarid)
                    .HasConstraintName("fk_actiedoor_behandelaarid_dnocontract");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.DnocontractBudgethouder)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_dnocontract");

                entity.HasOne(d => d.Categorie)
                    .WithMany(p => p.DnocontractCategorie)
                    .HasForeignKey(d => d.Categorieid)
                    .HasConstraintName("fk_classificatie_categorieid_dnocontract");

                entity.HasOne(d => d.Contractbudgethouder)
                    .WithMany(p => p.DnocontractContractbudgethouder)
                    .HasForeignKey(d => d.Contractbudgethouderid)
                    .HasConstraintName("fk_budgethouder_contractbudgethouderid_dnocontract");

                entity.HasOne(d => d.Contractstatus)
                    .WithMany(p => p.Dnocontract)
                    .HasForeignKey(d => d.Contractstatusid)
                    .HasConstraintName("fk_dnocontractstatus_contractstatusid_dnocontract");

                entity.HasOne(d => d.Extraa)
                    .WithMany(p => p.Dnocontract)
                    .HasForeignKey(d => d.Extraaid)
                    .HasConstraintName("fk_extraa_extraaid_dnocontract");

                entity.HasOne(d => d.Extrab)
                    .WithMany(p => p.Dnocontract)
                    .HasForeignKey(d => d.Extrabid)
                    .HasConstraintName("fk_extrab_extrabid_dnocontract");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.Dnocontract)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_dnocontract");

                entity.HasOne(d => d.Periode)
                    .WithMany(p => p.Dnocontract)
                    .HasForeignKey(d => d.Periodeid)
                    .HasConstraintName("fk_dnocontractperiode_periodeid_dnocontract");

                entity.HasOne(d => d.Periodeverlenging)
                    .WithMany(p => p.Dnocontract)
                    .HasForeignKey(d => d.Periodeverlengingid)
                    .HasConstraintName("fk_dnocontractverlengperiode_periodeverlengingid_dnocontract");

                entity.HasOne(d => d.Soort)
                    .WithMany(p => p.Dnocontract)
                    .HasForeignKey(d => d.Soortid)
                    .HasConstraintName("fk_dnocontractsoort_soortid_dnocontract");

                entity.HasOne(d => d.Subcategorie)
                    .WithMany(p => p.DnocontractSubcategorie)
                    .HasForeignKey(d => d.Subcategorieid)
                    .HasConstraintName("fk_classificatie_subcategorieid_dnocontract");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.DnocontractUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_dnocontract");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.DnocontractUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_dnocontract");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.Dnocontract)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_dnocontract");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.DnocontractVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_dnocontract");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.DnocontractVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_dnocontract");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.DnocontractVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_dnocontract");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.DnocontractVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_dnocontract");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.DnocontractVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_dnocontract");
            });

            modelBuilder.Entity<DnocontractDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnocontract__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_dnocontract__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_dnocontract__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_dnocontract__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_dnocontract__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_dnocontract__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_dnocontract__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.DnocontractDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_dnocontract_kaartid_dnocontract__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.DnocontractDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_dnocontract__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.DnocontractDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_dnocontract__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.DnocontractDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_dnocontract__documenten");
            });

            modelBuilder.Entity<DnocontractEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnocontract__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_dnocontract__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_dnocontract__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_dnocontract__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.DnocontractEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_dnocontract__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.DnocontractEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_dnocontract_kaartid_dnocontract__emailberichten");
            });

            modelBuilder.Entity<DnocontractLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnocontract__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_dnocontract__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_dnocontract__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_dnocontract__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_dnocontract__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_dnocontract__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_dnocontract__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.DnocontractLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_dnocontract_kaartid_dnocontract__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.DnocontractLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_dnocontract__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.DnocontractLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_dnocontract__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.DnocontractLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_dnocontract__logboek");
            });

            modelBuilder.Entity<DnocontractMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnocontract__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_dnocontract__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_dnocontract__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_dnocontract__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_dnocontract__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_dnocontract__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_dnocontract__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_dnocontract__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_dnocontract__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_dnocontract__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.DnocontractMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_dnocontract__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.DnocontractMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_dnocontract_parentid_dnocontract__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.DnocontractMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_dnocontract__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.DnocontractMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_dnocontract__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.DnocontractMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_dnocontract__memo_history");
            });

            modelBuilder.Entity<Dnocontractperiode>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnocontractperiode");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_dnocontractperiode_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_dnocontractperiode_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_dnocontractperiode_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Dnocontractsoort>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnocontractsoort");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_dnocontractsoort_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_dnocontractsoort_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_dnocontractsoort_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Dnocontractstatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnocontractstatus");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_dnocontractstatus_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_dnocontractstatus_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_dnocontractstatus_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Dnocontractverlengperiode>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnocontractverlengperiode");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_dnocontractverlengperiode_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_dnocontractverlengperiode_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_dnocontractverlengperiode_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<DnocontractVestigingLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnocontract_vestiging_link");

                entity.HasIndex(e => e.Dnocontractid)
                    .HasName("idx_dnocontract_vestiging_link_dnocontractid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_dnocontract_vestiging_link_importid");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_dnocontract_vestiging_link_vestigingid");

                entity.HasIndex(e => new { e.Vestigingid, e.Dnocontractid })
                    .HasName("uidx_dnocontract_vestiging_link_vestigingid_dnocontractid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dnocontractid).HasColumnName("dnocontractid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.HasOne(d => d.Dnocontract)
                    .WithMany(p => p.DnocontractVestigingLink)
                    .HasForeignKey(d => d.Dnocontractid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_dnocontract_dnocontractid_dnocontract_vestiging_link");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.DnocontractVestigingLink)
                    .HasForeignKey(d => d.Vestigingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_vestiging_vestigingid_dnocontract_vestiging_link");
            });

            modelBuilder.Entity<Dnodienst>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnodienst");

                entity.HasIndex(e => e.Aanvangsdatum)
                    .HasName("idx_dnodienst_aanvangsdatum");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_dnodienst_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_dnodienst_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_dnodienst_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_dnodienst_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_dnodienst_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_dnodienst_attvrijeopzoek5");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_dnodienst_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_dnodienst_datwijzig");

                entity.HasIndex(e => e.Defaultfirstlineoperatorid)
                    .HasName("idx_dnodienst_defaultfirstlineoperatorid");

                entity.HasIndex(e => e.Defaultreservationsoperatorid)
                    .HasName("idx_dnodienst_defaultreservationsoperatorid");

                entity.HasIndex(e => e.Defaultsecondlineoperatorid)
                    .HasName("idx_dnodienst_defaultsecondlineoperatorid");

                entity.HasIndex(e => e.Dnocontractid)
                    .HasName("idx_dnodienst_dnocontractid");

                entity.HasIndex(e => e.Dnodienstsoortid)
                    .HasName("idx_dnodienst_dnodienstsoortid");

                entity.HasIndex(e => e.Domeinid)
                    .HasName("idx_dnodienst_domeinid");

                entity.HasIndex(e => e.Doorlooptijdlijn1id)
                    .HasName("idx_dnodienst_doorlooptijdlijn1id");

                entity.HasIndex(e => e.Doorlooptijdlijn2id)
                    .HasName("idx_dnodienst_doorlooptijdlijn2id");

                entity.HasIndex(e => e.Editdaysupfront)
                    .HasName("idx_dnodienst_editdaysupfront");

                entity.HasIndex(e => e.Editdaysupfronttime)
                    .HasName("idx_dnodienst_editdaysupfronttime");

                entity.HasIndex(e => e.Edithoursupfront)
                    .HasName("idx_dnodienst_edithoursupfront");

                entity.HasIndex(e => e.Edituntiltype)
                    .HasName("idx_dnodienst_edituntiltype");

                entity.HasIndex(e => e.Einddatum)
                    .HasName("idx_dnodienst_einddatum");

                entity.HasIndex(e => e.Extraaid)
                    .HasName("idx_dnodienst_extraaid");

                entity.HasIndex(e => e.Extrabid)
                    .HasName("idx_dnodienst_extrabid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_dnodienst_importid");

                entity.HasIndex(e => e.Incidentselectionid)
                    .HasName("idx_dnodienst_incidentselectionid");

                entity.HasIndex(e => e.Managerid)
                    .HasName("idx_dnodienst_managerid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_dnodienst_naam");

                entity.HasIndex(e => e.RefDienstsoort)
                    .HasName("idx_dnodienst_ref_dienstsoort");

                entity.HasIndex(e => e.Reservable)
                    .HasName("idx_dnodienst_reservable");

                entity.HasIndex(e => e.ReservableSeparately)
                    .HasName("idx_dnodienst_reservable_separately");

                entity.HasIndex(e => e.Reservableforfilter)
                    .HasName("idx_dnodienst_reservableforfilter");

                entity.HasIndex(e => e.Reservablessd)
                    .HasName("idx_dnodienst_reservablessd");

                entity.HasIndex(e => e.Selectionid)
                    .HasName("idx_dnodienst_selectionid");

                entity.HasIndex(e => e.Servicewindowid)
                    .HasName("idx_dnodienst_servicewindowid");

                entity.HasIndex(e => e.Soortmeldingid)
                    .HasName("idx_dnodienst_soortmeldingid");

                entity.HasIndex(e => e.Specificatieid)
                    .HasName("idx_dnodienst_specificatieid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_dnodienst_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_dnodienst_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_dnodienst_uidwijzig");

                entity.HasIndex(e => e.Underpinningcontractid)
                    .HasName("idx_dnodienst_underpinningcontractid");

                entity.HasIndex(e => e.Underpinningdienstid)
                    .HasName("idx_dnodienst_underpinningdienstid");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_dnodienst_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_dnodienst_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_dnodienst_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_dnodienst_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_dnodienst_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_dnodienst_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_dnodienst_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Aanvangsdatum)
                    .HasColumnName("aanvangsdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Action)
                    .HasColumnName("action")
                    .HasColumnType("ntext");

                entity.Property(e => e.Algemeenafdeling).HasColumnName("algemeenafdeling");

                entity.Property(e => e.Algemeenalgemeen).HasColumnName("algemeenalgemeen");

                entity.Property(e => e.Algemeenbudgethouder).HasColumnName("algemeenbudgethouder");

                entity.Property(e => e.Algemeenextraa).HasColumnName("algemeenextraa");

                entity.Property(e => e.Algemeenextrab).HasColumnName("algemeenextrab");

                entity.Property(e => e.Algemeenvestiging).HasColumnName("algemeenvestiging");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Availableforincidents).HasColumnName("availableforincidents");

                entity.Property(e => e.Availableforreservations).HasColumnName("availableforreservations");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Costs)
                    .HasColumnName("costs")
                    .HasColumnType("money");

                entity.Property(e => e.CostsHightariff)
                    .HasColumnName("costs_hightariff")
                    .HasColumnType("money");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Defaultamounttype).HasColumnName("defaultamounttype");

                entity.Property(e => e.Defaultdeliverytime).HasColumnName("defaultdeliverytime");

                entity.Property(e => e.Defaultfirstlineoperatorid).HasColumnName("defaultfirstlineoperatorid");

                entity.Property(e => e.Defaultreservationsoperatorid).HasColumnName("defaultreservationsoperatorid");

                entity.Property(e => e.Defaultsecondlineoperatorid).HasColumnName("defaultsecondlineoperatorid");

                entity.Property(e => e.Dependsonunderpinning).HasColumnName("dependsonunderpinning");

                entity.Property(e => e.Dnocontractid).HasColumnName("dnocontractid");

                entity.Property(e => e.Dnodienstsoortid).HasColumnName("dnodienstsoortid");

                entity.Property(e => e.Domeinid).HasColumnName("domeinid");

                entity.Property(e => e.Doorlooptijdlijn1id).HasColumnName("doorlooptijdlijn1id");

                entity.Property(e => e.Doorlooptijdlijn2id).HasColumnName("doorlooptijdlijn2id");

                entity.Property(e => e.Editdaysupfront).HasColumnName("editdaysupfront");

                entity.Property(e => e.Editdaysupfronttime).HasColumnName("editdaysupfronttime");

                entity.Property(e => e.Edithoursupfront).HasColumnName("edithoursupfront");

                entity.Property(e => e.Edituntiltype).HasColumnName("edituntiltype");

                entity.Property(e => e.Einddatum)
                    .HasColumnName("einddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Extraaid).HasColumnName("extraaid");

                entity.Property(e => e.Extrabid).HasColumnName("extrabid");

                entity.Property(e => e.Fieldfilter).HasColumnName("fieldfilter");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Incidentselectionid).HasColumnName("incidentselectionid");

                entity.Property(e => e.Isgebruikt).HasColumnName("isgebruikt");

                entity.Property(e => e.Kosten)
                    .HasColumnName("kosten")
                    .HasColumnType("money");

                entity.Property(e => e.Managerid).HasColumnName("managerid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Objectfilter).HasColumnName("objectfilter");

                entity.Property(e => e.Omschrijving)
                    .IsRequired()
                    .HasColumnName("omschrijving")
                    .HasMaxLength(50);

                entity.Property(e => e.Published).HasColumnName("published");

                entity.Property(e => e.RefDienstsoort)
                    .IsRequired()
                    .HasColumnName("ref_dienstsoort")
                    .HasMaxLength(100);

                entity.Property(e => e.RefProgresstrail)
                    .HasColumnName("ref_progresstrail")
                    .HasColumnType("ntext");

                entity.Property(e => e.Reservable).HasColumnName("reservable");

                entity.Property(e => e.ReservableSeparately).HasColumnName("reservable_separately");

                entity.Property(e => e.Reservableforfilter).HasColumnName("reservableforfilter");

                entity.Property(e => e.Reservablessd).HasColumnName("reservablessd");

                entity.Property(e => e.Selectionid).HasColumnName("selectionid");

                entity.Property(e => e.ServicewindowOption).HasColumnName("servicewindow_option");

                entity.Property(e => e.Servicewindowid).HasColumnName("servicewindowid");

                entity.Property(e => e.Soortmeldingid).HasColumnName("soortmeldingid");

                entity.Property(e => e.Specificatieid).HasColumnName("specificatieid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Targetgroup).HasColumnName("targetgroup");

                entity.Property(e => e.Termsofsupply)
                    .HasColumnName("termsofsupply")
                    .HasColumnType("ntext");

                entity.Property(e => e.Toelichting)
                    .HasColumnName("toelichting")
                    .HasColumnType("ntext");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Underpinningcontractid).HasColumnName("underpinningcontractid");

                entity.Property(e => e.Underpinningdienstid).HasColumnName("underpinningdienstid");

                entity.Property(e => e.Volgnummer).HasColumnName("volgnummer");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Dnodienst)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_dnodienst");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.DnodienstAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_dnodienst");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.DnodienstAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_dnodienst");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.DnodienstAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_dnodienst");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.DnodienstAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_dnodienst");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.DnodienstAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_dnodienst");

                entity.HasOne(d => d.Defaultfirstlineoperator)
                    .WithMany(p => p.DnodienstDefaultfirstlineoperator)
                    .HasForeignKey(d => d.Defaultfirstlineoperatorid)
                    .HasConstraintName("fk_actiedoor_defaultfirstlineoperatorid_dnodienst");

                entity.HasOne(d => d.Defaultreservationsoperator)
                    .WithMany(p => p.DnodienstDefaultreservationsoperator)
                    .HasForeignKey(d => d.Defaultreservationsoperatorid)
                    .HasConstraintName("fk_actiedoor_defaultreservationsoperatorid_dnodienst");

                entity.HasOne(d => d.Defaultsecondlineoperator)
                    .WithMany(p => p.DnodienstDefaultsecondlineoperator)
                    .HasForeignKey(d => d.Defaultsecondlineoperatorid)
                    .HasConstraintName("fk_actiedoor_defaultsecondlineoperatorid_dnodienst");

                entity.HasOne(d => d.Dnocontract)
                    .WithMany(p => p.DnodienstDnocontract)
                    .HasForeignKey(d => d.Dnocontractid)
                    .HasConstraintName("fk_dnocontract_dnocontractid_dnodienst");

                entity.HasOne(d => d.Dnodienstsoort)
                    .WithMany(p => p.Dnodienst)
                    .HasForeignKey(d => d.Dnodienstsoortid)
                    .HasConstraintName("fk_dnodienstsoort_dnodienstsoortid_dnodienst");

                entity.HasOne(d => d.Domein)
                    .WithMany(p => p.DnodienstDomein)
                    .HasForeignKey(d => d.Domeinid)
                    .HasConstraintName("fk_classificatie_domeinid_dnodienst");

                entity.HasOne(d => d.Doorlooptijdlijn1)
                    .WithMany(p => p.DnodienstDoorlooptijdlijn1)
                    .HasForeignKey(d => d.Doorlooptijdlijn1id)
                    .HasConstraintName("fk_doorlooptijd_doorlooptijdlijn1id_dnodienst");

                entity.HasOne(d => d.Doorlooptijdlijn2)
                    .WithMany(p => p.DnodienstDoorlooptijdlijn2)
                    .HasForeignKey(d => d.Doorlooptijdlijn2id)
                    .HasConstraintName("fk_doorlooptijd_doorlooptijdlijn2id_dnodienst");

                entity.HasOne(d => d.Extraa)
                    .WithMany(p => p.Dnodienst)
                    .HasForeignKey(d => d.Extraaid)
                    .HasConstraintName("fk_extraa_extraaid_dnodienst");

                entity.HasOne(d => d.Extrab)
                    .WithMany(p => p.Dnodienst)
                    .HasForeignKey(d => d.Extrabid)
                    .HasConstraintName("fk_extrab_extrabid_dnodienst");

                entity.HasOne(d => d.Incidentselection)
                    .WithMany(p => p.DnodienstIncidentselection)
                    .HasForeignKey(d => d.Incidentselectionid)
                    .HasConstraintName("fk_selvast_incidentselectionid_dnodienst");

                entity.HasOne(d => d.Manager)
                    .WithMany(p => p.DnodienstManager)
                    .HasForeignKey(d => d.Managerid)
                    .HasConstraintName("fk_actiedoor_managerid_dnodienst");

                entity.HasOne(d => d.Selection)
                    .WithMany(p => p.DnodienstSelection)
                    .HasForeignKey(d => d.Selectionid)
                    .HasConstraintName("fk_selvast_selectionid_dnodienst");

                entity.HasOne(d => d.Servicewindow)
                    .WithMany(p => p.Dnodienst)
                    .HasForeignKey(d => d.Servicewindowid)
                    .HasConstraintName("fk_servicewindow_servicewindowid_dnodienst");

                entity.HasOne(d => d.Soortmelding)
                    .WithMany(p => p.Dnodienst)
                    .HasForeignKey(d => d.Soortmeldingid)
                    .HasConstraintName("fk_soortmelding_soortmeldingid_dnodienst");

                entity.HasOne(d => d.Specificatie)
                    .WithMany(p => p.DnodienstSpecificatie)
                    .HasForeignKey(d => d.Specificatieid)
                    .HasConstraintName("fk_classificatie_specificatieid_dnodienst");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.DnodienstUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_dnodienst");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.DnodienstUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_dnodienst");

                entity.HasOne(d => d.Underpinningcontract)
                    .WithMany(p => p.DnodienstUnderpinningcontract)
                    .HasForeignKey(d => d.Underpinningcontractid)
                    .HasConstraintName("fk_dnocontract_underpinningcontractid_dnodienst");

                entity.HasOne(d => d.Underpinningdienst)
                    .WithMany(p => p.InverseUnderpinningdienst)
                    .HasForeignKey(d => d.Underpinningdienstid)
                    .HasConstraintName("fk_dnodienst_underpinningdienstid_dnodienst");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.DnodienstVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_dnodienst");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.DnodienstVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_dnodienst");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.DnodienstVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_dnodienst");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.DnodienstVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_dnodienst");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.DnodienstVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_dnodienst");
            });

            modelBuilder.Entity<DnodienstDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnodienst__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_dnodienst__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_dnodienst__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_dnodienst__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_dnodienst__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_dnodienst__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_dnodienst__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.DnodienstDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_dnodienst_kaartid_dnodienst__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.DnodienstDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_dnodienst__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.DnodienstDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_dnodienst__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.DnodienstDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_dnodienst__documenten");
            });

            modelBuilder.Entity<DnodienstEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnodienst__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_dnodienst__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_dnodienst__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_dnodienst__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.DnodienstEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_dnodienst__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.DnodienstEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_dnodienst_kaartid_dnodienst__emailberichten");
            });

            modelBuilder.Entity<DnodienstLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnodienst__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_dnodienst__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_dnodienst__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_dnodienst__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_dnodienst__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_dnodienst__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_dnodienst__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.DnodienstLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_dnodienst_kaartid_dnodienst__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.DnodienstLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_dnodienst__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.DnodienstLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_dnodienst__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.DnodienstLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_dnodienst__logboek");
            });

            modelBuilder.Entity<DnodienstMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnodienst__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_dnodienst__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_dnodienst__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_dnodienst__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_dnodienst__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_dnodienst__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_dnodienst__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_dnodienst__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_dnodienst__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_dnodienst__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.DnodienstMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_dnodienst__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.DnodienstMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_dnodienst_parentid_dnodienst__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.DnodienstMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_dnodienst__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.DnodienstMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_dnodienst__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.DnodienstMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_dnodienst__memo_history");
            });

            modelBuilder.Entity<DnodienstPicture>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnodienst__picture");

                entity.HasIndex(e => e.Cardid)
                    .HasName("idx_dnodienst__picture_cardid");

                entity.HasIndex(e => e.Pictureid)
                    .HasName("idx_dnodienst__picture_pictureid");

                entity.HasIndex(e => new { e.Pictureid, e.Cardid })
                    .HasName("uidx_dnodienst__picture_pictureid_cardid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cardid).HasColumnName("cardid");

                entity.Property(e => e.Isfavourite).HasColumnName("isfavourite");

                entity.Property(e => e.Pictureid).HasColumnName("pictureid");

                entity.Property(e => e.Rank).HasColumnName("rank");

                entity.HasOne(d => d.Card)
                    .WithMany(p => p.DnodienstPicture)
                    .HasForeignKey(d => d.Cardid)
                    .HasConstraintName("fk_dnodienst_cardid_dnodienst__picture");

                entity.HasOne(d => d.Picture)
                    .WithMany(p => p.DnodienstPicture)
                    .HasForeignKey(d => d.Pictureid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_picture_pictureid_dnodienst__picture");
            });

            modelBuilder.Entity<Dnodienstsoort>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnodienstsoort");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_dnodienstsoort_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_dnodienstsoort_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_dnodienstsoort_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Dnolink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnolink");

                entity.HasIndex(e => e.Dnocontractid)
                    .HasName("idx_dnolink_dnocontractid");

                entity.HasIndex(e => e.Dnodienstid)
                    .HasName("idx_dnolink_dnodienstid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_dnolink_importid");

                entity.HasIndex(e => e.RefAlgemeneafspraak)
                    .HasName("idx_dnolink_ref_algemeneafspraak");

                entity.HasIndex(e => e.RefAlgemenebhouderafspraak)
                    .HasName("idx_dnolink_ref_algemenebhouderafspraak");

                entity.HasIndex(e => e.RefAlgemenevestigingafspraak)
                    .HasName("idx_dnolink_ref_algemenevestigingafspraak");

                entity.HasIndex(e => e.RefBudgethouderid)
                    .HasName("idx_dnolink_ref_budgethouderid");

                entity.HasIndex(e => e.RefDomeinid)
                    .HasName("idx_dnolink_ref_domeinid");

                entity.HasIndex(e => e.RefNaam)
                    .HasName("idx_dnolink_ref_naam");

                entity.HasIndex(e => e.RefSoortmeldingid)
                    .HasName("idx_dnolink_ref_soortmeldingid");

                entity.HasIndex(e => e.RefSpecificatieid)
                    .HasName("idx_dnolink_ref_specificatieid");

                entity.HasIndex(e => e.RefVestigingid)
                    .HasName("idx_dnolink_ref_vestigingid");

                entity.HasIndex(e => e.Servicelevelid)
                    .HasName("idx_dnolink_servicelevelid");

                entity.HasIndex(e => new { e.Dnocontractid, e.Dnodienstid })
                    .HasName("uidx_dnolink_dnocontractid_dnodienstid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dnocontractid).HasColumnName("dnocontractid");

                entity.Property(e => e.Dnodienstid).HasColumnName("dnodienstid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Kosten)
                    .HasColumnName("kosten")
                    .HasColumnType("money");

                entity.Property(e => e.RefAlgemeneafspraak).HasColumnName("ref_algemeneafspraak");

                entity.Property(e => e.RefAlgemenebhouderafspraak).HasColumnName("ref_algemenebhouderafspraak");

                entity.Property(e => e.RefAlgemenevestigingafspraak).HasColumnName("ref_algemenevestigingafspraak");

                entity.Property(e => e.RefBudgethouderid).HasColumnName("ref_budgethouderid");

                entity.Property(e => e.RefDomeinid).HasColumnName("ref_domeinid");

                entity.Property(e => e.RefNaam)
                    .IsRequired()
                    .HasColumnName("ref_naam")
                    .HasMaxLength(100);

                entity.Property(e => e.RefSoortmeldingid).HasColumnName("ref_soortmeldingid");

                entity.Property(e => e.RefSpecificatieid).HasColumnName("ref_specificatieid");

                entity.Property(e => e.RefVestigingid).HasColumnName("ref_vestigingid");

                entity.Property(e => e.Servicelevelid).HasColumnName("servicelevelid");

                entity.HasOne(d => d.Dnocontract)
                    .WithMany(p => p.Dnolink)
                    .HasForeignKey(d => d.Dnocontractid)
                    .HasConstraintName("fk_dnocontract_dnocontractid_dnolink");

                entity.HasOne(d => d.Dnodienst)
                    .WithMany(p => p.Dnolink)
                    .HasForeignKey(d => d.Dnodienstid)
                    .HasConstraintName("fk_dnodienst_dnodienstid_dnolink");

                entity.HasOne(d => d.RefBudgethouder)
                    .WithMany(p => p.Dnolink)
                    .HasForeignKey(d => d.RefBudgethouderid)
                    .HasConstraintName("fk_budgethouder_ref_budgethouderid_dnolink");

                entity.HasOne(d => d.RefDomein)
                    .WithMany(p => p.DnolinkRefDomein)
                    .HasForeignKey(d => d.RefDomeinid)
                    .HasConstraintName("fk_classificatie_ref_domeinid_dnolink");

                entity.HasOne(d => d.RefSoortmelding)
                    .WithMany(p => p.Dnolink)
                    .HasForeignKey(d => d.RefSoortmeldingid)
                    .HasConstraintName("fk_soortmelding_ref_soortmeldingid_dnolink");

                entity.HasOne(d => d.RefSpecificatie)
                    .WithMany(p => p.DnolinkRefSpecificatie)
                    .HasForeignKey(d => d.RefSpecificatieid)
                    .HasConstraintName("fk_classificatie_ref_specificatieid_dnolink");

                entity.HasOne(d => d.RefVestiging)
                    .WithMany(p => p.Dnolink)
                    .HasForeignKey(d => d.RefVestigingid)
                    .HasConstraintName("fk_vestiging_ref_vestigingid_dnolink");

                entity.HasOne(d => d.Servicelevel)
                    .WithMany(p => p.Dnolink)
                    .HasForeignKey(d => d.Servicelevelid)
                    .HasConstraintName("fk_servicelevel_servicelevelid_dnolink");
            });

            modelBuilder.Entity<Dnolocationlink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnolocationlink");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_dnolocationlink_importid");

                entity.HasIndex(e => e.Locationid)
                    .HasName("idx_dnolocationlink_locationid");

                entity.HasIndex(e => e.Serviceid)
                    .HasName("idx_dnolocationlink_serviceid");

                entity.HasIndex(e => new { e.Serviceid, e.Locationid })
                    .HasName("uidx_dnolocationlink_serviceid_locationid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.IsStandard).HasColumnName("is_standard");

                entity.Property(e => e.Locationid).HasColumnName("locationid");

                entity.Property(e => e.Serviceid).HasColumnName("serviceid");

                entity.HasOne(d => d.Location)
                    .WithMany(p => p.Dnolocationlink)
                    .HasForeignKey(d => d.Locationid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_locatie_locationid_dnolocationlink");

                entity.HasOne(d => d.Service)
                    .WithMany(p => p.Dnolocationlink)
                    .HasForeignKey(d => d.Serviceid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_dnodienst_serviceid_dnolocationlink");
            });

            modelBuilder.Entity<Dnoobjectlink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("dnoobjectlink");

                entity.HasIndex(e => e.Dnodienstid)
                    .HasName("idx_dnoobjectlink_dnodienstid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_dnoobjectlink_importid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_dnoobjectlink_objectid");

                entity.HasIndex(e => new { e.Objectid, e.Dnodienstid })
                    .HasName("uidx_dnoobjectlink_objectid_dnodienstid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dnodienstid).HasColumnName("dnodienstid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.IsStandard).HasColumnName("is_standard");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.HasOne(d => d.Dnodienst)
                    .WithMany(p => p.Dnoobjectlink)
                    .HasForeignKey(d => d.Dnodienstid)
                    .HasConstraintName("fk_dnodienst_dnodienstid_dnoobjectlink");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Dnoobjectlink)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_dnoobjectlink");
            });

            modelBuilder.Entity<Doorlooptijd>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("doorlooptijd");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_doorlooptijd_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_doorlooptijd_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_doorlooptijd_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantal).HasColumnName("aantal");

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.InFirstLine).HasColumnName("in_first_line");

                entity.Property(e => e.InSecondLine).HasColumnName("in_second_line");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.Type).HasColumnName("type");
            });

            modelBuilder.Entity<Emailbericht>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("emailbericht");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_emailbericht_archiefredenid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_emailbericht_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_emailbericht_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_emailbericht_importid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_emailbericht_naam");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_emailbericht_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_emailbericht_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_emailbericht_uidwijzig");

                entity.HasIndex(e => e.Verzenddatum)
                    .HasName("idx_emailbericht_verzenddatum");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Afzender)
                    .IsRequired()
                    .HasColumnName("afzender")
                    .HasMaxLength(200);

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Emailaction)
                    .IsRequired()
                    .HasColumnName("emailaction")
                    .HasMaxLength(50);

                entity.Property(e => e.Geadresseerde)
                    .IsRequired()
                    .HasColumnName("geadresseerde")
                    .HasMaxLength(250);

                entity.Property(e => e.Html).HasColumnName("html");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.KopieNaarEigen).HasColumnName("kopie_naar_eigen");

                entity.Property(e => e.Leesbevestiging).HasColumnName("leesbevestiging");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(250);

                entity.Property(e => e.Ontvangstbevestiging).HasColumnName("ontvangstbevestiging");

                entity.Property(e => e.OorsprongType).HasColumnName("oorsprong_type");

                entity.Property(e => e.Prioriteit).HasColumnName("prioriteit");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vanuitkaart).HasColumnName("vanuitkaart");

                entity.Property(e => e.Verzenddatum)
                    .HasColumnName("verzenddatum")
                    .HasColumnType("datetime");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Emailbericht)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_emailbericht");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.EmailberichtUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_emailbericht");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.EmailberichtUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_emailbericht");
            });

            modelBuilder.Entity<Emailberichtbestand>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("emailberichtbestand");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_emailberichtbestand_emailid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_emailberichtbestand_importid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bestandsnaam)
                    .HasColumnName("bestandsnaam")
                    .HasColumnType("ntext");

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.Emailberichtbestand)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_emailberichtbestand");
            });

            modelBuilder.Entity<Emailberichtkopie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("emailberichtkopie");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_emailberichtkopie_emailid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_emailberichtkopie_importid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailadres)
                    .IsRequired()
                    .HasColumnName("emailadres")
                    .HasMaxLength(100);

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Totype).HasColumnName("totype");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.Emailberichtkopie)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_emailberichtkopie");
            });

            modelBuilder.Entity<EnergyPerformance>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("energy_performance");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_energy_performance_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_energy_performance_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_energy_performance_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<EnvironmentalImpact>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("environmental_impact");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_environmental_impact_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_environmental_impact_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_environmental_impact_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Escalatiereden>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("escalatiereden");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_escalatiereden_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_escalatiereden_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_escalatiereden_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Lijn).HasColumnName("lijn");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Extraa>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("extraa");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_extraa_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_extraa_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_extraa_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.Kleur).HasColumnName("kleur");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Opmerking)
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Extraapersoon>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("extraapersoon");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_extraapersoon_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_extraapersoon_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_extraapersoon_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.Kleur).HasColumnName("kleur");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Opmerking)
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Extrab>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("extrab");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_extrab_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_extrab_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_extrab_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.Kleur).HasColumnName("kleur");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Opmerking)
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Extrabpersoon>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("extrabpersoon");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_extrabpersoon_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_extrabpersoon_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_extrabpersoon_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.Kleur).HasColumnName("kleur");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Opmerking)
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Gebeurtenis>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("gebeurtenis");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_gebeurtenis_naam");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actief).HasColumnName("actief");

                entity.Property(e => e.Entityversion).HasColumnName("entityversion");

                entity.Property(e => e.Filteractief).HasColumnName("filteractief");

                entity.Property(e => e.Filterofen).HasColumnName("filterofen");

                entity.Property(e => e.Filtersoort).HasColumnName("filtersoort");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(50);

                entity.Property(e => e.Naarstatus).HasColumnName("naarstatus");

                entity.Property(e => e.Naarstatuscode)
                    .IsRequired()
                    .HasColumnName("naarstatuscode")
                    .HasMaxLength(30);

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Soortcode)
                    .IsRequired()
                    .HasColumnName("soortcode")
                    .HasMaxLength(30);

                entity.Property(e => e.Statuswaarde).HasColumnName("statuswaarde");

                entity.Property(e => e.Structurename)
                    .IsRequired()
                    .HasColumnName("structurename")
                    .HasMaxLength(40);

                entity.Property(e => e.Tabelstatus)
                    .IsRequired()
                    .HasColumnName("tabelstatus")
                    .HasMaxLength(40);

                entity.Property(e => e.Vanstatus).HasColumnName("vanstatus");

                entity.Property(e => e.Vanstatuscode)
                    .IsRequired()
                    .HasColumnName("vanstatuscode")
                    .HasMaxLength(30);

                entity.Property(e => e.Veldenactief).HasColumnName("veldenactief");

                entity.Property(e => e.Veldenofen).HasColumnName("veldenofen");
            });

            modelBuilder.Entity<Gebeurtenisfilter>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("gebeurtenisfilter");

                entity.HasIndex(e => e.Gebeurtenisid)
                    .HasName("idx_gebeurtenisfilter_gebeurtenisid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Filtercode)
                    .IsRequired()
                    .HasColumnName("filtercode")
                    .HasMaxLength(100);

                entity.Property(e => e.Filterwaarde)
                    .IsRequired()
                    .HasColumnName("filterwaarde")
                    .HasMaxLength(255);

                entity.Property(e => e.Gebeurtenisid).HasColumnName("gebeurtenisid");

                entity.HasOne(d => d.Gebeurtenis)
                    .WithMany(p => p.Gebeurtenisfilter)
                    .HasForeignKey(d => d.Gebeurtenisid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_gebeurtenis_gebeurtenisid_gebeurtenisfilter");
            });

            modelBuilder.Entity<Gebeurtenishttpactielink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("gebeurtenishttpactielink");

                entity.HasIndex(e => e.Actieid)
                    .HasName("idx_gebeurtenishttpactielink_actieid");

                entity.HasIndex(e => e.Gebeurtenisid)
                    .HasName("idx_gebeurtenishttpactielink_gebeurtenisid");

                entity.HasIndex(e => new { e.Actieid, e.Gebeurtenisid })
                    .HasName("uidx_gebeurtenishttpactielink_actieid_gebeurtenisid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actieid).HasColumnName("actieid");

                entity.Property(e => e.Gebeurtenisid).HasColumnName("gebeurtenisid");

                entity.HasOne(d => d.Actie)
                    .WithMany(p => p.Gebeurtenishttpactielink)
                    .HasForeignKey(d => d.Actieid)
                    .HasConstraintName("fk_httpactie_actieid_gebeurtenishttpactielink");

                entity.HasOne(d => d.Gebeurtenis)
                    .WithMany(p => p.Gebeurtenishttpactielink)
                    .HasForeignKey(d => d.Gebeurtenisid)
                    .HasConstraintName("fk_gebeurtenis_gebeurtenisid_gebeurtenishttpactielink");
            });

            modelBuilder.Entity<Gebeurtenislogboekactielink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("gebeurtenislogboekactielink");

                entity.HasIndex(e => e.Actieid)
                    .HasName("idx_gebeurtenislogboekactielink_actieid");

                entity.HasIndex(e => e.Gebeurtenisid)
                    .HasName("idx_gebeurtenislogboekactielink_gebeurtenisid");

                entity.HasIndex(e => new { e.Actieid, e.Gebeurtenisid })
                    .HasName("uidx_gebeurtenislogboekactielink_actieid_gebeurtenisid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actieid).HasColumnName("actieid");

                entity.Property(e => e.Gebeurtenisid).HasColumnName("gebeurtenisid");

                entity.HasOne(d => d.Actie)
                    .WithMany(p => p.Gebeurtenislogboekactielink)
                    .HasForeignKey(d => d.Actieid)
                    .HasConstraintName("fk_logboekactie_actieid_gebeurtenislogboekactielink");

                entity.HasOne(d => d.Gebeurtenis)
                    .WithMany(p => p.Gebeurtenislogboekactielink)
                    .HasForeignKey(d => d.Gebeurtenisid)
                    .HasConstraintName("fk_gebeurtenis_gebeurtenisid_gebeurtenislogboekactielink");
            });

            modelBuilder.Entity<Gebeurtenismailactielink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("gebeurtenismailactielink");

                entity.HasIndex(e => e.Actieid)
                    .HasName("idx_gebeurtenismailactielink_actieid");

                entity.HasIndex(e => e.Gebeurtenisid)
                    .HasName("idx_gebeurtenismailactielink_gebeurtenisid");

                entity.HasIndex(e => new { e.Actieid, e.Gebeurtenisid })
                    .HasName("uidx_gebeurtenismailactielink_actieid_gebeurtenisid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actieid).HasColumnName("actieid");

                entity.Property(e => e.Entityversion).HasColumnName("entityversion");

                entity.Property(e => e.Gebeurtenisid).HasColumnName("gebeurtenisid");

                entity.HasOne(d => d.Actie)
                    .WithMany(p => p.Gebeurtenismailactielink)
                    .HasForeignKey(d => d.Actieid)
                    .HasConstraintName("fk_mailactie_actieid_gebeurtenismailactielink");

                entity.HasOne(d => d.Gebeurtenis)
                    .WithMany(p => p.Gebeurtenismailactielink)
                    .HasForeignKey(d => d.Gebeurtenisid)
                    .HasConstraintName("fk_gebeurtenis_gebeurtenisid_gebeurtenismailactielink");
            });

            modelBuilder.Entity<Gebeurtenistijden>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("gebeurtenistijden");

                entity.HasIndex(e => e.Gebeurtenisid)
                    .HasName("idx_gebeurtenistijden_gebeurtenisid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dagen).HasColumnName("dagen");

                entity.Property(e => e.Gebeurtenisid).HasColumnName("gebeurtenisid");

                entity.Property(e => e.Minuten).HasColumnName("minuten");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.Property(e => e.Wanneer).HasColumnName("wanneer");

                entity.HasOne(d => d.Gebeurtenis)
                    .WithMany(p => p.Gebeurtenistijden)
                    .HasForeignKey(d => d.Gebeurtenisid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_gebeurtenis_gebeurtenisid_gebeurtenistijden");
            });

            modelBuilder.Entity<Gebeurtenisuitvoeractielink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("gebeurtenisuitvoeractielink");

                entity.HasIndex(e => e.Actieid)
                    .HasName("idx_gebeurtenisuitvoeractielink_actieid");

                entity.HasIndex(e => e.Gebeurtenisid)
                    .HasName("idx_gebeurtenisuitvoeractielink_gebeurtenisid");

                entity.HasIndex(e => new { e.Actieid, e.Gebeurtenisid })
                    .HasName("uidx_gebeurtenisuitvoeractielink_actieid_gebeurtenisid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actieid).HasColumnName("actieid");

                entity.Property(e => e.Gebeurtenisid).HasColumnName("gebeurtenisid");

                entity.HasOne(d => d.Actie)
                    .WithMany(p => p.Gebeurtenisuitvoeractielink)
                    .HasForeignKey(d => d.Actieid)
                    .HasConstraintName("fk_uitvoeractie_actieid_gebeurtenisuitvoeractielink");

                entity.HasOne(d => d.Gebeurtenis)
                    .WithMany(p => p.Gebeurtenisuitvoeractielink)
                    .HasForeignKey(d => d.Gebeurtenisid)
                    .HasConstraintName("fk_gebeurtenis_gebeurtenisid_gebeurtenisuitvoeractielink");
            });

            modelBuilder.Entity<Gebeurtenisvelden>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("gebeurtenisvelden");

                entity.HasIndex(e => e.Gebeurtenisid)
                    .HasName("idx_gebeurtenisvelden_gebeurtenisid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Gebeurtenisid).HasColumnName("gebeurtenisid");

                entity.Property(e => e.Nieuweveldwaarde)
                    .HasColumnName("nieuweveldwaarde")
                    .HasMaxLength(100);

                entity.Property(e => e.Nieuwgebruikt).HasColumnName("nieuwgebruikt");

                entity.Property(e => e.Oudeveldwaarde)
                    .HasColumnName("oudeveldwaarde")
                    .HasMaxLength(100);

                entity.Property(e => e.Oudgebruikt).HasColumnName("oudgebruikt");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebeurtenis)
                    .WithMany(p => p.Gebeurtenisvelden)
                    .HasForeignKey(d => d.Gebeurtenisid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_gebeurtenis_gebeurtenisid_gebeurtenisvelden");
            });

            modelBuilder.Entity<Gebruiker>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("gebruiker");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_gebruiker_archiefredenid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_gebruiker_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_gebruiker_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_gebruiker_importid");

                entity.HasIndex(e => e.LoginDate)
                    .HasName("idx_gebruiker_login_date");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_gebruiker_naam");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_gebruiker_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_gebruiker_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_gebruiker_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Defaultprofile).HasColumnName("defaultprofile");

                entity.Property(e => e.Defaultprofilenaam)
                    .IsRequired()
                    .HasColumnName("defaultprofilenaam")
                    .HasMaxLength(40);

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Inlognaam)
                    .IsRequired()
                    .HasColumnName("inlognaam")
                    .HasMaxLength(100);

                entity.Property(e => e.LoginDate)
                    .HasColumnName("login_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Maginloggen).HasColumnName("maginloggen");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(109);

                entity.Property(e => e.Passhash)
                    .HasColumnName("passhash")
                    .HasMaxLength(200);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Supervrecht).HasColumnName("supervrecht");

                entity.Property(e => e.Sv).HasColumnName("sv");

                entity.Property(e => e.Svhash)
                    .HasColumnName("svhash")
                    .HasMaxLength(200);

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Gebruiker)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_gebruiker");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.InverseUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_gebruiker");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.InverseUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_gebruiker");
            });

            modelBuilder.Entity<GebruikerDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("gebruiker__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_gebruiker__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_gebruiker__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_gebruiker__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_gebruiker__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_gebruiker__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_gebruiker__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.GebruikerDocumentenKaart)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_gebruiker_kaartid_gebruiker__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.GebruikerDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_gebruiker__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.GebruikerDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_gebruiker__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.GebruikerDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_gebruiker__documenten");
            });

            modelBuilder.Entity<GebruikerEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("gebruiker__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_gebruiker__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_gebruiker__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_gebruiker__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.GebruikerEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_gebruiker__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.GebruikerEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_gebruiker_kaartid_gebruiker__emailberichten");
            });

            modelBuilder.Entity<GebruikerLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("gebruiker__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_gebruiker__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_gebruiker__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_gebruiker__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_gebruiker__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_gebruiker__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_gebruiker__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.GebruikerLogboekKaart)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_gebruiker_kaartid_gebruiker__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.GebruikerLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_gebruiker__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.GebruikerLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_gebruiker__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.GebruikerLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_gebruiker__logboek");
            });

            modelBuilder.Entity<GebruikerMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("gebruiker__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_gebruiker__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_gebruiker__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_gebruiker__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_gebruiker__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_gebruiker__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_gebruiker__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_gebruiker__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_gebruiker__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_gebruiker__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.GebruikerMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_gebruiker__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.GebruikerMemoHistoryParent)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_gebruiker_parentid_gebruiker__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.GebruikerMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_gebruiker__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.GebruikerMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_gebruiker__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.GebruikerMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_gebruiker__memo_history");
            });

            modelBuilder.Entity<Gebruikersinstellingen>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("gebruikersinstellingen");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Instelling)
                    .HasColumnName("instelling")
                    .HasColumnType("ntext");

                entity.Property(e => e.Instellingnaam)
                    .IsRequired()
                    .HasColumnName("instellingnaam")
                    .HasMaxLength(16);
            });

            modelBuilder.Entity<Geschiedenis>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("geschiedenis");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_geschiedenis_naam");

                entity.HasIndex(e => e.Standaardredenid)
                    .HasName("idx_geschiedenis_standaardredenid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actief).HasColumnName("actief");

                entity.Property(e => e.Bestedetijdvragen).HasColumnName("bestedetijdvragen");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(50);

                entity.Property(e => e.Redenvragen).HasColumnName("redenvragen");

                entity.Property(e => e.Standaardredenid).HasColumnName("standaardredenid");

                entity.Property(e => e.Structurename)
                    .IsRequired()
                    .HasColumnName("structurename")
                    .HasMaxLength(40);

                entity.Property(e => e.Tabelstatus)
                    .IsRequired()
                    .HasColumnName("tabelstatus")
                    .HasMaxLength(40);

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(50);

                entity.HasOne(d => d.Standaardreden)
                    .WithMany(p => p.Geschiedenis)
                    .HasForeignKey(d => d.Standaardredenid)
                    .HasConstraintName("fk_mutatiereden_standaardredenid_geschiedenis");
            });

            modelBuilder.Entity<Geschiedenismutatieredenlink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("geschiedenismutatieredenlink");

                entity.HasIndex(e => e.Geschiedenisid)
                    .HasName("idx_geschiedenismutatieredenlink_geschiedenisid");

                entity.HasIndex(e => e.Mutatieredenid)
                    .HasName("idx_geschiedenismutatieredenlink_mutatieredenid");

                entity.HasIndex(e => new { e.Geschiedenisid, e.Mutatieredenid })
                    .HasName("uidx_geschiedenismutatieredenlink_geschiedenisid_mutatieredenid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Geschiedenisid).HasColumnName("geschiedenisid");

                entity.Property(e => e.Mutatieredenid).HasColumnName("mutatieredenid");

                entity.HasOne(d => d.Geschiedenis)
                    .WithMany(p => p.Geschiedenismutatieredenlink)
                    .HasForeignKey(d => d.Geschiedenisid)
                    .HasConstraintName("fk_geschiedenis_geschiedenisid_geschiedenismutatieredenlink");

                entity.HasOne(d => d.Mutatiereden)
                    .WithMany(p => p.Geschiedenismutatieredenlink)
                    .HasForeignKey(d => d.Mutatieredenid)
                    .HasConstraintName("fk_mutatiereden_mutatieredenid_geschiedenismutatieredenlink");
            });

            modelBuilder.Entity<Hardware>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("hardware");

                entity.HasIndex(e => e.Aanschafdatum)
                    .HasName("idx_hardware_aanschafdatum");

                entity.HasIndex(e => e.Aanspreekpuntid)
                    .HasName("idx_hardware_aanspreekpuntid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_hardware_archiefredenid");

                entity.HasIndex(e => e.Artikelbestellinkid)
                    .HasName("idx_hardware_artikelbestellinkid");

                entity.HasIndex(e => e.Artikelstatusid)
                    .HasName("idx_hardware_artikelstatusid");

                entity.HasIndex(e => e.Attentieid)
                    .HasName("idx_hardware_attentieid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_hardware_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_hardware_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_hardware_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_hardware_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_hardware_attvrijeopzoek5");

                entity.HasIndex(e => e.Bestelaanvraagid)
                    .HasName("idx_hardware_bestelaanvraagid");

                entity.HasIndex(e => e.Bestellingid)
                    .HasName("idx_hardware_bestellingid");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_hardware_budgethouderid");

                entity.HasIndex(e => e.Configuratieid)
                    .HasName("idx_hardware_configuratieid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_hardware_dataanmk");

                entity.HasIndex(e => e.Datumeersteonderhoud)
                    .HasName("idx_hardware_datumeersteonderhoud");

                entity.HasIndex(e => e.Datumgeplandonderhoud)
                    .HasName("idx_hardware_datumgeplandonderhoud");

                entity.HasIndex(e => e.Datumlaatsteonderhoud)
                    .HasName("idx_hardware_datumlaatsteonderhoud");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_hardware_datwijzig");

                entity.HasIndex(e => e.Garantiedatum)
                    .HasName("idx_hardware_garantiedatum");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_hardware_importid");

                entity.HasIndex(e => e.Installatiedoorid)
                    .HasName("idx_hardware_installatiedoorid");

                entity.HasIndex(e => e.Laatstescan)
                    .HasName("idx_hardware_laatstescan");

                entity.HasIndex(e => e.Leaseaanvangsdatum)
                    .HasName("idx_hardware_leaseaanvangsdatum");

                entity.HasIndex(e => e.Leaseeinddatum)
                    .HasName("idx_hardware_leaseeinddatum");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_hardware_leverancierid");

                entity.HasIndex(e => e.Lokatieid)
                    .HasName("idx_hardware_lokatieid");

                entity.HasIndex(e => e.Merkid)
                    .HasName("idx_hardware_merkid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_hardware_naam");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_hardware_objectid");

                entity.HasIndex(e => e.Objecttypeid)
                    .HasName("idx_hardware_objecttypeid");

                entity.HasIndex(e => e.OnderhoudDoorid)
                    .HasName("idx_hardware_onderhoud_doorid");

                entity.HasIndex(e => e.Onderhoudslacontractid)
                    .HasName("idx_hardware_onderhoudslacontractid");

                entity.HasIndex(e => e.Onderhoudsoortid)
                    .HasName("idx_hardware_onderhoudsoortid");

                entity.HasIndex(e => e.Onderhoudsplanid)
                    .HasName("idx_hardware_onderhoudsplanid");

                entity.HasIndex(e => e.Onderhoudtot)
                    .HasName("idx_hardware_onderhoudtot");

                entity.HasIndex(e => e.Onderhoudvanaf)
                    .HasName("idx_hardware_onderhoudvanaf");

                entity.HasIndex(e => e.Persoongroepid)
                    .HasName("idx_hardware_persoongroepid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_hardware_persoonid");

                entity.HasIndex(e => e.RefAanspreekpunt)
                    .HasName("idx_hardware_ref_aanspreekpunt");

                entity.HasIndex(e => e.RefConfiguratie)
                    .HasName("idx_hardware_ref_configuratie");

                entity.HasIndex(e => e.RefFinbudgethouder)
                    .HasName("idx_hardware_ref_finbudgethouder");

                entity.HasIndex(e => e.RefGebruiker)
                    .HasName("idx_hardware_ref_gebruiker");

                entity.HasIndex(e => e.RefKleur)
                    .HasName("idx_hardware_ref_kleur");

                entity.HasIndex(e => e.RefLeverancier)
                    .HasName("idx_hardware_ref_leverancier");

                entity.HasIndex(e => e.RefLokatie)
                    .HasName("idx_hardware_ref_lokatie");

                entity.HasIndex(e => e.RefMerk)
                    .HasName("idx_hardware_ref_merk");

                entity.HasIndex(e => e.RefOrdernumber)
                    .HasName("idx_hardware_ref_ordernumber");

                entity.HasIndex(e => e.RefPersoon)
                    .HasName("idx_hardware_ref_persoon");

                entity.HasIndex(e => e.RefPersoongroep)
                    .HasName("idx_hardware_ref_persoongroep");

                entity.HasIndex(e => e.RefPlaats1)
                    .HasName("idx_hardware_ref_plaats1");

                entity.HasIndex(e => e.RefSoort)
                    .HasName("idx_hardware_ref_soort");

                entity.HasIndex(e => e.RefVestiging)
                    .HasName("idx_hardware_ref_vestiging");

                entity.HasIndex(e => e.Reserveerbaaractiveerbaar)
                    .HasName("idx_hardware_reserveerbaaractiveerbaar");

                entity.HasIndex(e => e.Reserveerbaarsecure)
                    .HasName("idx_hardware_reserveerbaarsecure");

                entity.HasIndex(e => e.Reserveerbaarsshd)
                    .HasName("idx_hardware_reserveerbaarsshd");

                entity.HasIndex(e => e.Reservzichtbaarsshd)
                    .HasName("idx_hardware_reservzichtbaarsshd");

                entity.HasIndex(e => e.Servicewindowid)
                    .HasName("idx_hardware_servicewindowid");

                entity.HasIndex(e => e.Sjabloonobjectid)
                    .HasName("idx_hardware_sjabloonobjectid");

                entity.HasIndex(e => e.Soortid)
                    .HasName("idx_hardware_soortid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_hardware_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_hardware_statusid");

                entity.HasIndex(e => e.Stdresvbehandelaarid)
                    .HasName("idx_hardware_stdresvbehandelaarid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_hardware_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_hardware_uidwijzig");

                entity.HasIndex(e => e.Verzekerdatum)
                    .HasName("idx_hardware_verzekerdatum");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_hardware_vestigingid");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_hardware_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_hardware_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_hardware_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_hardware_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_hardware_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_hardware_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_hardware_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aankoopbedrag)
                    .HasColumnName("aankoopbedrag")
                    .HasColumnType("money");

                entity.Property(e => e.Aanschafdatum)
                    .HasColumnName("aanschafdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Aanspreekpuntid).HasColumnName("aanspreekpuntid");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afschrijftermijn).HasColumnName("afschrijftermijn");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Artikelbestellinkid).HasColumnName("artikelbestellinkid");

                entity.Property(e => e.Artikelstatusid).HasColumnName("artikelstatusid");

                entity.Property(e => e.Artikelwordtobject).HasColumnName("artikelwordtobject");

                entity.Property(e => e.Attentieid).HasColumnName("attentieid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelaanvraagid).HasColumnName("bestelaanvraagid");

                entity.Property(e => e.Bestelbaarinssh).HasColumnName("bestelbaarinssh");

                entity.Property(e => e.Bestellingid).HasColumnName("bestellingid");

                entity.Property(e => e.Blocktime).HasColumnName("blocktime");

                entity.Property(e => e.Boomopmerkingen)
                    .HasColumnName("boomopmerkingen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Configuratieid).HasColumnName("configuratieid");

                entity.Property(e => e.CostsHightariff)
                    .HasColumnName("costs_hightariff")
                    .HasColumnType("money");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumeersteonderhoud)
                    .HasColumnName("datumeersteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumgeplandonderhoud)
                    .HasColumnName("datumgeplandonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumlaatsteonderhoud)
                    .HasColumnName("datumlaatsteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diversen)
                    .HasColumnName("diversen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Diversenonderhoud)
                    .HasColumnName("diversenonderhoud")
                    .HasColumnType("ntext");

                entity.Property(e => e.Garantiedatum)
                    .HasColumnName("garantiedatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.Heeftonderhoudsplan).HasColumnName("heeftonderhoudsplan");

                entity.Property(e => e.Heeftvoorraad).HasColumnName("heeftvoorraad");

                entity.Property(e => e.Hostnaam)
                    .IsRequired()
                    .HasColumnName("hostnaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Huidigevoorraad).HasColumnName("huidigevoorraad");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Installatiedoorid).HasColumnName("installatiedoorid");

                entity.Property(e => e.Ipadres)
                    .IsRequired()
                    .HasColumnName("ipadres")
                    .HasMaxLength(40);

                entity.Property(e => e.Korteomschrijving)
                    .IsRequired()
                    .HasColumnName("korteomschrijving")
                    .HasMaxLength(40);

                entity.Property(e => e.Laatstescan)
                    .HasColumnName("laatstescan")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leaseaanvangsdatum)
                    .HasColumnName("leaseaanvangsdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leasecontractnummer)
                    .IsRequired()
                    .HasColumnName("leasecontractnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Leaseeinddatum)
                    .HasColumnName("leaseeinddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leaseinfo).HasColumnName("leaseinfo");

                entity.Property(e => e.Leaseperiode).HasColumnName("leaseperiode");

                entity.Property(e => e.Leaseprijs)
                    .HasColumnName("leaseprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Lokatieid).HasColumnName("lokatieid");

                entity.Property(e => e.Macadres)
                    .IsRequired()
                    .HasColumnName("macadres")
                    .HasMaxLength(30);

                entity.Property(e => e.Merkid).HasColumnName("merkid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(60);

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Objecttype)
                    .IsRequired()
                    .HasColumnName("objecttype")
                    .HasMaxLength(100);

                entity.Property(e => e.Objecttypeid).HasColumnName("objecttypeid");

                entity.Property(e => e.OnderhoudDoorid).HasColumnName("onderhoud_doorid");

                entity.Property(e => e.Onderhoudcontract).HasColumnName("onderhoudcontract");

                entity.Property(e => e.Onderhoudnummer)
                    .IsRequired()
                    .HasColumnName("onderhoudnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Onderhoudprijs)
                    .HasColumnName("onderhoudprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Onderhoudresponsietijd).HasColumnName("onderhoudresponsietijd");

                entity.Property(e => e.Onderhoudslacontractid).HasColumnName("onderhoudslacontractid");

                entity.Property(e => e.Onderhoudslagebruikt).HasColumnName("onderhoudslagebruikt");

                entity.Property(e => e.Onderhoudsoortid).HasColumnName("onderhoudsoortid");

                entity.Property(e => e.Onderhoudsplanid).HasColumnName("onderhoudsplanid");

                entity.Property(e => e.Onderhoudtot)
                    .HasColumnName("onderhoudtot")
                    .HasColumnType("datetime");

                entity.Property(e => e.Onderhoudvanaf)
                    .HasColumnName("onderhoudvanaf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Opmerking)
                    .IsRequired()
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.Ordernummer)
                    .IsRequired()
                    .HasColumnName("ordernummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Persoongroepid).HasColumnName("persoongroepid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Plaats).HasColumnName("plaats");

                entity.Property(e => e.Plaatskeuze).HasColumnName("plaatskeuze");

                entity.Property(e => e.RefAanspreekpunt)
                    .IsRequired()
                    .HasColumnName("ref_aanspreekpunt")
                    .HasMaxLength(109);

                entity.Property(e => e.RefConfiguratie)
                    .IsRequired()
                    .HasColumnName("ref_configuratie")
                    .HasMaxLength(30);

                entity.Property(e => e.RefFinbudgethouder)
                    .IsRequired()
                    .HasColumnName("ref_finbudgethouder")
                    .HasMaxLength(100);

                entity.Property(e => e.RefGebruiker)
                    .IsRequired()
                    .HasColumnName("ref_gebruiker")
                    .HasMaxLength(109);

                entity.Property(e => e.RefKleur).HasColumnName("ref_kleur");

                entity.Property(e => e.RefLeverancier)
                    .IsRequired()
                    .HasColumnName("ref_leverancier")
                    .HasMaxLength(60);

                entity.Property(e => e.RefLokatie)
                    .IsRequired()
                    .HasColumnName("ref_lokatie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefMerk)
                    .IsRequired()
                    .HasColumnName("ref_merk")
                    .HasMaxLength(100);

                entity.Property(e => e.RefOrdernumber)
                    .HasColumnName("ref_ordernumber")
                    .HasMaxLength(30);

                entity.Property(e => e.RefPersoon)
                    .IsRequired()
                    .HasColumnName("ref_persoon")
                    .HasMaxLength(109);

                entity.Property(e => e.RefPersoongroep)
                    .IsRequired()
                    .HasColumnName("ref_persoongroep")
                    .HasMaxLength(50);

                entity.Property(e => e.RefPlaats1)
                    .IsRequired()
                    .HasColumnName("ref_plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.RefSoort)
                    .IsRequired()
                    .HasColumnName("ref_soort")
                    .HasMaxLength(100);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.ReservableOfficehoursSsd).HasColumnName("reservable_officehours_ssd");

                entity.Property(e => e.Reservablewithlocation).HasColumnName("reservablewithlocation");

                entity.Property(e => e.Reserveerbaaractiveerbaar).HasColumnName("reserveerbaaractiveerbaar");

                entity.Property(e => e.Reserveerbaarkantooruren).HasColumnName("reserveerbaarkantooruren");

                entity.Property(e => e.Reserveerbaarsecure).HasColumnName("reserveerbaarsecure");

                entity.Property(e => e.Reserveerbaarsshd).HasColumnName("reserveerbaarsshd");

                entity.Property(e => e.Reservzichtbaarsshd).HasColumnName("reservzichtbaarsshd");

                entity.Property(e => e.Restwaarde)
                    .HasColumnName("restwaarde")
                    .HasColumnType("money");

                entity.Property(e => e.RmSpecification)
                    .IsRequired()
                    .HasColumnName("rm_specification")
                    .HasMaxLength(100);

                entity.Property(e => e.Serienummer)
                    .IsRequired()
                    .HasColumnName("serienummer")
                    .HasMaxLength(100);

                entity.Property(e => e.ServicewindowOption).HasColumnName("servicewindow_option");

                entity.Property(e => e.Servicewindowid).HasColumnName("servicewindowid");

                entity.Property(e => e.Sjabloonobjectid).HasColumnName("sjabloonobjectid");

                entity.Property(e => e.Soortid).HasColumnName("soortid");

                entity.Property(e => e.Specificatie)
                    .IsRequired()
                    .HasColumnName("specificatie")
                    .HasMaxLength(60);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Stdresvbehandelaarid).HasColumnName("stdresvbehandelaarid");

                entity.Property(e => e.Topsis).HasColumnName("topsis");

                entity.Property(e => e.Topsispassword)
                    .HasColumnName("topsispassword")
                    .HasColumnType("nchar(128)");

                entity.Property(e => e.Topsissource).HasColumnName("topsissource");

                entity.Property(e => e.Topsisusername)
                    .HasColumnName("topsisusername")
                    .HasColumnType("nchar(128)");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veiligvoorraad).HasColumnName("veiligvoorraad");

                entity.Property(e => e.Verhuurborg)
                    .HasColumnName("verhuurborg")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijs)
                    .HasColumnName("verhuurprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijssysteem).HasColumnName("verhuurprijssysteem");

                entity.Property(e => e.Verhuurtekst)
                    .HasColumnName("verhuurtekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.Verkoopprijs)
                    .HasColumnName("verkoopprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verzekerdatum)
                    .HasColumnName("verzekerdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Vnc).HasColumnName("vnc");

                entity.Property(e => e.Vnchostnaam)
                    .HasColumnName("vnchostnaam")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vncsource).HasColumnName("vncsource");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Wburl)
                    .IsRequired()
                    .HasColumnName("wburl")
                    .HasMaxLength(1024);

                entity.Property(e => e.Webbrowser).HasColumnName("webbrowser");

                entity.HasOne(d => d.Aanspreekpunt)
                    .WithMany(p => p.HardwareAanspreekpunt)
                    .HasForeignKey(d => d.Aanspreekpuntid)
                    .HasConstraintName("fk_actiedoor_aanspreekpuntid_hardware");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_hardware");

                entity.HasOne(d => d.Artikelbestellink)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Artikelbestellinkid)
                    .HasConstraintName("fk_artikel_bestel_link_artikelbestellinkid_hardware");

                entity.HasOne(d => d.Artikelstatus)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Artikelstatusid)
                    .HasConstraintName("fk_artikelstatus_artikelstatusid_hardware");

                entity.HasOne(d => d.Attentie)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Attentieid)
                    .HasConstraintName("fk_attentie_attentieid_hardware");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.HardwareAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_hardware");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.HardwareAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_hardware");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.HardwareAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_hardware");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.HardwareAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_hardware");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.HardwareAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_hardware");

                entity.HasOne(d => d.Bestelaanvraag)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Bestelaanvraagid)
                    .HasConstraintName("fk_bestelaanvraag_bestelaanvraagid_hardware");

                entity.HasOne(d => d.Bestelling)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Bestellingid)
                    .HasConstraintName("fk_bestellingen_bestellingid_hardware");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_hardware");

                entity.HasOne(d => d.Configuratie)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Configuratieid)
                    .HasConstraintName("fk_configuratie_configuratieid_hardware");

                entity.HasOne(d => d.Installatiedoor)
                    .WithMany(p => p.HardwareInstallatiedoor)
                    .HasForeignKey(d => d.Installatiedoorid)
                    .HasConstraintName("fk_actiedoor_installatiedoorid_hardware");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.HardwareLeverancier)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_hardware");

                entity.HasOne(d => d.Lokatie)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Lokatieid)
                    .HasConstraintName("fk_locatie_lokatieid_hardware");

                entity.HasOne(d => d.Merk)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Merkid)
                    .HasConstraintName("fk_objectmerk_merkid_hardware");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_hardware");

                entity.HasOne(d => d.ObjecttypeNavigation)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Objecttypeid)
                    .HasConstraintName("fk_objecttype_objecttypeid_hardware");

                entity.HasOne(d => d.OnderhoudDoor)
                    .WithMany(p => p.HardwareOnderhoudDoor)
                    .HasForeignKey(d => d.OnderhoudDoorid)
                    .HasConstraintName("fk_leverancier_onderhoud_doorid_hardware");

                entity.HasOne(d => d.Onderhoudslacontract)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Onderhoudslacontractid)
                    .HasConstraintName("fk_dnocontract_onderhoudslacontractid_hardware");

                entity.HasOne(d => d.Onderhoudsoort)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Onderhoudsoortid)
                    .HasConstraintName("fk_slacontractsoort_onderhoudsoortid_hardware");

                entity.HasOne(d => d.Onderhoudsplan)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Onderhoudsplanid)
                    .HasConstraintName("fk_onderhoudsplan_onderhoudsplanid_hardware");

                entity.HasOne(d => d.Persoongroep)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Persoongroepid)
                    .HasConstraintName("fk_persoongroep_persoongroepid_hardware");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_hardware");

                entity.HasOne(d => d.Servicewindow)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Servicewindowid)
                    .HasConstraintName("fk_servicewindow_servicewindowid_hardware");

                entity.HasOne(d => d.Sjabloonobject)
                    .WithMany(p => p.InverseSjabloonobject)
                    .HasForeignKey(d => d.Sjabloonobjectid)
                    .HasConstraintName("fk_hardware_sjabloonobjectid_hardware");

                entity.HasOne(d => d.Soort)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Soortid)
                    .HasConstraintName("fk_objectsoort_soortid_hardware");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_objectstatus_statusid_hardware");

                entity.HasOne(d => d.Stdresvbehandelaar)
                    .WithMany(p => p.HardwareStdresvbehandelaar)
                    .HasForeignKey(d => d.Stdresvbehandelaarid)
                    .HasConstraintName("fk_actiedoor_stdresvbehandelaarid_hardware");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.HardwareUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_hardware");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.HardwareUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_hardware");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.Hardware)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_hardware");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.HardwareVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_hardware");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.HardwareVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_hardware");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.HardwareVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_hardware");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.HardwareVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_hardware");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.HardwareVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_hardware");
            });

            modelBuilder.Entity<HardwareDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("hardware__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_hardware__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_hardware__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_hardware__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_hardware__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_hardware__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_hardware__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.HardwareDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_hardware_kaartid_hardware__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.HardwareDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_hardware__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.HardwareDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_hardware__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.HardwareDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_hardware__documenten");
            });

            modelBuilder.Entity<HardwareEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("hardware__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_hardware__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_hardware__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_hardware__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.HardwareEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_hardware__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.HardwareEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_hardware_kaartid_hardware__emailberichten");
            });

            modelBuilder.Entity<HardwareLicenseLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("hardware_license_link");

                entity.HasIndex(e => e.Hardwareid)
                    .HasName("idx_hardware_license_link_hardwareid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_hardware_license_link_importid");

                entity.HasIndex(e => e.Softwaretopsissoftwarelinkid)
                    .HasName("idx_hardware_license_link_softwaretopsissoftwarelinkid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Hardwareid).HasColumnName("hardwareid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Softwaretopsissoftwarelinkid).HasColumnName("softwaretopsissoftwarelinkid");

                entity.HasOne(d => d.Hardware)
                    .WithMany(p => p.HardwareLicenseLink)
                    .HasForeignKey(d => d.Hardwareid)
                    .HasConstraintName("fk_hardware_hardwareid_hardware_license_link");

                entity.HasOne(d => d.Softwaretopsissoftwarelink)
                    .WithMany(p => p.HardwareLicenseLink)
                    .HasForeignKey(d => d.Softwaretopsissoftwarelinkid)
                    .HasConstraintName("fk_software_topsissoftware_link_softwaretopsissoftwarelinkid_hardware_license_link");
            });

            modelBuilder.Entity<HardwareLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("hardware__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_hardware__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_hardware__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_hardware__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_hardware__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_hardware__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_hardware__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.HardwareLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_hardware_kaartid_hardware__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.HardwareLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_hardware__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.HardwareLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_hardware__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.HardwareLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_hardware__logboek");
            });

            modelBuilder.Entity<HardwareOptionalgrid>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("hardware__optionalgrid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_hardware__optionalgrid_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_hardware__optionalgrid_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_hardware__optionalgrid_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_hardware__optionalgrid_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_hardware__optionalgrid_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_hardware__optionalgrid_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_hardware__optionalgrid_parentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_hardware__optionalgrid_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_hardware__optionalgrid_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_hardware__optionalgrid_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_hardware__optionalgrid_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_hardware__optionalgrid_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_hardware__optionalgrid_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_hardware__optionalgrid_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.HardwareOptionalgridAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_hardware__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.HardwareOptionalgridAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_hardware__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.HardwareOptionalgridAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_hardware__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.HardwareOptionalgridAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_hardware__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.HardwareOptionalgridAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_hardware__optionalgrid");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.HardwareOptionalgrid)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_hardware_parentid_hardware__optionalgrid");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.HardwareOptionalgridUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_hardware__optionalgrid");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.HardwareOptionalgridUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_hardware__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.HardwareOptionalgridVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_hardware__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.HardwareOptionalgridVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_hardware__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.HardwareOptionalgridVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_hardware__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.HardwareOptionalgridVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_hardware__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.HardwareOptionalgridVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_hardware__optionalgrid");
            });

            modelBuilder.Entity<Herhaling>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("herhaling");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_herhaling_importid");

                entity.HasIndex(e => e.Planningid)
                    .HasName("idx_herhaling_planningid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_herhaling_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_herhaling_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Daginterval).HasColumnName("daginterval");

                entity.Property(e => e.Dagvanjaar).HasColumnName("dagvanjaar");

                entity.Property(e => e.Dagvanmaand).HasColumnName("dagvanmaand");

                entity.Property(e => e.Dagvanweek).HasColumnName("dagvanweek");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Dinsdag).HasColumnName("dinsdag");

                entity.Property(e => e.Donderdag).HasColumnName("donderdag");

                entity.Property(e => e.Doorlooptijd).HasColumnName("doorlooptijd");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Jaarinterval).HasColumnName("jaarinterval");

                entity.Property(e => e.Jaarperiode)
                    .IsRequired()
                    .HasColumnName("jaarperiode")
                    .HasMaxLength(14);

                entity.Property(e => e.Maandag).HasColumnName("maandag");

                entity.Property(e => e.Maandinterval).HasColumnName("maandinterval");

                entity.Property(e => e.Maandperiode)
                    .IsRequired()
                    .HasColumnName("maandperiode")
                    .HasMaxLength(11);

                entity.Property(e => e.Maandvanjaar).HasColumnName("maandvanjaar");

                entity.Property(e => e.Periode)
                    .IsRequired()
                    .HasColumnName("periode")
                    .HasMaxLength(9);

                entity.Property(e => e.Planningid).HasColumnName("planningid");

                entity.Property(e => e.Starttijd).HasColumnName("starttijd");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijdag).HasColumnName("vrijdag");

                entity.Property(e => e.Weekinterval).HasColumnName("weekinterval");

                entity.Property(e => e.Weekvanjaar).HasColumnName("weekvanjaar");

                entity.Property(e => e.Weekvanmaand).HasColumnName("weekvanmaand");

                entity.Property(e => e.Woensdag).HasColumnName("woensdag");

                entity.Property(e => e.Zaterdag).HasColumnName("zaterdag");

                entity.Property(e => e.Zondag).HasColumnName("zondag");

                entity.HasOne(d => d.Planning)
                    .WithMany(p => p.Herhaling)
                    .HasForeignKey(d => d.Planningid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_planning_planningid_herhaling");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.HerhalingUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_herhaling");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.HerhalingUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_herhaling");
            });

            modelBuilder.Entity<Highesteducation>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("highesteducation");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_highesteducation_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_highesteducation_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_highesteducation_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<HistoricalSite>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("historical_site");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_historical_site_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_historical_site_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_historical_site_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Httpactie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("httpactie");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_httpactie_naam");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actief).HasColumnName("actief");

                entity.Property(e => e.Actieftasbeveiligd).HasColumnName("actieftasbeveiligd");

                entity.Property(e => e.Actieftaspubliek).HasColumnName("actieftaspubliek");

                entity.Property(e => e.Actieftopdesk).HasColumnName("actieftopdesk");

                entity.Property(e => e.Berichttonen).HasColumnName("berichttonen");

                entity.Property(e => e.Bevestigen).HasColumnName("bevestigen");

                entity.Property(e => e.Body)
                    .HasColumnName("body")
                    .HasColumnType("ntext");

                entity.Property(e => e.Body1)
                    .HasColumnName("body1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Clientsideauth).HasColumnName("clientsideauth");

                entity.Property(e => e.Eenofalle).HasColumnName("eenofalle");

                entity.Property(e => e.Headers)
                    .HasColumnName("headers")
                    .HasColumnType("ntext");

                entity.Property(e => e.Headers1)
                    .HasColumnName("headers1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Httpmethod).HasColumnName("httpmethod");

                entity.Property(e => e.Httpversie).HasColumnName("httpversie");

                entity.Property(e => e.Intopdesk).HasColumnName("intopdesk");

                entity.Property(e => e.Komtvoor).HasColumnName("komtvoor");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(50);

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Optionalwebtab).HasColumnName("optionalwebtab");

                entity.Property(e => e.Poort).HasColumnName("poort");

                entity.Property(e => e.Server)
                    .HasColumnName("server")
                    .HasColumnType("ntext");

                entity.Property(e => e.Server1)
                    .HasColumnName("server1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Serversideauth).HasColumnName("serversideauth");

                entity.Property(e => e.Sleutel)
                    .HasColumnName("sleutel")
                    .HasColumnType("ntext");

                entity.Property(e => e.Soortuitvoer).HasColumnName("soortuitvoer");

                entity.Property(e => e.Soortuitvoer2).HasColumnName("soortuitvoer2");

                entity.Property(e => e.Specplaats).HasColumnName("specplaats");

                entity.Property(e => e.Structurename)
                    .IsRequired()
                    .HasColumnName("structurename")
                    .HasMaxLength(40);

                entity.Property(e => e.Tabelstatus)
                    .IsRequired()
                    .HasColumnName("tabelstatus")
                    .HasMaxLength(40);

                entity.Property(e => e.Tekstals)
                    .HasColumnName("tekstals")
                    .HasColumnType("ntext");

                entity.Property(e => e.Tekstals1)
                    .HasColumnName("tekstals1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Tekstalsniet)
                    .HasColumnName("tekstalsniet")
                    .HasColumnType("ntext");

                entity.Property(e => e.Tekstalsniet1)
                    .HasColumnName("tekstalsniet1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Toonanders).HasColumnName("toonanders");

                entity.Property(e => e.Toonreactie).HasColumnName("toonreactie");

                entity.Property(e => e.Uri)
                    .HasColumnName("uri")
                    .HasColumnType("ntext");

                entity.Property(e => e.Uri1)
                    .HasColumnName("uri1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Usessl).HasColumnName("usessl");

                entity.Property(e => e.Voorwaarde).HasColumnName("voorwaarde");

                entity.Property(e => e.Wijzigbaar).HasColumnName("wijzigbaar");

                entity.Property(e => e.Woorden)
                    .HasColumnName("woorden")
                    .HasColumnType("ntext");

                entity.Property(e => e.Woorden1)
                    .HasColumnName("woorden1")
                    .HasColumnType("ntext");
            });

            modelBuilder.Entity<Identiteitsbewijs>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("identiteitsbewijs");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_identiteitsbewijs_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_identiteitsbewijs_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_identiteitsbewijs_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Idtype>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("idtype");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_idtype_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_idtype_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_idtype_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Impact>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("impact");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_impact_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_impact_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_impact_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ImportCouple>(entity =>
            {
                entity.ToTable("import_couple");

                entity.HasIndex(e => e.Runid)
                    .HasName("idx_import_couple_runid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .ValueGeneratedNever();

                entity.Property(e => e.Runid).HasColumnName("runid");

                entity.Property(e => e.Source)
                    .IsRequired()
                    .HasColumnName("source")
                    .HasMaxLength(50);

                entity.Property(e => e.Target)
                    .IsRequired()
                    .HasColumnName("target")
                    .HasMaxLength(50);

                entity.HasOne(d => d.Run)
                    .WithMany(p => p.ImportCouple)
                    .HasForeignKey(d => d.Runid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_import_run_runid_import_couple");
            });

            modelBuilder.Entity<ImportCoupleResult>(entity =>
            {
                entity.ToTable("import_couple_result");

                entity.HasIndex(e => e.Coupleid)
                    .HasName("idx_import_couple_result_coupleid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .ValueGeneratedNever();

                entity.Property(e => e.Count).HasColumnName("count");

                entity.Property(e => e.Coupleid).HasColumnName("coupleid");

                entity.Property(e => e.Mad).HasColumnName("mad");

                entity.Property(e => e.Success).HasColumnName("success");

                entity.HasOne(d => d.Couple)
                    .WithMany(p => p.ImportCoupleResult)
                    .HasForeignKey(d => d.Coupleid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_import_couple_coupleid_import_couple_result");
            });

            modelBuilder.Entity<ImportRecordResult>(entity =>
            {
                entity.ToTable("import_record_result");

                entity.HasIndex(e => e.Coupleid)
                    .HasName("idx_import_record_result_coupleid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .ValueGeneratedNever();

                entity.Property(e => e.Comment)
                    .IsRequired()
                    .HasColumnName("comment")
                    .HasMaxLength(1000);

                entity.Property(e => e.Coupleid).HasColumnName("coupleid");

                entity.Property(e => e.Mad).HasColumnName("mad");

                entity.Property(e => e.Representation)
                    .IsRequired()
                    .HasColumnName("representation")
                    .HasMaxLength(255);

                entity.Property(e => e.Success).HasColumnName("success");

                entity.HasOne(d => d.Couple)
                    .WithMany(p => p.ImportRecordResult)
                    .HasForeignKey(d => d.Coupleid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_import_couple_coupleid_import_record_result");
            });

            modelBuilder.Entity<ImportRun>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("import_run");

                entity.HasIndex(e => e.Begin)
                    .HasName("idx_import_run_begin");

                entity.HasIndex(e => e.Eind)
                    .HasName("idx_import_run_eind");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Begin)
                    .HasColumnName("begin")
                    .HasColumnType("datetime");

                entity.Property(e => e.Eind)
                    .HasColumnName("eind")
                    .HasColumnType("datetime");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Versie)
                    .IsRequired()
                    .HasColumnName("versie")
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<ImportRunInfo>(entity =>
            {
                entity.ToTable("import_run_info");

                entity.HasIndex(e => e.ImportRunid)
                    .HasName("idx_import_run_info_import_runid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .ValueGeneratedNever();

                entity.Property(e => e.ImportRunid).HasColumnName("import_runid");

                entity.Property(e => e.Stacktrace)
                    .HasColumnName("stacktrace")
                    .HasColumnType("ntext");

                entity.HasOne(d => d.ImportRun)
                    .WithMany(p => p.ImportRunInfo)
                    .HasForeignKey(d => d.ImportRunid)
                    .HasConstraintName("fk_import_run_import_runid_import_run_info");
            });

            modelBuilder.Entity<Importsettings>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("importsettings");

                entity.HasIndex(e => e.Importuserid)
                    .HasName("idx_importsettings_importuserid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_importsettings_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_importsettings_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Advancedlogging).HasColumnName("advancedlogging");

                entity.Property(e => e.Commitdelay).HasColumnName("commitdelay");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Databaseconnection)
                    .HasColumnName("databaseconnection")
                    .HasColumnType("ntext");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdefinition)
                    .HasColumnName("importdefinition")
                    .HasMaxLength(1024);

                entity.Property(e => e.Importuserid).HasColumnName("importuserid");

                entity.Property(e => e.Lastimport).HasColumnName("lastimport");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(255);

                entity.Property(e => e.Rank).HasColumnName("rank");

                entity.Property(e => e.Schedule)
                    .HasColumnName("schedule")
                    .HasMaxLength(255);

                entity.Property(e => e.Sourcestructure)
                    .HasColumnName("sourcestructure")
                    .HasMaxLength(1024);

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Importuser)
                    .WithMany(p => p.ImportsettingsImportuser)
                    .HasForeignKey(d => d.Importuserid)
                    .HasConstraintName("fk_gebruiker_importuserid_importsettings");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ImportsettingsUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_importsettings");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ImportsettingsUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_importsettings");
            });

            modelBuilder.Entity<Incident>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("incident");

                entity.HasIndex(e => e.Aanmelderafdelingid)
                    .HasName("idx_incident_aanmelderafdelingid");

                entity.HasIndex(e => e.Aanmelderbudgethouderid)
                    .HasName("idx_incident_aanmelderbudgethouderid");

                entity.HasIndex(e => e.Aanmelderlokatieid)
                    .HasName("idx_incident_aanmelderlokatieid");

                entity.HasIndex(e => e.Aanmeldervestigingid)
                    .HasName("idx_incident_aanmeldervestigingid");

                entity.HasIndex(e => e.Actiedoorid)
                    .HasName("idx_incident_actiedoorid");

                entity.HasIndex(e => e.Afhandelingstatusid)
                    .HasName("idx_incident_afhandelingstatusid");

                entity.HasIndex(e => e.Appointmentid)
                    .HasName("idx_incident_appointmentid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_incident_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_incident_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_incident_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_incident_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_incident_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_incident_attvrijeopzoek5");

                entity.HasIndex(e => e.Configuratieid)
                    .HasName("idx_incident_configuratieid");

                entity.HasIndex(e => e.Configuratieobjectid)
                    .HasName("idx_incident_configuratieobjectid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_incident_dataanmk");

                entity.HasIndex(e => e.Datumaangemeld)
                    .HasName("idx_incident_datumaangemeld");

                entity.HasIndex(e => e.Datumafgemeld)
                    .HasName("idx_incident_datumafgemeld");

                entity.HasIndex(e => e.Datumafspraak)
                    .HasName("idx_incident_datumafspraak");

                entity.HasIndex(e => e.Datumafspraaksla)
                    .HasName("idx_incident_datumafspraaksla");

                entity.HasIndex(e => e.Datumgereed)
                    .HasName("idx_incident_datumgereed");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_incident_datwijzig");

                entity.HasIndex(e => e.Deescalatieredenid)
                    .HasName("idx_incident_deescalatieredenid");

                entity.HasIndex(e => e.Dnoid)
                    .HasName("idx_incident_dnoid");

                entity.HasIndex(e => e.Doorlooptijdid)
                    .HasName("idx_incident_doorlooptijdid");

                entity.HasIndex(e => e.Escalatieredenid)
                    .HasName("idx_incident_escalatieredenid");

                entity.HasIndex(e => e.Escalationoperatorid)
                    .HasName("idx_incident_escalationoperatorid");

                entity.HasIndex(e => e.Extraapersoonid)
                    .HasName("idx_incident_extraapersoonid");

                entity.HasIndex(e => e.Extrabpersoonid)
                    .HasName("idx_incident_extrabpersoonid");

                entity.HasIndex(e => e.Impactid)
                    .HasName("idx_incident_impactid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_incident_importid");

                entity.HasIndex(e => e.IncidentDomeinid)
                    .HasName("idx_incident_incident_domeinid");

                entity.HasIndex(e => e.IncidentSpecid)
                    .HasName("idx_incident_incident_specid");

                entity.HasIndex(e => e.Incidentid)
                    .HasName("idx_incident_incidentid");

                entity.HasIndex(e => e.Ismajorincident)
                    .HasName("idx_incident_ismajorincident");

                entity.HasIndex(e => e.Korteomschrijving)
                    .HasName("idx_incident_korteomschrijving");

                entity.HasIndex(e => e.Lijn1actiedoorid)
                    .HasName("idx_incident_lijn1actiedoorid");

                entity.HasIndex(e => e.Locatieid)
                    .HasName("idx_incident_locatieid");

                entity.HasIndex(e => e.Majorincidentid)
                    .HasName("idx_incident_majorincidentid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_incident_naam");

                entity.HasIndex(e => e.Onholddatum)
                    .HasName("idx_incident_onholddatum");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_incident_operatorgroupid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_incident_operatorid");

                entity.HasIndex(e => e.Oplosmethodeid)
                    .HasName("idx_incident_oplosmethodeid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_incident_persoonid");

                entity.HasIndex(e => e.Priorityid)
                    .HasName("idx_incident_priorityid");

                entity.HasIndex(e => e.RefConfiguratie)
                    .HasName("idx_incident_ref_configuratie");

                entity.HasIndex(e => e.RefDebnummer)
                    .HasName("idx_incident_ref_debnummer");

                entity.HasIndex(e => e.RefDnocontractid)
                    .HasName("idx_incident_ref_dnocontractid");

                entity.HasIndex(e => e.RefDnodienstid)
                    .HasName("idx_incident_ref_dnodienstid");

                entity.HasIndex(e => e.RefDomein)
                    .HasName("idx_incident_ref_domein");

                entity.HasIndex(e => e.RefImpact)
                    .HasName("idx_incident_ref_impact");

                entity.HasIndex(e => e.RefObject)
                    .HasName("idx_incident_ref_object");

                entity.HasIndex(e => e.RefPersnr)
                    .HasName("idx_incident_ref_persnr");

                entity.HasIndex(e => e.RefServicelevelid)
                    .HasName("idx_incident_ref_servicelevelid");

                entity.HasIndex(e => e.RefSoortmelding)
                    .HasName("idx_incident_ref_soortmelding");

                entity.HasIndex(e => e.RefSpecificatie)
                    .HasName("idx_incident_ref_specificatie");

                entity.HasIndex(e => e.RefStatus)
                    .HasName("idx_incident_ref_status");

                entity.HasIndex(e => e.RefVestiging)
                    .HasName("idx_incident_ref_vestiging");

                entity.HasIndex(e => e.Servicewindowid)
                    .HasName("idx_incident_servicewindowid");

                entity.HasIndex(e => e.Soortbinnenkomstid)
                    .HasName("idx_incident_soortbinnenkomstid");

                entity.HasIndex(e => e.Soortmeldingid)
                    .HasName("idx_incident_soortmeldingid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_incident_status");

                entity.HasIndex(e => e.Supplierid)
                    .HasName("idx_incident_supplierid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_incident_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_incident_uidwijzig");

                entity.HasIndex(e => e.Urgencyid)
                    .HasName("idx_incident_urgencyid");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_incident_vestigingid");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_incident_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_incident_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_incident_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_incident_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_incident_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_incident_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_incident_vrijeopzoek5");

                entity.HasIndex(e => new { e.Aanmeldernaam, e.Unid })
                    .HasName("uidx_incident_aanmeldernaam_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.Externnummer, e.Unid })
                    .HasName("uidx_incident_externnummer_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.Naam, e.Unid })
                    .HasName("uidx_incident_naam_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.RefConfiguratie, e.Unid })
                    .HasName("uidx_incident_ref_configuratie_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.RefDomein, e.Unid })
                    .HasName("uidx_incident_ref_domein_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.RefObject, e.Unid })
                    .HasName("uidx_incident_ref_object_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.RefSpecificatie, e.Unid })
                    .HasName("uidx_incident_ref_specificatie_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.RefVestiging, e.Unid })
                    .HasName("uidx_incident_ref_vestiging_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.Datumafspraak, e.Actiedoorid, e.Afgemeld, e.Gereed, e.Bewaakt, e.Status, e.Unid })
                    .HasName("uidx_incident_datumafspraak_actiedoorid_afgemeld_gereed_bewaakt_status_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.Datumafspraak, e.Lijn1actiedoorid, e.Afgemeld, e.Gereed, e.Bewaakt, e.Status, e.Unid })
                    .HasName("uidx_incident_datumafspraak_lijn1actiedoorid_afgemeld_gereed_bewaakt_status_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.Status, e.Volgnummer, e.Afgemeld, e.Gereed, e.Bewaakt, e.Datumafspraak, e.Datumaangemeld, e.Unid })
                    .HasName("uidx_incident_status_volgnummer_afgemeld_gereed_bewaakt_datumafspraak_datumaangemeld_unid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aanmelderafdelingid).HasColumnName("aanmelderafdelingid");

                entity.Property(e => e.Aanmelderbudgethouderid).HasColumnName("aanmelderbudgethouderid");

                entity.Property(e => e.Aanmelderemail)
                    .IsRequired()
                    .HasColumnName("aanmelderemail")
                    .HasMaxLength(100);

                entity.Property(e => e.Aanmelderlokatieid).HasColumnName("aanmelderlokatieid");

                entity.Property(e => e.Aanmeldernaam)
                    .IsRequired()
                    .HasColumnName("aanmeldernaam")
                    .HasMaxLength(109);

                entity.Property(e => e.Aanmeldertelefoon)
                    .IsRequired()
                    .HasColumnName("aanmeldertelefoon")
                    .HasMaxLength(25);

                entity.Property(e => e.Aanmeldervestigingid).HasColumnName("aanmeldervestigingid");

                entity.Property(e => e.Actie)
                    .HasColumnName("actie")
                    .HasColumnType("ntext");

                entity.Property(e => e.Actiedoorid).HasColumnName("actiedoorid");

                entity.Property(e => e.Adjusteddurationonhold).HasColumnName("adjusteddurationonhold");

                entity.Property(e => e.Adjusteddurationresolved).HasColumnName("adjusteddurationresolved");

                entity.Property(e => e.Afgemeld).HasColumnName("afgemeld");

                entity.Property(e => e.Afhandelingstatusid).HasColumnName("afhandelingstatusid");

                entity.Property(e => e.Appointmentid).HasColumnName("appointmentid");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Betreftkeuze).HasColumnName("betreftkeuze");

                entity.Property(e => e.Bewaakt).HasColumnName("bewaakt");

                entity.Property(e => e.Configuratieid).HasColumnName("configuratieid");

                entity.Property(e => e.Configuratieobjectid).HasColumnName("configuratieobjectid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumaangemeld)
                    .HasColumnName("datumaangemeld")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumafgemeld)
                    .HasColumnName("datumafgemeld")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumafspraak)
                    .HasColumnName("datumafspraak")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumafspraaksla)
                    .HasColumnName("datumafspraaksla")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumgereed)
                    .HasColumnName("datumgereed")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Deelactievolgnummer).HasColumnName("deelactievolgnummer");

                entity.Property(e => e.Deescalatieredenid).HasColumnName("deescalatieredenid");

                entity.Property(e => e.Dnogebruikt).HasColumnName("dnogebruikt");

                entity.Property(e => e.Dnoid).HasColumnName("dnoid");

                entity.Property(e => e.Dnostatus).HasColumnName("dnostatus");

                entity.Property(e => e.Doorlooptijdid).HasColumnName("doorlooptijdid");

                entity.Property(e => e.Emailstatus).HasColumnName("emailstatus");

                entity.Property(e => e.Escalatieredenid).HasColumnName("escalatieredenid");

                entity.Property(e => e.Escalationoperatorid).HasColumnName("escalationoperatorid");

                entity.Property(e => e.Externnummer)
                    .IsRequired()
                    .HasColumnName("externnummer")
                    .HasMaxLength(60);

                entity.Property(e => e.Extraaid).HasColumnName("extraaid");

                entity.Property(e => e.Extraapersoonid).HasColumnName("extraapersoonid");

                entity.Property(e => e.Extrabid).HasColumnName("extrabid");

                entity.Property(e => e.Extrabpersoonid).HasColumnName("extrabpersoonid");

                entity.Property(e => e.Gedeescaleerd).HasColumnName("gedeescaleerd");

                entity.Property(e => e.Geescaleerd).HasColumnName("geescaleerd");

                entity.Property(e => e.Gereed).HasColumnName("gereed");

                entity.Property(e => e.Impactid).HasColumnName("impactid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.IncidentDomeinid).HasColumnName("incident_domeinid");

                entity.Property(e => e.IncidentSpecid).HasColumnName("incident_specid");

                entity.Property(e => e.Incidentid).HasColumnName("incidentid");

                entity.Property(e => e.Ismajorincident).HasColumnName("ismajorincident");

                entity.Property(e => e.Korteomschrijving)
                    .IsRequired()
                    .HasColumnName("korteomschrijving")
                    .HasMaxLength(80);

                entity.Property(e => e.KostenArtikelen)
                    .HasColumnName("kosten_artikelen")
                    .HasColumnType("money");

                entity.Property(e => e.KostenObjecten)
                    .HasColumnName("kosten_objecten")
                    .HasColumnType("money");

                entity.Property(e => e.Lijn1actiedoorid).HasColumnName("lijn1actiedoorid");

                entity.Property(e => e.Lijn1tijdbesteed).HasColumnName("lijn1tijdbesteed");

                entity.Property(e => e.Locatieid).HasColumnName("locatieid");

                entity.Property(e => e.Majorincidentid).HasColumnName("majorincidentid");

                entity.Property(e => e.Minutendoorlooptijd).HasColumnName("minutendoorlooptijd");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(30);

                entity.Property(e => e.Onhold).HasColumnName("onhold");

                entity.Property(e => e.Onholddatum)
                    .HasColumnName("onholddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Onholdduration).HasColumnName("onholdduration");

                entity.Property(e => e.Onkosten)
                    .HasColumnName("onkosten")
                    .HasColumnType("money");

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Oplosmethodeid).HasColumnName("oplosmethodeid");

                entity.Property(e => e.Oplossingid).HasColumnName("oplossingid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Priorityid).HasColumnName("priorityid");

                entity.Property(e => e.RefConfiguratie)
                    .IsRequired()
                    .HasColumnName("ref_configuratie")
                    .HasMaxLength(30);

                entity.Property(e => e.RefDebnummer)
                    .IsRequired()
                    .HasColumnName("ref_debnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.RefDnocontractid).HasColumnName("ref_dnocontractid");

                entity.Property(e => e.RefDnodienstid).HasColumnName("ref_dnodienstid");

                entity.Property(e => e.RefDomein)
                    .IsRequired()
                    .HasColumnName("ref_domein")
                    .HasMaxLength(30);

                entity.Property(e => e.RefEscalationoperator)
                    .IsRequired()
                    .HasColumnName("ref_escalationoperator")
                    .HasMaxLength(109);

                entity.Property(e => e.RefImpact)
                    .IsRequired()
                    .HasColumnName("ref_impact")
                    .HasMaxLength(100);

                entity.Property(e => e.RefMainIncidentBf)
                    .IsRequired()
                    .HasColumnName("ref_main_incident_bf")
                    .HasMaxLength(80);

                entity.Property(e => e.RefMainIncidentName)
                    .IsRequired()
                    .HasColumnName("ref_main_incident_name")
                    .HasMaxLength(30);

                entity.Property(e => e.RefMainIncidentStatus).HasColumnName("ref_main_incident_status");

                entity.Property(e => e.RefObject)
                    .IsRequired()
                    .HasColumnName("ref_object")
                    .HasMaxLength(60);

                entity.Property(e => e.RefOperatordynanaam)
                    .IsRequired()
                    .HasColumnName("ref_operatordynanaam")
                    .HasMaxLength(109);

                entity.Property(e => e.RefOperatorgroup)
                    .IsRequired()
                    .HasColumnName("ref_operatorgroup")
                    .HasMaxLength(109);

                entity.Property(e => e.RefPersnr)
                    .IsRequired()
                    .HasColumnName("ref_persnr")
                    .HasMaxLength(20);

                entity.Property(e => e.RefProgresstrail)
                    .HasColumnName("ref_progresstrail")
                    .HasColumnType("ntext");

                entity.Property(e => e.RefServicelevelid).HasColumnName("ref_servicelevelid");

                entity.Property(e => e.RefSoortmelding)
                    .IsRequired()
                    .HasColumnName("ref_soortmelding")
                    .HasMaxLength(100);

                entity.Property(e => e.RefSpecificatie)
                    .IsRequired()
                    .HasColumnName("ref_specificatie")
                    .HasMaxLength(30);

                entity.Property(e => e.RefStatus)
                    .IsRequired()
                    .HasColumnName("ref_status")
                    .HasMaxLength(100);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.Resolvedduration).HasColumnName("resolvedduration");

                entity.Property(e => e.Savedinsecure).HasColumnName("savedinsecure");

                entity.Property(e => e.Servicewindowid).HasColumnName("servicewindowid");

                entity.Property(e => e.Soortbinnenkomstid).HasColumnName("soortbinnenkomstid");

                entity.Property(e => e.Soortmeldingid).HasColumnName("soortmeldingid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Supplierid).HasColumnName("supplierid");

                entity.Property(e => e.Supplierserviceid).HasColumnName("supplierserviceid");

                entity.Property(e => e.Tijdbesteed).HasColumnName("tijdbesteed");

                entity.Property(e => e.Totaleonkosten)
                    .HasColumnName("totaleonkosten")
                    .HasColumnType("money");

                entity.Property(e => e.Totaletijd).HasColumnName("totaletijd");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Urgencyid).HasColumnName("urgencyid");

                entity.Property(e => e.Verwtijdbesteed).HasColumnName("verwtijdbesteed");

                entity.Property(e => e.Verzoek)
                    .HasColumnName("verzoek")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Volgnummer).HasColumnName("volgnummer");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Aanmelderafdeling)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Aanmelderafdelingid)
                    .HasConstraintName("fk_afdeling_aanmelderafdelingid_incident");

                entity.HasOne(d => d.Aanmelderbudgethouder)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Aanmelderbudgethouderid)
                    .HasConstraintName("fk_budgethouder_aanmelderbudgethouderid_incident");

                entity.HasOne(d => d.Aanmelderlokatie)
                    .WithMany(p => p.IncidentAanmelderlokatie)
                    .HasForeignKey(d => d.Aanmelderlokatieid)
                    .HasConstraintName("fk_locatie_aanmelderlokatieid_incident");

                entity.HasOne(d => d.Aanmeldervestiging)
                    .WithMany(p => p.IncidentAanmeldervestiging)
                    .HasForeignKey(d => d.Aanmeldervestigingid)
                    .HasConstraintName("fk_vestiging_aanmeldervestigingid_incident");

                entity.HasOne(d => d.Actiedoor)
                    .WithMany(p => p.IncidentActiedoor)
                    .HasForeignKey(d => d.Actiedoorid)
                    .HasConstraintName("fk_actiedoor_actiedoorid_incident");

                entity.HasOne(d => d.Afhandelingstatus)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Afhandelingstatusid)
                    .HasConstraintName("fk_afhandelingstatus_afhandelingstatusid_incident");

                entity.HasOne(d => d.Appointment)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Appointmentid)
                    .HasConstraintName("fk_appointment_appointmentid_incident");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_incident");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.IncidentAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_incident");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.IncidentAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_incident");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.IncidentAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_incident");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.IncidentAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_incident");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.IncidentAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_incident");

                entity.HasOne(d => d.Configuratie)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Configuratieid)
                    .HasConstraintName("fk_configuratie_configuratieid_incident");

                entity.HasOne(d => d.Configuratieobject)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Configuratieobjectid)
                    .HasConstraintName("fk_object_configuratieobjectid_incident");

                entity.HasOne(d => d.Deescalatiereden)
                    .WithMany(p => p.IncidentDeescalatiereden)
                    .HasForeignKey(d => d.Deescalatieredenid)
                    .HasConstraintName("fk_escalatiereden_deescalatieredenid_incident");

                entity.HasOne(d => d.Dno)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Dnoid)
                    .HasConstraintName("fk_dnolink_dnoid_incident");

                entity.HasOne(d => d.Doorlooptijd)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Doorlooptijdid)
                    .HasConstraintName("fk_doorlooptijd_doorlooptijdid_incident");

                entity.HasOne(d => d.Escalatiereden)
                    .WithMany(p => p.IncidentEscalatiereden)
                    .HasForeignKey(d => d.Escalatieredenid)
                    .HasConstraintName("fk_escalatiereden_escalatieredenid_incident");

                entity.HasOne(d => d.Escalationoperator)
                    .WithMany(p => p.IncidentEscalationoperator)
                    .HasForeignKey(d => d.Escalationoperatorid)
                    .HasConstraintName("fk_actiedoor_escalationoperatorid_incident");

                entity.HasOne(d => d.Extraa)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Extraaid)
                    .HasConstraintName("fk_extraa_extraaid_incident");

                entity.HasOne(d => d.Extraapersoon)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Extraapersoonid)
                    .HasConstraintName("fk_extraapersoon_extraapersoonid_incident");

                entity.HasOne(d => d.Extrab)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Extrabid)
                    .HasConstraintName("fk_extrab_extrabid_incident");

                entity.HasOne(d => d.Extrabpersoon)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Extrabpersoonid)
                    .HasConstraintName("fk_extrabpersoon_extrabpersoonid_incident");

                entity.HasOne(d => d.Impact)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Impactid)
                    .HasConstraintName("fk_impact_impactid_incident");

                entity.HasOne(d => d.IncidentDomein)
                    .WithMany(p => p.IncidentIncidentDomein)
                    .HasForeignKey(d => d.IncidentDomeinid)
                    .HasConstraintName("fk_classificatie_incident_domeinid_incident");

                entity.HasOne(d => d.IncidentSpec)
                    .WithMany(p => p.IncidentIncidentSpec)
                    .HasForeignKey(d => d.IncidentSpecid)
                    .HasConstraintName("fk_classificatie_incident_specid_incident");

                entity.HasOne(d => d.IncidentNavigation)
                    .WithMany(p => p.InverseIncidentNavigation)
                    .HasForeignKey(d => d.Incidentid)
                    .HasConstraintName("fk_incident_incidentid_incident");

                entity.HasOne(d => d.Lijn1actiedoor)
                    .WithMany(p => p.IncidentLijn1actiedoor)
                    .HasForeignKey(d => d.Lijn1actiedoorid)
                    .HasConstraintName("fk_actiedoor_lijn1actiedoorid_incident");

                entity.HasOne(d => d.Locatie)
                    .WithMany(p => p.IncidentLocatie)
                    .HasForeignKey(d => d.Locatieid)
                    .HasConstraintName("fk_locatie_locatieid_incident");

                entity.HasOne(d => d.Majorincident)
                    .WithMany(p => p.InverseMajorincident)
                    .HasForeignKey(d => d.Majorincidentid)
                    .HasConstraintName("fk_incident_majorincidentid_incident");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.IncidentOperatorgroup)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_incident");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.IncidentOperator)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_incident");

                entity.HasOne(d => d.Oplosmethode)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Oplosmethodeid)
                    .HasConstraintName("fk_oplossingsmethode_oplosmethodeid_incident");

                entity.HasOne(d => d.Oplossing)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Oplossingid)
                    .HasConstraintName("fk_oplossingen_oplossingid_incident");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_incident");

                entity.HasOne(d => d.Priority)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Priorityid)
                    .HasConstraintName("fk_priority_priorityid_incident");

                entity.HasOne(d => d.RefDnocontract)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.RefDnocontractid)
                    .HasConstraintName("fk_dnocontract_ref_dnocontractid_incident");

                entity.HasOne(d => d.RefDnodienst)
                    .WithMany(p => p.IncidentRefDnodienst)
                    .HasForeignKey(d => d.RefDnodienstid)
                    .HasConstraintName("fk_dnodienst_ref_dnodienstid_incident");

                entity.HasOne(d => d.RefServicelevel)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.RefServicelevelid)
                    .HasConstraintName("fk_servicelevel_ref_servicelevelid_incident");

                entity.HasOne(d => d.Servicewindow)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Servicewindowid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_servicewindow_servicewindowid_incident");

                entity.HasOne(d => d.Soortbinnenkomst)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Soortbinnenkomstid)
                    .HasConstraintName("fk_soortbinnenkomst_soortbinnenkomstid_incident");

                entity.HasOne(d => d.Soortmelding)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Soortmeldingid)
                    .HasConstraintName("fk_soortmelding_soortmeldingid_incident");

                entity.HasOne(d => d.Supplier)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Supplierid)
                    .HasConstraintName("fk_leverancier_supplierid_incident");

                entity.HasOne(d => d.Supplierservice)
                    .WithMany(p => p.IncidentSupplierservice)
                    .HasForeignKey(d => d.Supplierserviceid)
                    .HasConstraintName("fk_dnodienst_supplierserviceid_incident");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.IncidentUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_incident");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.IncidentUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_incident");

                entity.HasOne(d => d.Urgency)
                    .WithMany(p => p.Incident)
                    .HasForeignKey(d => d.Urgencyid)
                    .HasConstraintName("fk_urgency_urgencyid_incident");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.IncidentVestiging)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_incident");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.IncidentVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_incident");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.IncidentVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_incident");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.IncidentVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_incident");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.IncidentVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_incident");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.IncidentVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_incident");
            });

            modelBuilder.Entity<IncidentDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("incident__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_incident__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_incident__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_incident__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_incident__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_incident__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_incident__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.IncidentDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_incident_kaartid_incident__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.IncidentDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_incident__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.IncidentDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_incident__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.IncidentDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_incident__documenten");
            });

            modelBuilder.Entity<IncidentEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("incident__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_incident__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_incident__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_incident__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.IncidentEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_incident__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.IncidentEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_incident_kaartid_incident__emailberichten");
            });

            modelBuilder.Entity<Incidentkennissysteemlink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("incidentkennissysteemlink");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_incidentkennissysteemlink_importid");

                entity.HasIndex(e => e.Incidentid)
                    .HasName("idx_incidentkennissysteemlink_incidentid");

                entity.HasIndex(e => e.Kennisid)
                    .HasName("idx_incidentkennissysteemlink_kennisid");

                entity.HasIndex(e => new { e.Incidentid, e.Kennisid })
                    .HasName("uidx_incidentkennissysteemlink_incidentid_kennisid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Incidentid).HasColumnName("incidentid");

                entity.Property(e => e.Kennisid).HasColumnName("kennisid");

                entity.HasOne(d => d.Incident)
                    .WithMany(p => p.Incidentkennissysteemlink)
                    .HasForeignKey(d => d.Incidentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_incident_incidentid_incidentkennissysteemlink");

                entity.HasOne(d => d.Kennis)
                    .WithMany(p => p.Incidentkennissysteemlink)
                    .HasForeignKey(d => d.Kennisid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_kennis_systeem_kennisid_incidentkennissysteemlink");
            });

            modelBuilder.Entity<IncidentLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("incident__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_incident__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_incident__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_incident__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_incident__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_incident__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_incident__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.IncidentLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_incident_kaartid_incident__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.IncidentLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_incident__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.IncidentLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_incident__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.IncidentLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_incident__logboek");
            });

            modelBuilder.Entity<IncidentMemogeschiedenis>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("incident__memogeschiedenis");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_incident__memogeschiedenis_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_incident__memogeschiedenis_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_incident__memogeschiedenis_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_incident__memogeschiedenis_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_incident__memogeschiedenis_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_incident__memogeschiedenis_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_incident__memogeschiedenis_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_incident__memogeschiedenis_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_incident__memogeschiedenis_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.IncidentMemogeschiedenisGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_incident__memogeschiedenis");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.IncidentMemogeschiedenis)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_incident_parentid_incident__memogeschiedenis");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.IncidentMemogeschiedenis)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_incident__memogeschiedenis");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.IncidentMemogeschiedenisUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_incident__memogeschiedenis");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.IncidentMemogeschiedenisUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_incident__memogeschiedenis");
            });

            modelBuilder.Entity<Inkendaal>(entity =>
            {
                entity.ToTable("inkendaal");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Omschrijving).HasColumnName("omschrijving");
            });

            modelBuilder.Entity<Integration>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("integration");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_integration_importid");

                entity.HasIndex(e => e.Linkname)
                    .HasName("idx_integration_linkname");

                entity.HasIndex(e => e.Linknumber)
                    .HasName("idx_integration_linknumber");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_integration_parentid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Linkdate)
                    .HasColumnName("linkdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Linkisactive).HasColumnName("linkisactive");

                entity.Property(e => e.Linkname)
                    .HasColumnName("linkname")
                    .HasMaxLength(255);

                entity.Property(e => e.Linknumber)
                    .HasColumnName("linknumber")
                    .HasMaxLength(255);

                entity.Property(e => e.Linktype)
                    .HasColumnName("linktype")
                    .HasMaxLength(255);

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Parenttable)
                    .HasColumnName("parenttable")
                    .HasMaxLength(64);
            });

            modelBuilder.Entity<Inventaris>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("inventaris");

                entity.HasIndex(e => e.Aanschafdatum)
                    .HasName("idx_inventaris_aanschafdatum");

                entity.HasIndex(e => e.Aanspreekpuntid)
                    .HasName("idx_inventaris_aanspreekpuntid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_inventaris_archiefredenid");

                entity.HasIndex(e => e.Artikelbestellinkid)
                    .HasName("idx_inventaris_artikelbestellinkid");

                entity.HasIndex(e => e.Artikelstatusid)
                    .HasName("idx_inventaris_artikelstatusid");

                entity.HasIndex(e => e.Attentieid)
                    .HasName("idx_inventaris_attentieid");

                entity.HasIndex(e => e.Attvrijedatum1)
                    .HasName("idx_inventaris_attvrijedatum1");

                entity.HasIndex(e => e.Attvrijedatum2)
                    .HasName("idx_inventaris_attvrijedatum2");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_inventaris_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_inventaris_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_inventaris_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_inventaris_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_inventaris_attvrijeopzoek5");

                entity.HasIndex(e => e.Bestelaanvraagid)
                    .HasName("idx_inventaris_bestelaanvraagid");

                entity.HasIndex(e => e.Bestellingid)
                    .HasName("idx_inventaris_bestellingid");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_inventaris_budgethouderid");

                entity.HasIndex(e => e.Configuratieid)
                    .HasName("idx_inventaris_configuratieid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_inventaris_dataanmk");

                entity.HasIndex(e => e.Datumeersteonderhoud)
                    .HasName("idx_inventaris_datumeersteonderhoud");

                entity.HasIndex(e => e.Datumgeplandonderhoud)
                    .HasName("idx_inventaris_datumgeplandonderhoud");

                entity.HasIndex(e => e.Datumlaatsteonderhoud)
                    .HasName("idx_inventaris_datumlaatsteonderhoud");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_inventaris_datwijzig");

                entity.HasIndex(e => e.Garantiedatum)
                    .HasName("idx_inventaris_garantiedatum");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_inventaris_importid");

                entity.HasIndex(e => e.Installatiedoorid)
                    .HasName("idx_inventaris_installatiedoorid");

                entity.HasIndex(e => e.Leaseaanvangsdatum)
                    .HasName("idx_inventaris_leaseaanvangsdatum");

                entity.HasIndex(e => e.Leaseeinddatum)
                    .HasName("idx_inventaris_leaseeinddatum");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_inventaris_leverancierid");

                entity.HasIndex(e => e.Lokatieid)
                    .HasName("idx_inventaris_lokatieid");

                entity.HasIndex(e => e.Merkid)
                    .HasName("idx_inventaris_merkid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_inventaris_naam");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_inventaris_objectid");

                entity.HasIndex(e => e.Objecttypeid)
                    .HasName("idx_inventaris_objecttypeid");

                entity.HasIndex(e => e.OnderhoudDoorid)
                    .HasName("idx_inventaris_onderhoud_doorid");

                entity.HasIndex(e => e.Onderhoudslacontractid)
                    .HasName("idx_inventaris_onderhoudslacontractid");

                entity.HasIndex(e => e.Onderhoudsoortid)
                    .HasName("idx_inventaris_onderhoudsoortid");

                entity.HasIndex(e => e.Onderhoudsplanid)
                    .HasName("idx_inventaris_onderhoudsplanid");

                entity.HasIndex(e => e.Onderhoudtot)
                    .HasName("idx_inventaris_onderhoudtot");

                entity.HasIndex(e => e.Onderhoudvanaf)
                    .HasName("idx_inventaris_onderhoudvanaf");

                entity.HasIndex(e => e.Persoongroepid)
                    .HasName("idx_inventaris_persoongroepid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_inventaris_persoonid");

                entity.HasIndex(e => e.RefAanspreekpunt)
                    .HasName("idx_inventaris_ref_aanspreekpunt");

                entity.HasIndex(e => e.RefConfiguratie)
                    .HasName("idx_inventaris_ref_configuratie");

                entity.HasIndex(e => e.RefFinbudgethouder)
                    .HasName("idx_inventaris_ref_finbudgethouder");

                entity.HasIndex(e => e.RefKleur)
                    .HasName("idx_inventaris_ref_kleur");

                entity.HasIndex(e => e.RefLeverancier)
                    .HasName("idx_inventaris_ref_leverancier");

                entity.HasIndex(e => e.RefLokatie)
                    .HasName("idx_inventaris_ref_lokatie");

                entity.HasIndex(e => e.RefMerk)
                    .HasName("idx_inventaris_ref_merk");

                entity.HasIndex(e => e.RefOrdernumber)
                    .HasName("idx_inventaris_ref_ordernumber");

                entity.HasIndex(e => e.RefPersoon)
                    .HasName("idx_inventaris_ref_persoon");

                entity.HasIndex(e => e.RefPersoongroep)
                    .HasName("idx_inventaris_ref_persoongroep");

                entity.HasIndex(e => e.RefPlaats1)
                    .HasName("idx_inventaris_ref_plaats1");

                entity.HasIndex(e => e.RefSoort)
                    .HasName("idx_inventaris_ref_soort");

                entity.HasIndex(e => e.RefVestiging)
                    .HasName("idx_inventaris_ref_vestiging");

                entity.HasIndex(e => e.Reserveerbaaractiveerbaar)
                    .HasName("idx_inventaris_reserveerbaaractiveerbaar");

                entity.HasIndex(e => e.Reserveerbaarsecure)
                    .HasName("idx_inventaris_reserveerbaarsecure");

                entity.HasIndex(e => e.Reserveerbaarsshd)
                    .HasName("idx_inventaris_reserveerbaarsshd");

                entity.HasIndex(e => e.Reservzichtbaarsshd)
                    .HasName("idx_inventaris_reservzichtbaarsshd");

                entity.HasIndex(e => e.Servicewindowid)
                    .HasName("idx_inventaris_servicewindowid");

                entity.HasIndex(e => e.Sjabloonobjectid)
                    .HasName("idx_inventaris_sjabloonobjectid");

                entity.HasIndex(e => e.Soortid)
                    .HasName("idx_inventaris_soortid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_inventaris_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_inventaris_statusid");

                entity.HasIndex(e => e.Stdresvbehandelaarid)
                    .HasName("idx_inventaris_stdresvbehandelaarid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_inventaris_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_inventaris_uidwijzig");

                entity.HasIndex(e => e.Verzekerdatum)
                    .HasName("idx_inventaris_verzekerdatum");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_inventaris_vestigingid");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_inventaris_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_inventaris_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_inventaris_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_inventaris_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_inventaris_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_inventaris_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_inventaris_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aankoopbedrag)
                    .HasColumnName("aankoopbedrag")
                    .HasColumnType("money");

                entity.Property(e => e.Aanschafdatum)
                    .HasColumnName("aanschafdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Aanspreekpuntid).HasColumnName("aanspreekpuntid");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afschrijftermijn).HasColumnName("afschrijftermijn");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Artikelbestellinkid).HasColumnName("artikelbestellinkid");

                entity.Property(e => e.Artikelstatusid).HasColumnName("artikelstatusid");

                entity.Property(e => e.Artikelwordtobject).HasColumnName("artikelwordtobject");

                entity.Property(e => e.Attentieid).HasColumnName("attentieid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelaanvraagid).HasColumnName("bestelaanvraagid");

                entity.Property(e => e.Bestelbaarinssh).HasColumnName("bestelbaarinssh");

                entity.Property(e => e.Bestellingid).HasColumnName("bestellingid");

                entity.Property(e => e.Blocktime).HasColumnName("blocktime");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Configuratieid).HasColumnName("configuratieid");

                entity.Property(e => e.CostsHightariff)
                    .HasColumnName("costs_hightariff")
                    .HasColumnType("money");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumeersteonderhoud)
                    .HasColumnName("datumeersteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumgeplandonderhoud)
                    .HasColumnName("datumgeplandonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumlaatsteonderhoud)
                    .HasColumnName("datumlaatsteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diversenonderhoud)
                    .HasColumnName("diversenonderhoud")
                    .HasColumnType("ntext");

                entity.Property(e => e.Garantiedatum)
                    .HasColumnName("garantiedatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.Heeftonderhoudsplan).HasColumnName("heeftonderhoudsplan");

                entity.Property(e => e.Heeftvoorraad).HasColumnName("heeftvoorraad");

                entity.Property(e => e.Hostnaam)
                    .IsRequired()
                    .HasColumnName("hostnaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Huidigevoorraad).HasColumnName("huidigevoorraad");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Installatiedoorid).HasColumnName("installatiedoorid");

                entity.Property(e => e.Korteomschrijving)
                    .IsRequired()
                    .HasColumnName("korteomschrijving")
                    .HasMaxLength(40);

                entity.Property(e => e.Leaseaanvangsdatum)
                    .HasColumnName("leaseaanvangsdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leasecontractnummer)
                    .IsRequired()
                    .HasColumnName("leasecontractnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Leaseeinddatum)
                    .HasColumnName("leaseeinddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leaseinfo).HasColumnName("leaseinfo");

                entity.Property(e => e.Leaseperiode).HasColumnName("leaseperiode");

                entity.Property(e => e.Leaseprijs)
                    .HasColumnName("leaseprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Lokatieid).HasColumnName("lokatieid");

                entity.Property(e => e.Merkid).HasColumnName("merkid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(60);

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Objecttype)
                    .IsRequired()
                    .HasColumnName("objecttype")
                    .HasMaxLength(100);

                entity.Property(e => e.Objecttypeid).HasColumnName("objecttypeid");

                entity.Property(e => e.OnderhoudDoorid).HasColumnName("onderhoud_doorid");

                entity.Property(e => e.Onderhoudcontract).HasColumnName("onderhoudcontract");

                entity.Property(e => e.Onderhoudnummer)
                    .IsRequired()
                    .HasColumnName("onderhoudnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Onderhoudprijs)
                    .HasColumnName("onderhoudprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Onderhoudresponsietijd).HasColumnName("onderhoudresponsietijd");

                entity.Property(e => e.Onderhoudslacontractid).HasColumnName("onderhoudslacontractid");

                entity.Property(e => e.Onderhoudslagebruikt).HasColumnName("onderhoudslagebruikt");

                entity.Property(e => e.Onderhoudsoortid).HasColumnName("onderhoudsoortid");

                entity.Property(e => e.Onderhoudsplanid).HasColumnName("onderhoudsplanid");

                entity.Property(e => e.Onderhoudtot)
                    .HasColumnName("onderhoudtot")
                    .HasColumnType("datetime");

                entity.Property(e => e.Onderhoudvanaf)
                    .HasColumnName("onderhoudvanaf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Opmerking)
                    .IsRequired()
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.Ordernummer)
                    .IsRequired()
                    .HasColumnName("ordernummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Persoongroepid).HasColumnName("persoongroepid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Plaats).HasColumnName("plaats");

                entity.Property(e => e.Plaatskeuze).HasColumnName("plaatskeuze");

                entity.Property(e => e.RefAanspreekpunt)
                    .IsRequired()
                    .HasColumnName("ref_aanspreekpunt")
                    .HasMaxLength(109);

                entity.Property(e => e.RefConfiguratie)
                    .IsRequired()
                    .HasColumnName("ref_configuratie")
                    .HasMaxLength(30);

                entity.Property(e => e.RefFinbudgethouder)
                    .IsRequired()
                    .HasColumnName("ref_finbudgethouder")
                    .HasMaxLength(100);

                entity.Property(e => e.RefKleur).HasColumnName("ref_kleur");

                entity.Property(e => e.RefLeverancier)
                    .IsRequired()
                    .HasColumnName("ref_leverancier")
                    .HasMaxLength(60);

                entity.Property(e => e.RefLokatie)
                    .IsRequired()
                    .HasColumnName("ref_lokatie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefMerk)
                    .IsRequired()
                    .HasColumnName("ref_merk")
                    .HasMaxLength(100);

                entity.Property(e => e.RefOrdernumber)
                    .HasColumnName("ref_ordernumber")
                    .HasMaxLength(30);

                entity.Property(e => e.RefPersoon)
                    .IsRequired()
                    .HasColumnName("ref_persoon")
                    .HasMaxLength(109);

                entity.Property(e => e.RefPersoongroep)
                    .IsRequired()
                    .HasColumnName("ref_persoongroep")
                    .HasMaxLength(50);

                entity.Property(e => e.RefPlaats1)
                    .IsRequired()
                    .HasColumnName("ref_plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.RefSoort)
                    .IsRequired()
                    .HasColumnName("ref_soort")
                    .HasMaxLength(100);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.ReservableOfficehoursSsd).HasColumnName("reservable_officehours_ssd");

                entity.Property(e => e.Reservablewithlocation).HasColumnName("reservablewithlocation");

                entity.Property(e => e.Reserveerbaaractiveerbaar).HasColumnName("reserveerbaaractiveerbaar");

                entity.Property(e => e.Reserveerbaarkantooruren).HasColumnName("reserveerbaarkantooruren");

                entity.Property(e => e.Reserveerbaarsecure).HasColumnName("reserveerbaarsecure");

                entity.Property(e => e.Reserveerbaarsshd).HasColumnName("reserveerbaarsshd");

                entity.Property(e => e.Reservzichtbaarsshd).HasColumnName("reservzichtbaarsshd");

                entity.Property(e => e.Restwaarde)
                    .HasColumnName("restwaarde")
                    .HasColumnType("money");

                entity.Property(e => e.RmSpecification)
                    .IsRequired()
                    .HasColumnName("rm_specification")
                    .HasMaxLength(100);

                entity.Property(e => e.Serienummer)
                    .IsRequired()
                    .HasColumnName("serienummer")
                    .HasMaxLength(100);

                entity.Property(e => e.ServicewindowOption).HasColumnName("servicewindow_option");

                entity.Property(e => e.Servicewindowid).HasColumnName("servicewindowid");

                entity.Property(e => e.Sjabloonobjectid).HasColumnName("sjabloonobjectid");

                entity.Property(e => e.Soortid).HasColumnName("soortid");

                entity.Property(e => e.Specificatie)
                    .IsRequired()
                    .HasColumnName("specificatie")
                    .HasMaxLength(60);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Stdresvbehandelaarid).HasColumnName("stdresvbehandelaarid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veiligvoorraad).HasColumnName("veiligvoorraad");

                entity.Property(e => e.Verhuurborg)
                    .HasColumnName("verhuurborg")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijs)
                    .HasColumnName("verhuurprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijssysteem).HasColumnName("verhuurprijssysteem");

                entity.Property(e => e.Verhuurtekst)
                    .HasColumnName("verhuurtekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.Verkoopprijs)
                    .HasColumnName("verkoopprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verzekerdatum)
                    .HasColumnName("verzekerdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Vnc).HasColumnName("vnc");

                entity.Property(e => e.Vnchostnaam)
                    .HasColumnName("vnchostnaam")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Wburl)
                    .IsRequired()
                    .HasColumnName("wburl")
                    .HasMaxLength(1024);

                entity.Property(e => e.Webbrowser).HasColumnName("webbrowser");

                entity.HasOne(d => d.Aanspreekpunt)
                    .WithMany(p => p.InventarisAanspreekpunt)
                    .HasForeignKey(d => d.Aanspreekpuntid)
                    .HasConstraintName("fk_actiedoor_aanspreekpuntid_inventaris");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_inventaris");

                entity.HasOne(d => d.Artikelbestellink)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Artikelbestellinkid)
                    .HasConstraintName("fk_artikel_bestel_link_artikelbestellinkid_inventaris");

                entity.HasOne(d => d.Artikelstatus)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Artikelstatusid)
                    .HasConstraintName("fk_artikelstatus_artikelstatusid_inventaris");

                entity.HasOne(d => d.Attentie)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Attentieid)
                    .HasConstraintName("fk_attentie_attentieid_inventaris");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.InventarisAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_inventaris");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.InventarisAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_inventaris");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.InventarisAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_inventaris");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.InventarisAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_inventaris");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.InventarisAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_inventaris");

                entity.HasOne(d => d.Bestelaanvraag)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Bestelaanvraagid)
                    .HasConstraintName("fk_bestelaanvraag_bestelaanvraagid_inventaris");

                entity.HasOne(d => d.Bestelling)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Bestellingid)
                    .HasConstraintName("fk_bestellingen_bestellingid_inventaris");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_inventaris");

                entity.HasOne(d => d.Configuratie)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Configuratieid)
                    .HasConstraintName("fk_configuratie_configuratieid_inventaris");

                entity.HasOne(d => d.Installatiedoor)
                    .WithMany(p => p.InventarisInstallatiedoor)
                    .HasForeignKey(d => d.Installatiedoorid)
                    .HasConstraintName("fk_actiedoor_installatiedoorid_inventaris");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.InventarisLeverancier)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_inventaris");

                entity.HasOne(d => d.Lokatie)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Lokatieid)
                    .HasConstraintName("fk_locatie_lokatieid_inventaris");

                entity.HasOne(d => d.Merk)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Merkid)
                    .HasConstraintName("fk_objectmerk_merkid_inventaris");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_inventaris");

                entity.HasOne(d => d.ObjecttypeNavigation)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Objecttypeid)
                    .HasConstraintName("fk_objecttype_objecttypeid_inventaris");

                entity.HasOne(d => d.OnderhoudDoor)
                    .WithMany(p => p.InventarisOnderhoudDoor)
                    .HasForeignKey(d => d.OnderhoudDoorid)
                    .HasConstraintName("fk_leverancier_onderhoud_doorid_inventaris");

                entity.HasOne(d => d.Onderhoudslacontract)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Onderhoudslacontractid)
                    .HasConstraintName("fk_dnocontract_onderhoudslacontractid_inventaris");

                entity.HasOne(d => d.Onderhoudsoort)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Onderhoudsoortid)
                    .HasConstraintName("fk_slacontractsoort_onderhoudsoortid_inventaris");

                entity.HasOne(d => d.Onderhoudsplan)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Onderhoudsplanid)
                    .HasConstraintName("fk_onderhoudsplan_onderhoudsplanid_inventaris");

                entity.HasOne(d => d.Persoongroep)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Persoongroepid)
                    .HasConstraintName("fk_persoongroep_persoongroepid_inventaris");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_inventaris");

                entity.HasOne(d => d.Servicewindow)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Servicewindowid)
                    .HasConstraintName("fk_servicewindow_servicewindowid_inventaris");

                entity.HasOne(d => d.Sjabloonobject)
                    .WithMany(p => p.InverseSjabloonobject)
                    .HasForeignKey(d => d.Sjabloonobjectid)
                    .HasConstraintName("fk_inventaris_sjabloonobjectid_inventaris");

                entity.HasOne(d => d.Soort)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Soortid)
                    .HasConstraintName("fk_objectsoort_soortid_inventaris");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_objectstatus_statusid_inventaris");

                entity.HasOne(d => d.Stdresvbehandelaar)
                    .WithMany(p => p.InventarisStdresvbehandelaar)
                    .HasForeignKey(d => d.Stdresvbehandelaarid)
                    .HasConstraintName("fk_actiedoor_stdresvbehandelaarid_inventaris");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.InventarisUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_inventaris");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.InventarisUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_inventaris");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.Inventaris)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_inventaris");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.InventarisVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_inventaris");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.InventarisVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_inventaris");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.InventarisVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_inventaris");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.InventarisVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_inventaris");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.InventarisVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_inventaris");
            });

            modelBuilder.Entity<InventarisDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("inventaris__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_inventaris__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_inventaris__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_inventaris__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_inventaris__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_inventaris__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_inventaris__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.InventarisDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_inventaris_kaartid_inventaris__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.InventarisDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_inventaris__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.InventarisDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_inventaris__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.InventarisDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_inventaris__documenten");
            });

            modelBuilder.Entity<InventarisEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("inventaris__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_inventaris__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_inventaris__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_inventaris__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.InventarisEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_inventaris__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.InventarisEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_inventaris_kaartid_inventaris__emailberichten");
            });

            modelBuilder.Entity<InventarisLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("inventaris__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_inventaris__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_inventaris__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_inventaris__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_inventaris__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_inventaris__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_inventaris__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.InventarisLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_inventaris_kaartid_inventaris__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.InventarisLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_inventaris__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.InventarisLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_inventaris__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.InventarisLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_inventaris__logboek");
            });

            modelBuilder.Entity<InventarisOptionalgrid>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("inventaris__optionalgrid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_inventaris__optionalgrid_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_inventaris__optionalgrid_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_inventaris__optionalgrid_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_inventaris__optionalgrid_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_inventaris__optionalgrid_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_inventaris__optionalgrid_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_inventaris__optionalgrid_parentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_inventaris__optionalgrid_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_inventaris__optionalgrid_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_inventaris__optionalgrid_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_inventaris__optionalgrid_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_inventaris__optionalgrid_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_inventaris__optionalgrid_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_inventaris__optionalgrid_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.InventarisOptionalgridAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_inventaris__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.InventarisOptionalgridAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_inventaris__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.InventarisOptionalgridAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_inventaris__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.InventarisOptionalgridAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_inventaris__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.InventarisOptionalgridAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_inventaris__optionalgrid");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.InventarisOptionalgrid)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_inventaris_parentid_inventaris__optionalgrid");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.InventarisOptionalgridUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_inventaris__optionalgrid");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.InventarisOptionalgridUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_inventaris__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.InventarisOptionalgridVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_inventaris__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.InventarisOptionalgridVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_inventaris__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.InventarisOptionalgridVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_inventaris__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.InventarisOptionalgridVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_inventaris__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.InventarisOptionalgridVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_inventaris__optionalgrid");
            });

            modelBuilder.Entity<KennisSysteem>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("kennis_systeem");

                entity.HasIndex(e => e.Actieftot)
                    .HasName("idx_kennis_systeem_actieftot");

                entity.HasIndex(e => e.Actiefvanaf)
                    .HasName("idx_kennis_systeem_actiefvanaf");

                entity.HasIndex(e => e.Beheerderid)
                    .HasName("idx_kennis_systeem_beheerderid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_kennis_systeem_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_kennis_systeem_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_kennis_systeem_importid");

                entity.HasIndex(e => e.Nieuwsdatumtot)
                    .HasName("idx_kennis_systeem_nieuwsdatumtot");

                entity.HasIndex(e => e.Nieuwsdatumvanaf)
                    .HasName("idx_kennis_systeem_nieuwsdatumvanaf");

                entity.HasIndex(e => e.Operatorconditieid)
                    .HasName("idx_kennis_systeem_operatorconditieid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_kennis_systeem_parentid");

                entity.HasIndex(e => e.Publicconditieid)
                    .HasName("idx_kennis_systeem_publicconditieid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_kennis_systeem_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_kennis_systeem_statusid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_kennis_systeem_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_kennis_systeem_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actiefkeuze).HasColumnName("actiefkeuze");

                entity.Property(e => e.Actieftot)
                    .HasColumnName("actieftot")
                    .HasColumnType("datetime");

                entity.Property(e => e.Actiefvanaf)
                    .HasColumnName("actiefvanaf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Beheerderid).HasColumnName("beheerderid");

                entity.Property(e => e.Berichttype).HasColumnName("berichttype");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikvestiginglink).HasColumnName("gebruikvestiginglink");

                entity.Property(e => e.Gebruikvestiginglinkoperator).HasColumnName("gebruikvestiginglinkoperator");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Nieuwsdatumtot)
                    .HasColumnName("nieuwsdatumtot")
                    .HasColumnType("datetime");

                entity.Property(e => e.Nieuwsdatumvanaf)
                    .HasColumnName("nieuwsdatumvanaf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Nieuwsitem).HasColumnName("nieuwsitem");

                entity.Property(e => e.Number)
                    .IsRequired()
                    .HasColumnName("number")
                    .HasMaxLength(255);

                entity.Property(e => e.Operatorconditieid).HasColumnName("operatorconditieid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Publicconditieid).HasColumnName("publicconditieid");

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.Realm).HasColumnName("realm");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Beheerder)
                    .WithMany(p => p.KennisSysteem)
                    .HasForeignKey(d => d.Beheerderid)
                    .HasConstraintName("fk_actiedoor_beheerderid_kennis_systeem");

                entity.HasOne(d => d.Operatorconditie)
                    .WithMany(p => p.InverseOperatorconditie)
                    .HasForeignKey(d => d.Operatorconditieid)
                    .HasConstraintName("fk_kennis_systeem_operatorconditieid_kennis_systeem");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.InverseParent)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_kennis_systeem_parentid_kennis_systeem");

                entity.HasOne(d => d.Publicconditie)
                    .WithMany(p => p.InversePublicconditie)
                    .HasForeignKey(d => d.Publicconditieid)
                    .HasConstraintName("fk_kennis_systeem_publicconditieid_kennis_systeem");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.KennisSysteem)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_kennissysteem_status_statusid_kennis_systeem");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.KennisSysteemUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_kennis_systeem");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.KennisSysteemUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_kennis_systeem");
            });

            modelBuilder.Entity<KennisSysteemDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("kennis_systeem__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_kennis_systeem__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_kennis_systeem__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_kennis_systeem__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_kennis_systeem__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_kennis_systeem__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_kennis_systeem__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.KennisSysteemDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_kennis_systeem_kaartid_kennis_systeem__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.KennisSysteemDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_kennis_systeem__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.KennisSysteemDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_kennis_systeem__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.KennisSysteemDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_kennis_systeem__documenten");
            });

            modelBuilder.Entity<Kennissysteemklik>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("kennissysteemklik");

                entity.HasIndex(e => e.Kennisid)
                    .HasName("idx_kennissysteemklik_kennisid");

                entity.HasIndex(e => e.Tijdstip)
                    .HasName("idx_kennissysteemklik_tijdstip");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Ispublic).HasColumnName("ispublic");

                entity.Property(e => e.Kennisid).HasColumnName("kennisid");

                entity.Property(e => e.Tijdstip)
                    .HasColumnName("tijdstip")
                    .HasColumnType("datetime");

                entity.HasOne(d => d.Kennis)
                    .WithMany(p => p.Kennissysteemklik)
                    .HasForeignKey(d => d.Kennisid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_kennis_systeem_kennisid_kennissysteemklik");
            });

            modelBuilder.Entity<Kennissysteemreactie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("kennissysteemreactie");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_kennissysteemreactie_archief");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_kennissysteemreactie_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_kennissysteemreactie_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_kennissysteemreactie_importid");

                entity.HasIndex(e => e.Kennisid)
                    .HasName("idx_kennissysteemreactie_kennisid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_kennissysteemreactie_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_kennissysteemreactie_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_kennissysteemreactie_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Kennisid).HasColumnName("kennisid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Questionanswered).HasColumnName("questionanswered");

                entity.Property(e => e.Tekst)
                    .HasColumnName("tekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kennis)
                    .WithMany(p => p.Kennissysteemreactie)
                    .HasForeignKey(d => d.Kennisid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_kennis_systeem_kennisid_kennissysteemreactie");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Kennissysteemreactie)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_kennissysteemreactie");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.KennissysteemreactieUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_kennissysteemreactie");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.KennissysteemreactieUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_kennissysteemreactie");
            });

            modelBuilder.Entity<KennissysteemStatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("kennissysteem_status");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_kennissysteem_status_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_kennissysteem_status_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_kennissysteem_status_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Kennissysteemvertalingen>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("kennissysteemvertalingen");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_kennissysteemvertalingen_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_kennissysteemvertalingen_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_kennissysteemvertalingen_importid");

                entity.HasIndex(e => e.Kennisid)
                    .HasName("idx_kennissysteemvertalingen_kennisid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_kennissysteemvertalingen_naam");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_kennissysteemvertalingen_status");

                entity.HasIndex(e => e.Taalid)
                    .HasName("idx_kennissysteemvertalingen_taalid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_kennissysteemvertalingen_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_kennissysteemvertalingen_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.AantekeningenRtf)
                    .HasColumnName("aantekeningen_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Kennisid).HasColumnName("kennisid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(80);

                entity.Property(e => e.Onderwerp)
                    .HasColumnName("onderwerp")
                    .HasColumnType("ntext");

                entity.Property(e => e.OnderwerpRtf)
                    .HasColumnName("onderwerp_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Taalid).HasColumnName("taalid");

                entity.Property(e => e.Toelichting)
                    .HasColumnName("toelichting")
                    .HasColumnType("ntext");

                entity.Property(e => e.ToelichtingRtf)
                    .HasColumnName("toelichting_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Trefwoorden)
                    .HasColumnName("trefwoorden")
                    .HasColumnType("ntext");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kennis)
                    .WithMany(p => p.Kennissysteemvertalingen)
                    .HasForeignKey(d => d.Kennisid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_kennis_systeem_kennisid_kennissysteemvertalingen");

                entity.HasOne(d => d.Taal)
                    .WithMany(p => p.Kennissysteemvertalingen)
                    .HasForeignKey(d => d.Taalid)
                    .HasConstraintName("fk_kennistaal_taalid_kennissysteemvertalingen");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.KennissysteemvertalingenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_kennissysteemvertalingen");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.KennissysteemvertalingenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_kennissysteemvertalingen");
            });

            modelBuilder.Entity<KennissysteemVestigingLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("kennissysteem_vestiging_link");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_kennissysteem_vestiging_link_importid");

                entity.HasIndex(e => e.Kennisitemid)
                    .HasName("idx_kennissysteem_vestiging_link_kennisitemid");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_kennissysteem_vestiging_link_vestigingid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Kennisitemid).HasColumnName("kennisitemid");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.HasOne(d => d.Kennisitem)
                    .WithMany(p => p.KennissysteemVestigingLink)
                    .HasForeignKey(d => d.Kennisitemid)
                    .HasConstraintName("fk_kennis_systeem_kennisitemid_kennissysteem_vestiging_link");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.KennissysteemVestigingLink)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_kennissysteem_vestiging_link");
            });

            modelBuilder.Entity<Kennistaal>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("kennistaal");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_kennistaal_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_kennistaal_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_kennistaal_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.Taalcode)
                    .IsRequired()
                    .HasColumnName("taalcode")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<KennisVestigingOperCond>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("kennis_vestiging_oper_cond");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_kennis_vestiging_oper_cond_importid");

                entity.HasIndex(e => e.Kennisid)
                    .HasName("idx_kennis_vestiging_oper_cond_kennisid");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_kennis_vestiging_oper_cond_vestigingid");

                entity.HasIndex(e => new { e.Kennisid, e.Vestigingid })
                    .HasName("uidx_kennis_vestiging_oper_cond_kennisid_vestigingid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Kennisid).HasColumnName("kennisid");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.HasOne(d => d.Kennis)
                    .WithMany(p => p.KennisVestigingOperCond)
                    .HasForeignKey(d => d.Kennisid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_kennis_systeem_kennisid_kennis_vestiging_oper_cond");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.KennisVestigingOperCond)
                    .HasForeignKey(d => d.Vestigingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_vestiging_vestigingid_kennis_vestiging_oper_cond");
            });

            modelBuilder.Entity<KennisVestigingPublicCond>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("kennis_vestiging_public_cond");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_kennis_vestiging_public_cond_importid");

                entity.HasIndex(e => e.Kennisid)
                    .HasName("idx_kennis_vestiging_public_cond_kennisid");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_kennis_vestiging_public_cond_vestigingid");

                entity.HasIndex(e => new { e.Kennisid, e.Vestigingid })
                    .HasName("uidx_kennis_vestiging_public_cond_kennisid_vestigingid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Kennisid).HasColumnName("kennisid");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.HasOne(d => d.Kennis)
                    .WithMany(p => p.KennisVestigingPublicCond)
                    .HasForeignKey(d => d.Kennisid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_kennis_systeem_kennisid_kennis_vestiging_public_cond");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.KennisVestigingPublicCond)
                    .HasForeignKey(d => d.Vestigingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_vestiging_vestigingid_kennis_vestiging_public_cond");
            });

            modelBuilder.Entity<KostendeclaratieArtikel>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("kostendeclaratie_artikel");

                entity.HasIndex(e => e.Artikelmutatieid)
                    .HasName("idx_kostendeclaratie_artikel_artikelmutatieid");

                entity.HasIndex(e => e.Datum)
                    .HasName("idx_kostendeclaratie_artikel_datum");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_kostendeclaratie_artikel_importid");

                entity.HasIndex(e => e.Incidentid)
                    .HasName("idx_kostendeclaratie_artikel_incidentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_kostendeclaratie_artikel_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_kostendeclaratie_artikel_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Artikelmutatieid).HasColumnName("artikelmutatieid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datum)
                    .HasColumnName("datum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Incidentid).HasColumnName("incidentid");

                entity.Property(e => e.Prijs)
                    .HasColumnName("prijs")
                    .HasColumnType("money");

                entity.Property(e => e.Totaalprijs)
                    .HasColumnName("totaalprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Artikelmutatie)
                    .WithMany(p => p.KostendeclaratieArtikel)
                    .HasForeignKey(d => d.Artikelmutatieid)
                    .HasConstraintName("fk_artikel_mutatie_artikelmutatieid_kostendeclaratie_artikel");

                entity.HasOne(d => d.Incident)
                    .WithMany(p => p.KostendeclaratieArtikel)
                    .HasForeignKey(d => d.Incidentid)
                    .HasConstraintName("fk_incident_incidentid_kostendeclaratie_artikel");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.KostendeclaratieArtikelUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_kostendeclaratie_artikel");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.KostendeclaratieArtikelUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_kostendeclaratie_artikel");
            });

            modelBuilder.Entity<KostendeclaratieObject>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("kostendeclaratie_object");

                entity.HasIndex(e => e.Datum)
                    .HasName("idx_kostendeclaratie_object_datum");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_kostendeclaratie_object_importid");

                entity.HasIndex(e => e.Incidentid)
                    .HasName("idx_kostendeclaratie_object_incidentid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_kostendeclaratie_object_objectid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_kostendeclaratie_object_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_kostendeclaratie_object_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datum)
                    .HasColumnName("datum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Incidentid).HasColumnName("incidentid");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Prijs)
                    .HasColumnName("prijs")
                    .HasColumnType("money");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Incident)
                    .WithMany(p => p.KostendeclaratieObject)
                    .HasForeignKey(d => d.Incidentid)
                    .HasConstraintName("fk_incident_incidentid_kostendeclaratie_object");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.KostendeclaratieObject)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_kostendeclaratie_object");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.KostendeclaratieObjectUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_kostendeclaratie_object");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.KostendeclaratieObjectUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_kostendeclaratie_object");
            });

            modelBuilder.Entity<Land>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("land");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_land_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_land_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_land_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Guicode)
                    .HasColumnName("guicode")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Ldapsettings>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ldapsettings");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_ldapsettings_importid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anonymous).HasColumnName("anonymous");

                entity.Property(e => e.Authenticationmethod).HasColumnName("authenticationmethod");

                entity.Property(e => e.Credentials)
                    .HasColumnName("credentials")
                    .HasMaxLength(100);

                entity.Property(e => e.Dnmask)
                    .HasColumnName("dnmask")
                    .HasColumnType("ntext");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Ldapfilter)
                    .HasColumnName("ldapfilter")
                    .HasColumnType("ntext");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(30);

                entity.Property(e => e.Port).HasColumnName("port");

                entity.Property(e => e.Principal)
                    .HasColumnName("principal")
                    .HasMaxLength(100);

                entity.Property(e => e.Root)
                    .HasColumnName("root")
                    .HasMaxLength(100);

                entity.Property(e => e.Server)
                    .HasColumnName("server")
                    .HasMaxLength(100);

                entity.Property(e => e.Ssl).HasColumnName("ssl");

                entity.Property(e => e.Sslport).HasColumnName("sslport");

                entity.Property(e => e.Useforpublic).HasColumnName("useforpublic");

                entity.Property(e => e.Useforsecure).HasColumnName("useforsecure");
            });

            modelBuilder.Entity<Leverancier>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("leverancier");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_leverancier_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_leverancier_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_leverancier_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_leverancier_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_leverancier_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_leverancier_attvrijeopzoek5");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_leverancier_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_leverancier_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_leverancier_importid");

                entity.HasIndex(e => e.Landid1)
                    .HasName("idx_leverancier_landid1");

                entity.HasIndex(e => e.Landid2)
                    .HasName("idx_leverancier_landid2");

                entity.HasIndex(e => e.Maincontactid)
                    .HasName("idx_leverancier_maincontactid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_leverancier_naam");

                entity.HasIndex(e => e.Standaardaflevervestigingid)
                    .HasName("idx_leverancier_standaardaflevervestigingid");

                entity.HasIndex(e => e.Standaardverzendkostenbtwsrtid)
                    .HasName("idx_leverancier_standaardverzendkostenbtwsrtid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_leverancier_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_leverancier_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_leverancier_uidwijzig");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_leverancier_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_leverancier_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_leverancier_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_leverancier_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_leverancier_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_leverancier_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_leverancier_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Adresmemo1)
                    .HasColumnName("adresmemo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Adresmemo2)
                    .HasColumnName("adresmemo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelcode)
                    .IsRequired()
                    .HasColumnName("bestelcode")
                    .HasMaxLength(12);

                entity.Property(e => e.Bestellingen).HasColumnName("bestellingen");

                entity.Property(e => e.Besteltekst)
                    .HasColumnName("besteltekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelvolgnr).HasColumnName("bestelvolgnr");

                entity.Property(e => e.County1)
                    .IsRequired()
                    .HasColumnName("county1")
                    .HasMaxLength(50);

                entity.Property(e => e.County2)
                    .IsRequired()
                    .HasColumnName("county2")
                    .HasMaxLength(50);

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Debiteurennummer)
                    .IsRequired()
                    .HasColumnName("debiteurennummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Diversen)
                    .HasColumnName("diversen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasColumnName("email")
                    .HasMaxLength(100);

                entity.Property(e => e.Fax)
                    .IsRequired()
                    .HasColumnName("fax")
                    .HasMaxLength(25);

                entity.Property(e => e.Firstlinesupplier).HasColumnName("firstlinesupplier");

                entity.Property(e => e.Huisnummer1)
                    .IsRequired()
                    .HasColumnName("huisnummer1")
                    .HasMaxLength(50);

                entity.Property(e => e.Huisnummer2)
                    .IsRequired()
                    .HasColumnName("huisnummer2")
                    .HasMaxLength(50);

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Landid1).HasColumnName("landid1");

                entity.Property(e => e.Landid2).HasColumnName("landid2");

                entity.Property(e => e.Maincontactid).HasColumnName("maincontactid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(60);

                entity.Property(e => e.Omactivitysupplier).HasColumnName("omactivitysupplier");

                entity.Property(e => e.Plaats1)
                    .IsRequired()
                    .HasColumnName("plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.Plaats2)
                    .IsRequired()
                    .HasColumnName("plaats2")
                    .HasMaxLength(30);

                entity.Property(e => e.Postcode1)
                    .IsRequired()
                    .HasColumnName("postcode1")
                    .HasMaxLength(15);

                entity.Property(e => e.Postcode2)
                    .IsRequired()
                    .HasColumnName("postcode2")
                    .HasMaxLength(15);

                entity.Property(e => e.Secondlinesupplier).HasColumnName("secondlinesupplier");

                entity.Property(e => e.Specificatie)
                    .IsRequired()
                    .HasColumnName("specificatie")
                    .HasMaxLength(70);

                entity.Property(e => e.Standaardaflevervestigingid).HasColumnName("standaardaflevervestigingid");

                entity.Property(e => e.Standaardkorting)
                    .HasColumnName("standaardkorting")
                    .HasColumnType("money");

                entity.Property(e => e.Standaardkortingprocent).HasColumnName("standaardkortingprocent");

                entity.Property(e => e.Standaardkortingsoort).HasColumnName("standaardkortingsoort");

                entity.Property(e => e.Standaardverzendkosten)
                    .HasColumnName("standaardverzendkosten")
                    .HasColumnType("money");

                entity.Property(e => e.Standaardverzendkostenbtwsrtid).HasColumnName("standaardverzendkostenbtwsrtid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Straat1)
                    .IsRequired()
                    .HasColumnName("straat1")
                    .HasMaxLength(50);

                entity.Property(e => e.Straat2)
                    .IsRequired()
                    .HasColumnName("straat2")
                    .HasMaxLength(50);

                entity.Property(e => e.Telefoon)
                    .IsRequired()
                    .HasColumnName("telefoon")
                    .HasMaxLength(25);

                entity.Property(e => e.Telefoonbbs)
                    .IsRequired()
                    .HasColumnName("telefoonbbs")
                    .HasMaxLength(25);

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Website)
                    .IsRequired()
                    .HasColumnName("website")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Leverancier)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_leverancier");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.LeverancierAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_leverancier");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.LeverancierAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_leverancier");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.LeverancierAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_leverancier");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.LeverancierAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_leverancier");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.LeverancierAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_leverancier");

                entity.HasOne(d => d.Landid1Navigation)
                    .WithMany(p => p.LeverancierLandid1Navigation)
                    .HasForeignKey(d => d.Landid1)
                    .HasConstraintName("fk_land_landid1_leverancier");

                entity.HasOne(d => d.Landid2Navigation)
                    .WithMany(p => p.LeverancierLandid2Navigation)
                    .HasForeignKey(d => d.Landid2)
                    .HasConstraintName("fk_land_landid2_leverancier");

                entity.HasOne(d => d.Maincontact)
                    .WithMany(p => p.Leverancier)
                    .HasForeignKey(d => d.Maincontactid)
                    .HasConstraintName("fk_leveranciercontactpersoon_maincontactid_leverancier");

                entity.HasOne(d => d.Standaardaflevervestiging)
                    .WithMany(p => p.Leverancier)
                    .HasForeignKey(d => d.Standaardaflevervestigingid)
                    .HasConstraintName("fk_vestiging_standaardaflevervestigingid_leverancier");

                entity.HasOne(d => d.Standaardverzendkostenbtwsrt)
                    .WithMany(p => p.Leverancier)
                    .HasForeignKey(d => d.Standaardverzendkostenbtwsrtid)
                    .HasConstraintName("fk_btw_standaardverzendkostenbtwsrtid_leverancier");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LeverancierUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_leverancier");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LeverancierUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_leverancier");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.LeverancierVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_leverancier");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.LeverancierVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_leverancier");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.LeverancierVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_leverancier");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.LeverancierVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_leverancier");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.LeverancierVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_leverancier");
            });

            modelBuilder.Entity<Leveranciercontactpersoon>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("leveranciercontactpersoon");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_leveranciercontactpersoon_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_leveranciercontactpersoon_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_leveranciercontactpersoon_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_leveranciercontactpersoon_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_leveranciercontactpersoon_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_leveranciercontactpersoon_attvrijeopzoek5");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_leveranciercontactpersoon_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_leveranciercontactpersoon_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_leveranciercontactpersoon_importid");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_leveranciercontactpersoon_leverancierid");

                entity.HasIndex(e => e.RefAanhefformeel)
                    .HasName("idx_leveranciercontactpersoon_ref_aanhefformeel");

                entity.HasIndex(e => e.RefAanhefinformeel)
                    .HasName("idx_leveranciercontactpersoon_ref_aanhefinformeel");

                entity.HasIndex(e => e.RefDynanaam)
                    .HasName("idx_leveranciercontactpersoon_ref_dynanaam");

                entity.HasIndex(e => e.RefLeverancier)
                    .HasName("idx_leveranciercontactpersoon_ref_leverancier");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_leveranciercontactpersoon_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_leveranciercontactpersoon_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_leveranciercontactpersoon_uidwijzig");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_leveranciercontactpersoon_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_leveranciercontactpersoon_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_leveranciercontactpersoon_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_leveranciercontactpersoon_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_leveranciercontactpersoon_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_leveranciercontactpersoon_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_leveranciercontactpersoon_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Achternaam)
                    .IsRequired()
                    .HasColumnName("achternaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diversen)
                    .HasColumnName("diversen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasColumnName("email")
                    .HasMaxLength(100);

                entity.Property(e => e.Fax)
                    .IsRequired()
                    .HasColumnName("fax")
                    .HasMaxLength(25);

                entity.Property(e => e.Functie)
                    .IsRequired()
                    .HasColumnName("functie")
                    .HasMaxLength(100);

                entity.Property(e => e.Geslacht).HasColumnName("geslacht");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Mobiel)
                    .IsRequired()
                    .HasColumnName("mobiel")
                    .HasMaxLength(25);

                entity.Property(e => e.Personeeli)
                    .IsRequired()
                    .HasColumnName("personeeli")
                    .HasMaxLength(50);

                entity.Property(e => e.RefAanhefformeel)
                    .IsRequired()
                    .HasColumnName("ref_aanhefformeel")
                    .HasMaxLength(100);

                entity.Property(e => e.RefAanhefinformeel)
                    .IsRequired()
                    .HasColumnName("ref_aanhefinformeel")
                    .HasMaxLength(100);

                entity.Property(e => e.RefDynanaam)
                    .IsRequired()
                    .HasColumnName("ref_dynanaam")
                    .HasMaxLength(109);

                entity.Property(e => e.RefLeverancier)
                    .IsRequired()
                    .HasColumnName("ref_leverancier")
                    .HasMaxLength(60);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Telefoon)
                    .IsRequired()
                    .HasColumnName("telefoon")
                    .HasMaxLength(25);

                entity.Property(e => e.Titel)
                    .IsRequired()
                    .HasColumnName("titel")
                    .HasMaxLength(10);

                entity.Property(e => e.Tussenvoegsel)
                    .IsRequired()
                    .HasColumnName("tussenvoegsel")
                    .HasMaxLength(10);

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Voorletters)
                    .IsRequired()
                    .HasColumnName("voorletters")
                    .HasMaxLength(10);

                entity.Property(e => e.Voornaam)
                    .IsRequired()
                    .HasColumnName("voornaam")
                    .HasMaxLength(30);

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Leveranciercontactpersoon)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_leveranciercontactpersoon");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.LeveranciercontactpersoonAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_leveranciercontactpersoon");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.LeveranciercontactpersoonAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_leveranciercontactpersoon");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.LeveranciercontactpersoonAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_leveranciercontactpersoon");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.LeveranciercontactpersoonAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_leveranciercontactpersoon");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.LeveranciercontactpersoonAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_leveranciercontactpersoon");

                entity.HasOne(d => d.LeverancierNavigation)
                    .WithMany(p => p.Leveranciercontactpersoon)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_leveranciercontactpersoon");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LeveranciercontactpersoonUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_leveranciercontactpersoon");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LeveranciercontactpersoonUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_leveranciercontactpersoon");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.LeveranciercontactpersoonVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_leveranciercontactpersoon");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.LeveranciercontactpersoonVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_leveranciercontactpersoon");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.LeveranciercontactpersoonVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_leveranciercontactpersoon");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.LeveranciercontactpersoonVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_leveranciercontactpersoon");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.LeveranciercontactpersoonVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_leveranciercontactpersoon");
            });

            modelBuilder.Entity<LeveranciercontactpersoonDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("leveranciercontactpersoon__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_leveranciercontactpersoon__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_leveranciercontactpersoon__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_leveranciercontactpersoon__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_leveranciercontactpersoon__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_leveranciercontactpersoon__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_leveranciercontactpersoon__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LeveranciercontactpersoonDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_leveranciercontactpersoon_kaartid_leveranciercontactpersoon__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.LeveranciercontactpersoonDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_leveranciercontactpersoon__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LeveranciercontactpersoonDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_leveranciercontactpersoon__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LeveranciercontactpersoonDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_leveranciercontactpersoon__documenten");
            });

            modelBuilder.Entity<LeveranciercontactpersoonEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("leveranciercontactpersoon__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_leveranciercontactpersoon__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_leveranciercontactpersoon__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_leveranciercontactpersoon__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.LeveranciercontactpersoonEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_leveranciercontactpersoon__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LeveranciercontactpersoonEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_leveranciercontactpersoon_kaartid_leveranciercontactpersoon__emailberichten");
            });

            modelBuilder.Entity<LeveranciercontactpersoonLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("leveranciercontactpersoon__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_leveranciercontactpersoon__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_leveranciercontactpersoon__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_leveranciercontactpersoon__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_leveranciercontactpersoon__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_leveranciercontactpersoon__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_leveranciercontactpersoon__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LeveranciercontactpersoonLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_leveranciercontactpersoon_kaartid_leveranciercontactpersoon__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.LeveranciercontactpersoonLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_leveranciercontactpersoon__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LeveranciercontactpersoonLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_leveranciercontactpersoon__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LeveranciercontactpersoonLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_leveranciercontactpersoon__logboek");
            });

            modelBuilder.Entity<LeverancierDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("leverancier__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_leverancier__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_leverancier__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_leverancier__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_leverancier__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_leverancier__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_leverancier__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LeverancierDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_leverancier_kaartid_leverancier__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.LeverancierDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_leverancier__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LeverancierDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_leverancier__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LeverancierDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_leverancier__documenten");
            });

            modelBuilder.Entity<LeverancierEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("leverancier__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_leverancier__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_leverancier__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_leverancier__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.LeverancierEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_leverancier__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LeverancierEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_leverancier_kaartid_leverancier__emailberichten");
            });

            modelBuilder.Entity<LeverancierLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("leverancier__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_leverancier__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_leverancier__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_leverancier__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_leverancier__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_leverancier__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_leverancier__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LeverancierLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_leverancier_kaartid_leverancier__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.LeverancierLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_leverancier__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LeverancierLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_leverancier__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LeverancierLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_leverancier__logboek");
            });

            modelBuilder.Entity<LeverancierMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("leverancier__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_leverancier__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_leverancier__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_leverancier__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_leverancier__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_leverancier__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_leverancier__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_leverancier__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_leverancier__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_leverancier__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.LeverancierMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_leverancier__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.LeverancierMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_leverancier_parentid_leverancier__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.LeverancierMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_leverancier__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LeverancierMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_leverancier__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LeverancierMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_leverancier__memo_history");
            });

            modelBuilder.Entity<Licentie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("licentie");

                entity.HasIndex(e => e.Aanschafdatum)
                    .HasName("idx_licentie_aanschafdatum");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_licentie_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_licentie_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_licentie_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_licentie_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_licentie_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_licentie_attvrijeopzoek5");

                entity.HasIndex(e => e.Bestellingid)
                    .HasName("idx_licentie_bestellingid");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_licentie_budgethouderid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_licentie_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_licentie_datwijzig");

                entity.HasIndex(e => e.Einddatum)
                    .HasName("idx_licentie_einddatum");

                entity.HasIndex(e => e.Garantiedatum)
                    .HasName("idx_licentie_garantiedatum");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_licentie_importid");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_licentie_leverancierid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_licentie_naam");

                entity.HasIndex(e => e.OnderhoudDoorid)
                    .HasName("idx_licentie_onderhoud_doorid");

                entity.HasIndex(e => e.Onderhoudsoortid)
                    .HasName("idx_licentie_onderhoudsoortid");

                entity.HasIndex(e => e.Onderhoudtot)
                    .HasName("idx_licentie_onderhoudtot");

                entity.HasIndex(e => e.Onderhoudvanaf)
                    .HasName("idx_licentie_onderhoudvanaf");

                entity.HasIndex(e => e.RefLeverancier)
                    .HasName("idx_licentie_ref_leverancier");

                entity.HasIndex(e => e.RefSoortlicentie)
                    .HasName("idx_licentie_ref_soortlicentie");

                entity.HasIndex(e => e.Softwareid)
                    .HasName("idx_licentie_softwareid");

                entity.HasIndex(e => e.Soortlicentieid)
                    .HasName("idx_licentie_soortlicentieid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_licentie_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_licentie_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_licentie_uidwijzig");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_licentie_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_licentie_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_licentie_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_licentie_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_licentie_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_licentie_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_licentie_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aankoopbedrag)
                    .HasColumnName("aankoopbedrag")
                    .HasColumnType("money");

                entity.Property(e => e.Aanschafdatum)
                    .HasColumnName("aanschafdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Aantal).HasColumnName("aantal");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afschrijftermijn).HasColumnName("afschrijftermijn");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestellingid).HasColumnName("bestellingid");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Einddatum)
                    .HasColumnName("einddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Garantiedatum)
                    .HasColumnName("garantiedatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(200);

                entity.Property(e => e.OnderhoudDoorid).HasColumnName("onderhoud_doorid");

                entity.Property(e => e.Onderhoudcontract).HasColumnName("onderhoudcontract");

                entity.Property(e => e.Onderhoudnummer)
                    .IsRequired()
                    .HasColumnName("onderhoudnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Onderhoudprijs)
                    .HasColumnName("onderhoudprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Onderhoudresponsietijd).HasColumnName("onderhoudresponsietijd");

                entity.Property(e => e.Onderhoudsoortid).HasColumnName("onderhoudsoortid");

                entity.Property(e => e.Onderhoudtot)
                    .HasColumnName("onderhoudtot")
                    .HasColumnType("datetime");

                entity.Property(e => e.Onderhoudvanaf)
                    .HasColumnName("onderhoudvanaf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Prijs)
                    .HasColumnName("prijs")
                    .HasColumnType("money");

                entity.Property(e => e.RefLeverancier)
                    .IsRequired()
                    .HasColumnName("ref_leverancier")
                    .HasMaxLength(60);

                entity.Property(e => e.RefSoortlicentie)
                    .IsRequired()
                    .HasColumnName("ref_soortlicentie")
                    .HasMaxLength(100);

                entity.Property(e => e.Restwaarde)
                    .HasColumnName("restwaarde")
                    .HasColumnType("money");

                entity.Property(e => e.Softwareid).HasColumnName("softwareid");

                entity.Property(e => e.Soortlicentieid).HasColumnName("soortlicentieid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Licentie)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_licentie");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.LicentieAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_licentie");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.LicentieAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_licentie");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.LicentieAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_licentie");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.LicentieAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_licentie");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.LicentieAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_licentie");

                entity.HasOne(d => d.Bestelling)
                    .WithMany(p => p.Licentie)
                    .HasForeignKey(d => d.Bestellingid)
                    .HasConstraintName("fk_bestellingen_bestellingid_licentie");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Licentie)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_licentie");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.LicentieLeverancier)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_licentie");

                entity.HasOne(d => d.OnderhoudDoor)
                    .WithMany(p => p.LicentieOnderhoudDoor)
                    .HasForeignKey(d => d.OnderhoudDoorid)
                    .HasConstraintName("fk_leverancier_onderhoud_doorid_licentie");

                entity.HasOne(d => d.Onderhoudsoort)
                    .WithMany(p => p.Licentie)
                    .HasForeignKey(d => d.Onderhoudsoortid)
                    .HasConstraintName("fk_slacontractsoort_onderhoudsoortid_licentie");

                entity.HasOne(d => d.Software)
                    .WithMany(p => p.Licentie)
                    .HasForeignKey(d => d.Softwareid)
                    .HasConstraintName("fk_software_softwareid_licentie");

                entity.HasOne(d => d.Soortlicentie)
                    .WithMany(p => p.Licentie)
                    .HasForeignKey(d => d.Soortlicentieid)
                    .HasConstraintName("fk_licentiesoort_soortlicentieid_licentie");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LicentieUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_licentie");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LicentieUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_licentie");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.LicentieVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_licentie");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.LicentieVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_licentie");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.LicentieVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_licentie");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.LicentieVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_licentie");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.LicentieVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_licentie");
            });

            modelBuilder.Entity<LicentieDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("licentie__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_licentie__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_licentie__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_licentie__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_licentie__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_licentie__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_licentie__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LicentieDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_licentie_kaartid_licentie__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.LicentieDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_licentie__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LicentieDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_licentie__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LicentieDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_licentie__documenten");
            });

            modelBuilder.Entity<LicentieEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("licentie__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_licentie__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_licentie__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_licentie__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.LicentieEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_licentie__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LicentieEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_licentie_kaartid_licentie__emailberichten");
            });

            modelBuilder.Entity<LicentieLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("licentie__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_licentie__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_licentie__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_licentie__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_licentie__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_licentie__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_licentie__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LicentieLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_licentie_kaartid_licentie__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.LicentieLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_licentie__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LicentieLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_licentie__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LicentieLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_licentie__logboek");
            });

            modelBuilder.Entity<Licentiesoort>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("licentiesoort");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_licentiesoort_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_licentiesoort_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_licentiesoort_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Lmpactivity>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpactivity");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_lmpactivity_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_lmpactivity_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_lmpactivity_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_lmpactivity_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_lmpactivity_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_lmpactivity_attvrijeopzoek5");

                entity.HasIndex(e => e.Branchid)
                    .HasName("idx_lmpactivity_branchid");

                entity.HasIndex(e => e.Budgetholderid)
                    .HasName("idx_lmpactivity_budgetholderid");

                entity.HasIndex(e => e.Codeid)
                    .HasName("idx_lmpactivity_codeid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_lmpactivity_importid");

                entity.HasIndex(e => e.Locationid)
                    .HasName("idx_lmpactivity_locationid");

                entity.HasIndex(e => e.Name)
                    .HasName("idx_lmpactivity_name");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_lmpactivity_objectid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_lmpactivity_operatorid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_lmpactivity_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_lmpactivity_statusid");

                entity.HasIndex(e => e.Subcodeid)
                    .HasName("idx_lmpactivity_subcodeid");

                entity.HasIndex(e => e.Typeid)
                    .HasName("idx_lmpactivity_typeid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_lmpactivity_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_lmpactivity_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_lmpactivity_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_lmpactivity_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_lmpactivity_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_lmpactivity_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_lmpactivity_vrijeopzoek5");

                entity.HasIndex(e => e.Worktypeid)
                    .HasName("idx_lmpactivity_worktypeid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Branchid).HasColumnName("branchid");

                entity.Property(e => e.Budgetholderid).HasColumnName("budgetholderid");

                entity.Property(e => e.Codeid).HasColumnName("codeid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Locationid).HasColumnName("locationid");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(180);

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.RefProgresstrail)
                    .HasColumnName("ref_progresstrail")
                    .HasColumnType("ntext");

                entity.Property(e => e.Remarks)
                    .HasColumnName("remarks")
                    .HasColumnType("ntext");

                entity.Property(e => e.Request)
                    .HasColumnName("request")
                    .HasColumnType("ntext");

                entity.Property(e => e.Specifiedlocation)
                    .HasColumnName("specifiedlocation")
                    .HasMaxLength(100);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Subcodeid).HasColumnName("subcodeid");

                entity.Property(e => e.Typeid).HasColumnName("typeid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Worktypeid).HasColumnName("worktypeid");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Lmpactivity)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_lmpactivity");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.LmpactivityAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_lmpactivity");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.LmpactivityAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_lmpactivity");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.LmpactivityAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_lmpactivity");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.LmpactivityAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_lmpactivity");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.LmpactivityAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_lmpactivity");

                entity.HasOne(d => d.Branch)
                    .WithMany(p => p.Lmpactivity)
                    .HasForeignKey(d => d.Branchid)
                    .HasConstraintName("fk_vestiging_branchid_lmpactivity");

                entity.HasOne(d => d.Budgetholder)
                    .WithMany(p => p.Lmpactivity)
                    .HasForeignKey(d => d.Budgetholderid)
                    .HasConstraintName("fk_budgethouder_budgetholderid_lmpactivity");

                entity.HasOne(d => d.Code)
                    .WithMany(p => p.Lmpactivity)
                    .HasForeignKey(d => d.Codeid)
                    .HasConstraintName("fk_lmpcode_codeid_lmpactivity");

                entity.HasOne(d => d.Location)
                    .WithMany(p => p.Lmpactivity)
                    .HasForeignKey(d => d.Locationid)
                    .HasConstraintName("fk_locatie_locationid_lmpactivity");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Lmpactivity)
                    .HasForeignKey(d => d.Objectid)
                    .HasConstraintName("fk_object_objectid_lmpactivity");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.Lmpactivity)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_lmpactivity");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Lmpactivity)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_lmpactivitystatus_statusid_lmpactivity");

                entity.HasOne(d => d.Subcode)
                    .WithMany(p => p.Lmpactivity)
                    .HasForeignKey(d => d.Subcodeid)
                    .HasConstraintName("fk_lmpsubcode_subcodeid_lmpactivity");

                entity.HasOne(d => d.Type)
                    .WithMany(p => p.Lmpactivity)
                    .HasForeignKey(d => d.Typeid)
                    .HasConstraintName("fk_lmptype_typeid_lmpactivity");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LmpactivityUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_lmpactivity");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LmpactivityUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_lmpactivity");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.LmpactivityVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_lmpactivity");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.LmpactivityVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_lmpactivity");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.LmpactivityVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_lmpactivity");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.LmpactivityVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_lmpactivity");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.LmpactivityVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_lmpactivity");

                entity.HasOne(d => d.Worktype)
                    .WithMany(p => p.Lmpactivity)
                    .HasForeignKey(d => d.Worktypeid)
                    .HasConstraintName("fk_lmpworktype_worktypeid_lmpactivity");
            });

            modelBuilder.Entity<LmpactivityDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpactivity__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_lmpactivity__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_lmpactivity__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_lmpactivity__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_lmpactivity__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LmpactivityDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_lmpactivity_kaartid_lmpactivity__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.LmpactivityDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_lmpactivity__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LmpactivityDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_lmpactivity__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LmpactivityDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_lmpactivity__documenten");
            });

            modelBuilder.Entity<LmpactivityEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpactivity__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_lmpactivity__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_lmpactivity__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.LmpactivityEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_lmpactivity__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LmpactivityEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_lmpactivity_kaartid_lmpactivity__emailberichten");
            });

            modelBuilder.Entity<LmpactivityLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpactivity__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_lmpactivity__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_lmpactivity__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_lmpactivity__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_lmpactivity__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LmpactivityLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_lmpactivity_kaartid_lmpactivity__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.LmpactivityLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_lmpactivity__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LmpactivityLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_lmpactivity__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LmpactivityLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_lmpactivity__logboek");
            });

            modelBuilder.Entity<LmpactivityMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpactivity__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_lmpactivity__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_lmpactivity__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_lmpactivity__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_lmpactivity__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_lmpactivity__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_lmpactivity__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_lmpactivity__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_lmpactivity__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_lmpactivity__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.LmpactivityMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_lmpactivity__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.LmpactivityMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_lmpactivity_parentid_lmpactivity__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.LmpactivityMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_lmpactivity__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LmpactivityMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_lmpactivity__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LmpactivityMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_lmpactivity__memo_history");
            });

            modelBuilder.Entity<Lmpactivitystatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpactivitystatus");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_lmpactivitystatus_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_lmpactivitystatus_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_lmpactivitystatus_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Lmpcode>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpcode");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_lmpcode_archief");

                entity.HasIndex(e => e.Code)
                    .HasName("idx_lmpcode_code");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_lmpcode_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_lmpcode_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasColumnName("code")
                    .HasMaxLength(30);

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Lmpindex>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpindex");

                entity.HasIndex(e => e.Lmpworktypeid)
                    .HasName("idx_lmpindex_lmpworktypeid");

                entity.HasIndex(e => e.Year)
                    .HasName("idx_lmpindex_year");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Indexvalue)
                    .HasColumnName("indexvalue")
                    .HasColumnType("money");

                entity.Property(e => e.Lmpworktypeid).HasColumnName("lmpworktypeid");

                entity.Property(e => e.Year).HasColumnName("year");

                entity.HasOne(d => d.Lmpworktype)
                    .WithMany(p => p.Lmpindex)
                    .HasForeignKey(d => d.Lmpworktypeid)
                    .HasConstraintName("fk_lmpworktype_lmpworktypeid_lmpindex");
            });

            modelBuilder.Entity<Lmplink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmplink");

                entity.HasIndex(e => e.Activityid)
                    .HasName("idx_lmplink_activityid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_lmplink_importid");

                entity.HasIndex(e => e.Scenarioid)
                    .HasName("idx_lmplink_scenarioid");

                entity.HasIndex(e => new { e.Scenarioid, e.Activityid })
                    .HasName("uidx_lmplink_scenarioid_activityid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Activityid).HasColumnName("activityid");

                entity.Property(e => e.Baseyear).HasColumnName("baseyear");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Cost)
                    .HasColumnName("cost")
                    .HasColumnType("money");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Quantity).HasColumnName("quantity");

                entity.Property(e => e.Scenarioid).HasColumnName("scenarioid");

                entity.Property(e => e.Unit).HasColumnName("unit");

                entity.HasOne(d => d.Activity)
                    .WithMany(p => p.Lmplink)
                    .HasForeignKey(d => d.Activityid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_lmpactivity_activityid_lmplink");

                entity.HasOne(d => d.Scenario)
                    .WithMany(p => p.Lmplink)
                    .HasForeignKey(d => d.Scenarioid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_lmpscenario_scenarioid_lmplink");
            });

            modelBuilder.Entity<LmpOmActivityLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmp_om_activity_link");

                entity.HasIndex(e => e.Lmpactivityid)
                    .HasName("idx_lmp_om_activity_link_lmpactivityid");

                entity.HasIndex(e => e.Omactivityid)
                    .HasName("idx_lmp_om_activity_link_omactivityid");

                entity.HasIndex(e => new { e.Omactivityid, e.Lmpactivityid })
                    .HasName("uidx_lmp_om_activity_link_omactivityid_lmpactivityid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Lmpactivityid).HasColumnName("lmpactivityid");

                entity.Property(e => e.Omactivityid).HasColumnName("omactivityid");

                entity.HasOne(d => d.Lmpactivity)
                    .WithMany(p => p.LmpOmActivityLink)
                    .HasForeignKey(d => d.Lmpactivityid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_lmpactivity_lmpactivityid_lmp_om_activity_link");

                entity.HasOne(d => d.Omactivity)
                    .WithMany(p => p.LmpOmActivityLink)
                    .HasForeignKey(d => d.Omactivityid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_om_activiteit_omactivityid_lmp_om_activity_link");
            });

            modelBuilder.Entity<Lmppattern>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmppattern");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_lmppattern_importid");

                entity.HasIndex(e => e.Lmplinkid)
                    .HasName("idx_lmppattern_lmplinkid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Cycle).HasColumnName("cycle");

                entity.Property(e => e.Endyear).HasColumnName("endyear");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Lmplinkid).HasColumnName("lmplinkid");

                entity.Property(e => e.Startyear).HasColumnName("startyear");

                entity.HasOne(d => d.Lmplink)
                    .WithMany(p => p.Lmppattern)
                    .HasForeignKey(d => d.Lmplinkid)
                    .HasConstraintName("fk_lmplink_lmplinkid_lmppattern");
            });

            modelBuilder.Entity<Lmpplanning>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpplanning");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_lmpplanning_importid");

                entity.HasIndex(e => e.Lmplinkid)
                    .HasName("idx_lmpplanning_lmplinkid");

                entity.HasIndex(e => e.Patternid)
                    .HasName("idx_lmpplanning_patternid");

                entity.HasIndex(e => new { e.Lmplinkid, e.Year })
                    .HasName("uidx_lmpplanning_lmplinkid_year")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Lmplinkid).HasColumnName("lmplinkid");

                entity.Property(e => e.Patternid).HasColumnName("patternid");

                entity.Property(e => e.Totalcost)
                    .HasColumnName("totalcost")
                    .HasColumnType("money");

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("datetime");

                entity.HasOne(d => d.Lmplink)
                    .WithMany(p => p.Lmpplanning)
                    .HasForeignKey(d => d.Lmplinkid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_lmplink_lmplinkid_lmpplanning");

                entity.HasOne(d => d.Pattern)
                    .WithMany(p => p.Lmpplanning)
                    .HasForeignKey(d => d.Patternid)
                    .HasConstraintName("fk_lmppattern_patternid_lmpplanning");
            });

            modelBuilder.Entity<Lmpscenario>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpscenario");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_lmpscenario_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_lmpscenario_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_lmpscenario_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_lmpscenario_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_lmpscenario_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_lmpscenario_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_lmpscenario_importid");

                entity.HasIndex(e => e.Managerid)
                    .HasName("idx_lmpscenario_managerid");

                entity.HasIndex(e => e.Name)
                    .HasName("idx_lmpscenario_name");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_lmpscenario_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_lmpscenario_statusid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_lmpscenario_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_lmpscenario_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_lmpscenario_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_lmpscenario_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_lmpscenario_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_lmpscenario_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_lmpscenario_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Managerid).HasColumnName("managerid");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(30);

                entity.Property(e => e.Remarks)
                    .HasColumnName("remarks")
                    .HasColumnType("ntext");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Year).HasColumnName("year");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Lmpscenario)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_lmpscenario");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.LmpscenarioAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_lmpscenario");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.LmpscenarioAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_lmpscenario");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.LmpscenarioAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_lmpscenario");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.LmpscenarioAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_lmpscenario");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.LmpscenarioAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_lmpscenario");

                entity.HasOne(d => d.Manager)
                    .WithMany(p => p.Lmpscenario)
                    .HasForeignKey(d => d.Managerid)
                    .HasConstraintName("fk_actiedoor_managerid_lmpscenario");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Lmpscenario)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_lmpscenariostatus_statusid_lmpscenario");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LmpscenarioUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_lmpscenario");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LmpscenarioUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_lmpscenario");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.LmpscenarioVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_lmpscenario");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.LmpscenarioVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_lmpscenario");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.LmpscenarioVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_lmpscenario");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.LmpscenarioVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_lmpscenario");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.LmpscenarioVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_lmpscenario");
            });

            modelBuilder.Entity<LmpscenarioDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpscenario__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_lmpscenario__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_lmpscenario__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_lmpscenario__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_lmpscenario__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LmpscenarioDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_lmpscenario_kaartid_lmpscenario__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.LmpscenarioDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_lmpscenario__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LmpscenarioDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_lmpscenario__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LmpscenarioDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_lmpscenario__documenten");
            });

            modelBuilder.Entity<LmpscenarioEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpscenario__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_lmpscenario__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_lmpscenario__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.LmpscenarioEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_lmpscenario__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LmpscenarioEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_lmpscenario_kaartid_lmpscenario__emailberichten");
            });

            modelBuilder.Entity<LmpscenarioLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpscenario__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_lmpscenario__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_lmpscenario__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_lmpscenario__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_lmpscenario__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LmpscenarioLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_lmpscenario_kaartid_lmpscenario__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.LmpscenarioLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_lmpscenario__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LmpscenarioLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_lmpscenario__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LmpscenarioLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_lmpscenario__logboek");
            });

            modelBuilder.Entity<LmpscenarioMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpscenario__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_lmpscenario__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_lmpscenario__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_lmpscenario__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_lmpscenario__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_lmpscenario__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_lmpscenario__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_lmpscenario__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_lmpscenario__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_lmpscenario__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.LmpscenarioMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_lmpscenario__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.LmpscenarioMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_lmpscenario_parentid_lmpscenario__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.LmpscenarioMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_lmpscenario__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LmpscenarioMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_lmpscenario__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LmpscenarioMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_lmpscenario__memo_history");
            });

            modelBuilder.Entity<Lmpscenariostatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpscenariostatus");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_lmpscenariostatus_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_lmpscenariostatus_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_lmpscenariostatus_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Lmpsubcode>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpsubcode");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_lmpsubcode_archief");

                entity.HasIndex(e => e.Code)
                    .HasName("idx_lmpsubcode_code");

                entity.HasIndex(e => e.Lmpcodeid)
                    .HasName("idx_lmpsubcode_lmpcodeid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_lmpsubcode_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_lmpsubcode_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasColumnName("code")
                    .HasMaxLength(30);

                entity.Property(e => e.Lmpcodeid).HasColumnName("lmpcodeid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.HasOne(d => d.Lmpcode)
                    .WithMany(p => p.Lmpsubcode)
                    .HasForeignKey(d => d.Lmpcodeid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_lmpcode_lmpcodeid_lmpsubcode");
            });

            modelBuilder.Entity<Lmptype>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmptype");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_lmptype_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_lmptype_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_lmptype_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Lmpworktype>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("lmpworktype");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_lmpworktype_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_lmpworktype_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_lmpworktype_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Locatie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("locatie");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_locatie_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_locatie_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_locatie_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_locatie_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_locatie_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_locatie_attvrijeopzoek5");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_locatie_budgethouderid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_locatie_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_locatie_datwijzig");

                entity.HasIndex(e => e.Gebruiksfunctieid)
                    .HasName("idx_locatie_gebruiksfunctieid");

                entity.HasIndex(e => e.Glasmateriaal)
                    .HasName("idx_locatie_glasmateriaal");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_locatie_importid");

                entity.HasIndex(e => e.Ismajorlocation)
                    .HasName("idx_locatie_ismajorlocation");

                entity.HasIndex(e => e.Majorlocationid)
                    .HasName("idx_locatie_majorlocationid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_locatie_naam");

                entity.HasIndex(e => e.Opstellingwijzigbaar)
                    .HasName("idx_locatie_opstellingwijzigbaar");

                entity.HasIndex(e => e.Plafondbedekking)
                    .HasName("idx_locatie_plafondbedekking");

                entity.HasIndex(e => e.RefPlaats1)
                    .HasName("idx_locatie_ref_plaats1");

                entity.HasIndex(e => e.RefVestiging)
                    .HasName("idx_locatie_ref_vestiging");

                entity.HasIndex(e => e.Ruimteid)
                    .HasName("idx_locatie_ruimteid");

                entity.HasIndex(e => e.Ruimtetypeid)
                    .HasName("idx_locatie_ruimtetypeid");

                entity.HasIndex(e => e.Servicewindowid)
                    .HasName("idx_locatie_servicewindowid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_locatie_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_locatie_statusid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_locatie_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_locatie_uidwijzig");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_locatie_vestigingid");

                entity.HasIndex(e => e.Vloerbedekking)
                    .HasName("idx_locatie_vloerbedekking");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_locatie_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_locatie_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_locatie_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_locatie_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_locatie_vrijeopzoek5");

                entity.HasIndex(e => e.Wandbedekking)
                    .HasName("idx_locatie_wandbedekking");

                entity.HasIndex(e => e.Zoneid)
                    .HasName("idx_locatie_zoneid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Blocktime).HasColumnName("blocktime");

                entity.Property(e => e.Breedte).HasColumnName("breedte");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Capaciteit).HasColumnName("capaciteit");

                entity.Property(e => e.CostsHightariff)
                    .HasColumnName("costs_hightariff")
                    .HasColumnType("money");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruiksfunctieid).HasColumnName("gebruiksfunctieid");

                entity.Property(e => e.Gebruiksoppervlakte).HasColumnName("gebruiksoppervlakte");

                entity.Property(e => e.GemeenschRuimte).HasColumnName("gemeensch_ruimte");

                entity.Property(e => e.Glasmateriaal).HasColumnName("glasmateriaal");

                entity.Property(e => e.Glasoppervlakte).HasColumnName("glasoppervlakte");

                entity.Property(e => e.Hoogte).HasColumnName("hoogte");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.InhoudBruto).HasColumnName("inhoud_bruto");

                entity.Property(e => e.InhoudNetto).HasColumnName("inhoud_netto");

                entity.Property(e => e.Ismajorlocation).HasColumnName("ismajorlocation");

                entity.Property(e => e.Lengte).HasColumnName("lengte");

                entity.Property(e => e.Majorlocationid).HasColumnName("majorlocationid");

                entity.Property(e => e.MaxCapaciteit).HasColumnName("max_capaciteit");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Opstellingwijzigbaar).HasColumnName("opstellingwijzigbaar");

                entity.Property(e => e.Plafondbedekking).HasColumnName("plafondbedekking");

                entity.Property(e => e.Plafondoppervlakte).HasColumnName("plafondoppervlakte");

                entity.Property(e => e.RefPlaats1)
                    .IsRequired()
                    .HasColumnName("ref_plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.ReservableOfficehoursSsd).HasColumnName("reservable_officehours_ssd");

                entity.Property(e => e.Reserveerbaaractiveerbaar).HasColumnName("reserveerbaaractiveerbaar");

                entity.Property(e => e.Reserveerbaarkantooruren).HasColumnName("reserveerbaarkantooruren");

                entity.Property(e => e.Reserveerbaarsecure).HasColumnName("reserveerbaarsecure");

                entity.Property(e => e.Reserveerbaarsshd).HasColumnName("reserveerbaarsshd");

                entity.Property(e => e.Reservzichtbaarsshd).HasColumnName("reservzichtbaarsshd");

                entity.Property(e => e.RmSpecification)
                    .IsRequired()
                    .HasColumnName("rm_specification")
                    .HasMaxLength(100);

                entity.Property(e => e.Ruimteid)
                    .IsRequired()
                    .HasColumnName("ruimteid")
                    .HasMaxLength(100);

                entity.Property(e => e.Ruimtetypeid).HasColumnName("ruimtetypeid");

                entity.Property(e => e.ServicewindowOption).HasColumnName("servicewindow_option");

                entity.Property(e => e.Servicewindowid).HasColumnName("servicewindowid");

                entity.Property(e => e.Specificatie)
                    .IsRequired()
                    .HasColumnName("specificatie")
                    .HasMaxLength(100);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Verhuurbaaroppervlakte).HasColumnName("verhuurbaaroppervlakte");

                entity.Property(e => e.Verhuurborg)
                    .HasColumnName("verhuurborg")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijs)
                    .HasColumnName("verhuurprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijssysteem).HasColumnName("verhuurprijssysteem");

                entity.Property(e => e.Verhuurtekst)
                    .HasColumnName("verhuurtekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.VerkeersruimteHor).HasColumnName("verkeersruimte_hor");

                entity.Property(e => e.VerkeersruimteVert).HasColumnName("verkeersruimte_vert");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Vloerbedekking).HasColumnName("vloerbedekking");

                entity.Property(e => e.VloeroppBruto).HasColumnName("vloeropp_bruto");

                entity.Property(e => e.VloeroppNetto).HasColumnName("vloeropp_netto");

                entity.Property(e => e.VloeroppTarra).HasColumnName("vloeropp_tarra");

                entity.Property(e => e.Vloeroppervlakte).HasColumnName("vloeroppervlakte");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Wandbedekking).HasColumnName("wandbedekking");

                entity.Property(e => e.Wandoppervlakte).HasColumnName("wandoppervlakte");

                entity.Property(e => e.Zoneid).HasColumnName("zoneid");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Locatie)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_locatie");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.LocatieAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_locatie");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.LocatieAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_locatie");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.LocatieAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_locatie");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.LocatieAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_locatie");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.LocatieAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_locatie");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Locatie)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_locatie");

                entity.HasOne(d => d.Gebruiksfunctie)
                    .WithMany(p => p.Locatie)
                    .HasForeignKey(d => d.Gebruiksfunctieid)
                    .HasConstraintName("fk_ruimtegebruiksfunctie_gebruiksfunctieid_locatie");

                entity.HasOne(d => d.GlasmateriaalNavigation)
                    .WithMany(p => p.Locatie)
                    .HasForeignKey(d => d.Glasmateriaal)
                    .HasConstraintName("fk_ruimtemateriaalglas_glasmateriaal_locatie");

                entity.HasOne(d => d.Majorlocation)
                    .WithMany(p => p.InverseMajorlocation)
                    .HasForeignKey(d => d.Majorlocationid)
                    .HasConstraintName("fk_locatie_majorlocationid_locatie");

                entity.HasOne(d => d.PlafondbedekkingNavigation)
                    .WithMany(p => p.Locatie)
                    .HasForeignKey(d => d.Plafondbedekking)
                    .HasConstraintName("fk_ruimtemateriaalplafond_plafondbedekking_locatie");

                entity.HasOne(d => d.Ruimtetype)
                    .WithMany(p => p.Locatie)
                    .HasForeignKey(d => d.Ruimtetypeid)
                    .HasConstraintName("fk_ruimtetype_ruimtetypeid_locatie");

                entity.HasOne(d => d.Servicewindow)
                    .WithMany(p => p.Locatie)
                    .HasForeignKey(d => d.Servicewindowid)
                    .HasConstraintName("fk_servicewindow_servicewindowid_locatie");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Locatie)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_ruimtestatus_statusid_locatie");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LocatieUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_locatie");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LocatieUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_locatie");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.Locatie)
                    .HasForeignKey(d => d.Vestigingid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vestiging_vestigingid_locatie");

                entity.HasOne(d => d.VloerbedekkingNavigation)
                    .WithMany(p => p.Locatie)
                    .HasForeignKey(d => d.Vloerbedekking)
                    .HasConstraintName("fk_ruimtemateriaalvloer_vloerbedekking_locatie");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.LocatieVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_locatie");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.LocatieVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_locatie");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.LocatieVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_locatie");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.LocatieVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_locatie");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.LocatieVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_locatie");

                entity.HasOne(d => d.WandbedekkingNavigation)
                    .WithMany(p => p.Locatie)
                    .HasForeignKey(d => d.Wandbedekking)
                    .HasConstraintName("fk_ruimtemateriaalwand_wandbedekking_locatie");

                entity.HasOne(d => d.Zone)
                    .WithMany(p => p.Locatie)
                    .HasForeignKey(d => d.Zoneid)
                    .HasConstraintName("fk_building_zone_zoneid_locatie");
            });

            modelBuilder.Entity<LocatieActiedoorLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("locatie_actiedoor_link");

                entity.HasIndex(e => e.Actiedoorid)
                    .HasName("idx_locatie_actiedoor_link_actiedoorid");

                entity.HasIndex(e => e.Locatieid)
                    .HasName("idx_locatie_actiedoor_link_locatieid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actiedoorid).HasColumnName("actiedoorid");

                entity.Property(e => e.Locatieid).HasColumnName("locatieid");

                entity.HasOne(d => d.Actiedoor)
                    .WithMany(p => p.LocatieActiedoorLink)
                    .HasForeignKey(d => d.Actiedoorid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_actiedoor_actiedoorid_locatie_actiedoor_link");

                entity.HasOne(d => d.Locatie)
                    .WithMany(p => p.LocatieActiedoorLink)
                    .HasForeignKey(d => d.Locatieid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_locatie_locatieid_locatie_actiedoor_link");
            });

            modelBuilder.Entity<LocatieDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("locatie__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_locatie__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_locatie__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_locatie__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_locatie__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LocatieDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_locatie_kaartid_locatie__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.LocatieDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_locatie__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LocatieDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_locatie__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LocatieDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_locatie__documenten");
            });

            modelBuilder.Entity<LocatieEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("locatie__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_locatie__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_locatie__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.LocatieEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_locatie__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LocatieEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_locatie_kaartid_locatie__emailberichten");
            });

            modelBuilder.Entity<LocatieLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("locatie__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_locatie__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_locatie__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_locatie__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_locatie__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.LocatieLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_locatie_kaartid_locatie__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.LocatieLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_locatie__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LocatieLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_locatie__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LocatieLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_locatie__logboek");
            });

            modelBuilder.Entity<LocatieMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("locatie__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_locatie__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_locatie__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_locatie__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_locatie__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_locatie__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_locatie__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_locatie__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_locatie__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_locatie__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.LocatieMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_locatie__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.LocatieMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_locatie_parentid_locatie__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.LocatieMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_locatie__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LocatieMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_locatie__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LocatieMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_locatie__memo_history");
            });

            modelBuilder.Entity<LocatieOptionalgrid>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("locatie__optionalgrid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_locatie__optionalgrid_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_locatie__optionalgrid_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_locatie__optionalgrid_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_locatie__optionalgrid_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_locatie__optionalgrid_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_locatie__optionalgrid_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_locatie__optionalgrid_parentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_locatie__optionalgrid_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_locatie__optionalgrid_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_locatie__optionalgrid_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_locatie__optionalgrid_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_locatie__optionalgrid_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_locatie__optionalgrid_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_locatie__optionalgrid_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.LocatieOptionalgridAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_locatie__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.LocatieOptionalgridAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_locatie__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.LocatieOptionalgridAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_locatie__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.LocatieOptionalgridAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_locatie__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.LocatieOptionalgridAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_locatie__optionalgrid");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.LocatieOptionalgrid)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_locatie_parentid_locatie__optionalgrid");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.LocatieOptionalgridUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_locatie__optionalgrid");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.LocatieOptionalgridUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_locatie__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.LocatieOptionalgridVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_locatie__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.LocatieOptionalgridVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_locatie__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.LocatieOptionalgridVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_locatie__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.LocatieOptionalgridVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_locatie__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.LocatieOptionalgridVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_locatie__optionalgrid");
            });

            modelBuilder.Entity<LocatiePicture>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("locatie__picture");

                entity.HasIndex(e => e.Cardid)
                    .HasName("idx_locatie__picture_cardid");

                entity.HasIndex(e => e.Pictureid)
                    .HasName("idx_locatie__picture_pictureid");

                entity.HasIndex(e => new { e.Pictureid, e.Cardid })
                    .HasName("uidx_locatie__picture_pictureid_cardid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cardid).HasColumnName("cardid");

                entity.Property(e => e.Isfavourite).HasColumnName("isfavourite");

                entity.Property(e => e.Pictureid).HasColumnName("pictureid");

                entity.Property(e => e.Rank).HasColumnName("rank");

                entity.HasOne(d => d.Card)
                    .WithMany(p => p.LocatiePicture)
                    .HasForeignKey(d => d.Cardid)
                    .HasConstraintName("fk_locatie_cardid_locatie__picture");

                entity.HasOne(d => d.Picture)
                    .WithMany(p => p.LocatiePicture)
                    .HasForeignKey(d => d.Pictureid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_picture_pictureid_locatie__picture");
            });

            modelBuilder.Entity<LocatieRuimteopstellingLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("locatie_ruimteopstelling_link");

                entity.HasIndex(e => e.Isstandaard)
                    .HasName("idx_locatie_ruimteopstelling_link_isstandaard");

                entity.HasIndex(e => e.Locatieid)
                    .HasName("idx_locatie_ruimteopstelling_link_locatieid");

                entity.HasIndex(e => e.Opstellingid)
                    .HasName("idx_locatie_ruimteopstelling_link_opstellingid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Capaciteit).HasColumnName("capaciteit");

                entity.Property(e => e.Isstandaard).HasColumnName("isstandaard");

                entity.Property(e => e.Locatieid).HasColumnName("locatieid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Opstellingid).HasColumnName("opstellingid");

                entity.HasOne(d => d.Locatie)
                    .WithMany(p => p.LocatieRuimteopstellingLink)
                    .HasForeignKey(d => d.Locatieid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_locatie_locatieid_locatie_ruimteopstelling_link");

                entity.HasOne(d => d.Opstelling)
                    .WithMany(p => p.LocatieRuimteopstellingLink)
                    .HasForeignKey(d => d.Opstellingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_ruimteopstelling_opstellingid_locatie_ruimteopstelling_link");
            });

            modelBuilder.Entity<Logboekactie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("logboekactie");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_logboekactie_naam");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actief).HasColumnName("actief");

                entity.Property(e => e.Actieftasbeveiligd).HasColumnName("actieftasbeveiligd");

                entity.Property(e => e.Actieftaspubliek).HasColumnName("actieftaspubliek");

                entity.Property(e => e.Actieftopdesk).HasColumnName("actieftopdesk");

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bericht1)
                    .HasColumnName("bericht1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bevestigen).HasColumnName("bevestigen");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(50);

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Sleutel)
                    .HasColumnName("sleutel")
                    .HasColumnType("ntext");

                entity.Property(e => e.Structurename)
                    .IsRequired()
                    .HasColumnName("structurename")
                    .HasMaxLength(40);

                entity.Property(e => e.Tabelstatus)
                    .IsRequired()
                    .HasColumnName("tabelstatus")
                    .HasMaxLength(40);

                entity.Property(e => e.Wijzigbaar).HasColumnName("wijzigbaar");
            });

            modelBuilder.Entity<Mailactie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mailactie");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_mailactie_naam");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actief).HasColumnName("actief");

                entity.Property(e => e.Actieftasbeveiligd).HasColumnName("actieftasbeveiligd");

                entity.Property(e => e.Actieftaspubliek).HasColumnName("actieftaspubliek");

                entity.Property(e => e.Bericht1)
                    .HasColumnName("bericht1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bevestigen).HasColumnName("bevestigen");

                entity.Property(e => e.Carddocuments).HasColumnName("carddocuments");

                entity.Property(e => e.Entityversion).HasColumnName("entityversion");

                entity.Property(e => e.Html).HasColumnName("html");

                entity.Property(e => e.Kopiezelf).HasColumnName("kopiezelf");

                entity.Property(e => e.Leesbevestiging).HasColumnName("leesbevestiging");

                entity.Property(e => e.Maildistribution)
                    .HasColumnName("maildistribution")
                    .HasMaxLength(255);

                entity.Property(e => e.MaildistributionBcc)
                    .HasColumnName("maildistribution_bcc")
                    .HasMaxLength(255);

                entity.Property(e => e.MaildistributionCc)
                    .HasColumnName("maildistribution_cc")
                    .HasMaxLength(255);

                entity.Property(e => e.MaildistributionReplyto)
                    .HasColumnName("maildistribution_replyto")
                    .HasMaxLength(255);

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(50);

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Onderwerp1)
                    .HasColumnName("onderwerp1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Ontvangstbevestiging).HasColumnName("ontvangstbevestiging");

                entity.Property(e => e.Prioriteit).HasColumnName("prioriteit");

                entity.Property(e => e.Sleutel)
                    .HasColumnName("sleutel")
                    .HasColumnType("ntext");

                entity.Property(e => e.Structurename)
                    .IsRequired()
                    .HasColumnName("structurename")
                    .HasMaxLength(40);

                entity.Property(e => e.Uitvoerenbijselecties).HasColumnName("uitvoerenbijselecties");

                entity.Property(e => e.Vanadres1)
                    .HasColumnName("vanadres1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vanadreswijzigbaar).HasColumnName("vanadreswijzigbaar");

                entity.Property(e => e.Wijzigbaar).HasColumnName("wijzigbaar");
            });

            modelBuilder.Entity<Mailactiebestand>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mailactiebestand");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_mailactiebestand_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_mailactiebestand_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_mailactiebestand_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mailactiebestand_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Entityversion).HasColumnName("entityversion");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasColumnType("ntext");

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Verplicht).HasColumnName("verplicht");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.Mailactiebestand)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_mailactie_kaartid_mailactiebestand");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Mailactiebestand)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_mailactiebestand");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.MailactiebestandUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_mailactiebestand");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MailactiebestandUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mailactiebestand");
            });

            modelBuilder.Entity<Mailactiekopie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mailactiekopie");

                entity.HasIndex(e => e.Actieid)
                    .HasName("idx_mailactiekopie_actieid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actieid).HasColumnName("actieid");

                entity.Property(e => e.Adres1)
                    .HasColumnName("adres1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Entityversion).HasColumnName("entityversion");

                entity.Property(e => e.Sleutel)
                    .HasColumnName("sleutel")
                    .HasColumnType("ntext");

                entity.Property(e => e.Totype).HasColumnName("totype");

                entity.Property(e => e.Verplicht).HasColumnName("verplicht");

                entity.HasOne(d => d.Actie)
                    .WithMany(p => p.Mailactiekopie)
                    .HasForeignKey(d => d.Actieid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_mailactie_actieid_mailactiekopie");
            });

            modelBuilder.Entity<MailimportChange>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mailimport_change");

                entity.HasIndex(e => e.Benefitid)
                    .HasName("idx_mailimport_change_benefitid");

                entity.HasIndex(e => e.Branchid)
                    .HasName("idx_mailimport_change_branchid");

                entity.HasIndex(e => e.Categoryid)
                    .HasName("idx_mailimport_change_categoryid");

                entity.HasIndex(e => e.Defaultoperatorid)
                    .HasName("idx_mailimport_change_defaultoperatorid");

                entity.HasIndex(e => e.Impactid)
                    .HasName("idx_mailimport_change_impactid");

                entity.HasIndex(e => e.Mailimportsettingsid)
                    .HasName("idx_mailimport_change_mailimportsettingsid");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_mailimport_change_statusid");

                entity.HasIndex(e => e.Subcategoryid)
                    .HasName("idx_mailimport_change_subcategoryid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_mailimport_change_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mailimport_change_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Benefitid).HasColumnName("benefitid");

                entity.Property(e => e.Branchid).HasColumnName("branchid");

                entity.Property(e => e.Categoryid).HasColumnName("categoryid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Defaultoperatorid).HasColumnName("defaultoperatorid");

                entity.Property(e => e.Impactid).HasColumnName("impactid");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isurgent).HasColumnName("isurgent");

                entity.Property(e => e.Mailaddressunknown).HasColumnName("mailaddressunknown");

                entity.Property(e => e.Mailimportsettingsid).HasColumnName("mailimportsettingsid");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Subcategoryid).HasColumnName("subcategoryid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Benefit)
                    .WithMany(p => p.MailimportChange)
                    .HasForeignKey(d => d.Benefitid)
                    .HasConstraintName("fk_changebenefit_benefitid_mailimport_change");

                entity.HasOne(d => d.Branch)
                    .WithMany(p => p.MailimportChange)
                    .HasForeignKey(d => d.Branchid)
                    .HasConstraintName("fk_vestiging_branchid_mailimport_change");

                entity.HasOne(d => d.Category)
                    .WithMany(p => p.MailimportChangeCategory)
                    .HasForeignKey(d => d.Categoryid)
                    .HasConstraintName("fk_classificatie_categoryid_mailimport_change");

                entity.HasOne(d => d.Defaultoperator)
                    .WithMany(p => p.MailimportChange)
                    .HasForeignKey(d => d.Defaultoperatorid)
                    .HasConstraintName("fk_actiedoor_defaultoperatorid_mailimport_change");

                entity.HasOne(d => d.Impact)
                    .WithMany(p => p.MailimportChange)
                    .HasForeignKey(d => d.Impactid)
                    .HasConstraintName("fk_wijziging_impact_impactid_mailimport_change");

                entity.HasOne(d => d.Mailimportsettings)
                    .WithMany(p => p.MailimportChange)
                    .HasForeignKey(d => d.Mailimportsettingsid)
                    .HasConstraintName("fk_mailimport_settings_mailimportsettingsid_mailimport_change");

                entity.HasOne(d => d.Status)
                    .WithMany(p => p.MailimportChange)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_wijzigingstatus_statusid_mailimport_change");

                entity.HasOne(d => d.Subcategory)
                    .WithMany(p => p.MailimportChangeSubcategory)
                    .HasForeignKey(d => d.Subcategoryid)
                    .HasConstraintName("fk_classificatie_subcategoryid_mailimport_change");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.MailimportChangeUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_mailimport_change");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MailimportChangeUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mailimport_change");
            });

            modelBuilder.Entity<MailimportIncident>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mailimport_incident");

                entity.HasIndex(e => e.Branchid)
                    .HasName("idx_mailimport_incident_branchid");

                entity.HasIndex(e => e.Calltypeid)
                    .HasName("idx_mailimport_incident_calltypeid");

                entity.HasIndex(e => e.Categoryid)
                    .HasName("idx_mailimport_incident_categoryid");

                entity.HasIndex(e => e.Defaultoperatorid)
                    .HasName("idx_mailimport_incident_defaultoperatorid");

                entity.HasIndex(e => e.Entryid)
                    .HasName("idx_mailimport_incident_entryid");

                entity.HasIndex(e => e.Impactid)
                    .HasName("idx_mailimport_incident_impactid");

                entity.HasIndex(e => e.Mailimportsettingsid)
                    .HasName("idx_mailimport_incident_mailimportsettingsid");

                entity.HasIndex(e => e.Priorityid)
                    .HasName("idx_mailimport_incident_priorityid");

                entity.HasIndex(e => e.Statusclosedid)
                    .HasName("idx_mailimport_incident_statusclosedid");

                entity.HasIndex(e => e.Statuscompletedid)
                    .HasName("idx_mailimport_incident_statuscompletedid");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_mailimport_incident_statusid");

                entity.HasIndex(e => e.Statusopenid)
                    .HasName("idx_mailimport_incident_statusopenid");

                entity.HasIndex(e => e.Subcategoryid)
                    .HasName("idx_mailimport_incident_subcategoryid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_mailimport_incident_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mailimport_incident_uidwijzig");

                entity.HasIndex(e => e.Urgencyid)
                    .HasName("idx_mailimport_incident_urgencyid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actiontypeclosed).HasColumnName("actiontypeclosed");

                entity.Property(e => e.Actiontypecompleted).HasColumnName("actiontypecompleted");

                entity.Property(e => e.Branchid).HasColumnName("branchid");

                entity.Property(e => e.Calltypeid).HasColumnName("calltypeid");

                entity.Property(e => e.Categoryid).HasColumnName("categoryid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Defaultoperatorid).HasColumnName("defaultoperatorid");

                entity.Property(e => e.Entryid).HasColumnName("entryid");

                entity.Property(e => e.Impactid).HasColumnName("impactid");

                entity.Property(e => e.IncidentLine).HasColumnName("incident_line");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Mailaddressunknown).HasColumnName("mailaddressunknown");

                entity.Property(e => e.Mailimportsettingsid).HasColumnName("mailimportsettingsid");

                entity.Property(e => e.Priorityid).HasColumnName("priorityid");

                entity.Property(e => e.Processingstatusclosed).HasColumnName("processingstatusclosed");

                entity.Property(e => e.Processingstatuscompleted).HasColumnName("processingstatuscompleted");

                entity.Property(e => e.Processingstatusopen).HasColumnName("processingstatusopen");

                entity.Property(e => e.Statusclosedid).HasColumnName("statusclosedid");

                entity.Property(e => e.Statuscompletedid).HasColumnName("statuscompletedid");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Statusopenid).HasColumnName("statusopenid");

                entity.Property(e => e.Subcategoryid).HasColumnName("subcategoryid");

                entity.Property(e => e.Subject2description).HasColumnName("subject2description");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Urgencyid).HasColumnName("urgencyid");

                entity.HasOne(d => d.Branch)
                    .WithMany(p => p.MailimportIncident)
                    .HasForeignKey(d => d.Branchid)
                    .HasConstraintName("fk_vestiging_branchid_mailimport_incident");

                entity.HasOne(d => d.Calltype)
                    .WithMany(p => p.MailimportIncident)
                    .HasForeignKey(d => d.Calltypeid)
                    .HasConstraintName("fk_soortmelding_calltypeid_mailimport_incident");

                entity.HasOne(d => d.Category)
                    .WithMany(p => p.MailimportIncidentCategory)
                    .HasForeignKey(d => d.Categoryid)
                    .HasConstraintName("fk_classificatie_categoryid_mailimport_incident");

                entity.HasOne(d => d.Defaultoperator)
                    .WithMany(p => p.MailimportIncident)
                    .HasForeignKey(d => d.Defaultoperatorid)
                    .HasConstraintName("fk_actiedoor_defaultoperatorid_mailimport_incident");

                entity.HasOne(d => d.Entry)
                    .WithMany(p => p.MailimportIncident)
                    .HasForeignKey(d => d.Entryid)
                    .HasConstraintName("fk_soortbinnenkomst_entryid_mailimport_incident");

                entity.HasOne(d => d.Impact)
                    .WithMany(p => p.MailimportIncident)
                    .HasForeignKey(d => d.Impactid)
                    .HasConstraintName("fk_impact_impactid_mailimport_incident");

                entity.HasOne(d => d.Mailimportsettings)
                    .WithMany(p => p.MailimportIncident)
                    .HasForeignKey(d => d.Mailimportsettingsid)
                    .HasConstraintName("fk_mailimport_settings_mailimportsettingsid_mailimport_incident");

                entity.HasOne(d => d.Priority)
                    .WithMany(p => p.MailimportIncident)
                    .HasForeignKey(d => d.Priorityid)
                    .HasConstraintName("fk_priority_priorityid_mailimport_incident");

                entity.HasOne(d => d.Statusclosed)
                    .WithMany(p => p.MailimportIncidentStatusclosed)
                    .HasForeignKey(d => d.Statusclosedid)
                    .HasConstraintName("fk_afhandelingstatus_statusclosedid_mailimport_incident");

                entity.HasOne(d => d.Statuscompleted)
                    .WithMany(p => p.MailimportIncidentStatuscompleted)
                    .HasForeignKey(d => d.Statuscompletedid)
                    .HasConstraintName("fk_afhandelingstatus_statuscompletedid_mailimport_incident");

                entity.HasOne(d => d.Status)
                    .WithMany(p => p.MailimportIncidentStatus)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_afhandelingstatus_statusid_mailimport_incident");

                entity.HasOne(d => d.Statusopen)
                    .WithMany(p => p.MailimportIncidentStatusopen)
                    .HasForeignKey(d => d.Statusopenid)
                    .HasConstraintName("fk_afhandelingstatus_statusopenid_mailimport_incident");

                entity.HasOne(d => d.Subcategory)
                    .WithMany(p => p.MailimportIncidentSubcategory)
                    .HasForeignKey(d => d.Subcategoryid)
                    .HasConstraintName("fk_classificatie_subcategoryid_mailimport_incident");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.MailimportIncidentUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_mailimport_incident");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MailimportIncidentUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mailimport_incident");

                entity.HasOne(d => d.Urgency)
                    .WithMany(p => p.MailimportIncident)
                    .HasForeignKey(d => d.Urgencyid)
                    .HasConstraintName("fk_urgency_urgencyid_mailimport_incident");
            });

            modelBuilder.Entity<MailimportSettings>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mailimport_settings");

                entity.HasIndex(e => e.Executeasuserid)
                    .HasName("idx_mailimport_settings_executeasuserid");

                entity.HasIndex(e => e.Lastruntime)
                    .HasName("idx_mailimport_settings_lastruntime");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_mailimport_settings_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mailimport_settings_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Active).HasColumnName("active");

                entity.Property(e => e.Additionalproperties)
                    .HasColumnName("additionalproperties")
                    .HasColumnType("ntext");

                entity.Property(e => e.Alternatefolder)
                    .HasColumnName("alternatefolder")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Defaultimport).HasColumnName("defaultimport");

                entity.Property(e => e.Directory)
                    .HasColumnName("directory")
                    .HasColumnType("ntext");

                entity.Property(e => e.Exchangeversion)
                    .HasColumnName("exchangeversion")
                    .HasMaxLength(30);

                entity.Property(e => e.Executeasuserid).HasColumnName("executeasuserid");

                entity.Property(e => e.Failedfolder)
                    .HasColumnName("failedfolder")
                    .HasColumnType("ntext");

                entity.Property(e => e.Imapfolder)
                    .IsRequired()
                    .HasColumnName("imapfolder")
                    .HasMaxLength(100);

                entity.Property(e => e.Imapsecuritytype).HasColumnName("imapsecuritytype");

                entity.Property(e => e.Imapserver)
                    .IsRequired()
                    .HasColumnName("imapserver")
                    .HasMaxLength(100);

                entity.Property(e => e.Imapuser)
                    .IsRequired()
                    .HasColumnName("imapuser")
                    .HasMaxLength(100);

                entity.Property(e => e.Lastrunstatus).HasColumnName("lastrunstatus");

                entity.Property(e => e.Lastruntime)
                    .HasColumnName("lastruntime")
                    .HasColumnType("datetime");

                entity.Property(e => e.Mailboxtype).HasColumnName("mailboxtype");

                entity.Property(e => e.Movefailed).HasColumnName("movefailed");

                entity.Property(e => e.Movemail).HasColumnName("movemail");

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasColumnType("ntext");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasColumnName("password")
                    .HasMaxLength(100);

                entity.Property(e => e.Portnumber).HasColumnName("portnumber");

                entity.Property(e => e.Preferplaintextimport).HasColumnName("preferplaintextimport");

                entity.Property(e => e.Savemail).HasColumnName("savemail");

                entity.Property(e => e.Servertype).HasColumnName("servertype");

                entity.Property(e => e.Sharedmailaddress)
                    .HasColumnName("sharedmailaddress")
                    .HasMaxLength(100);

                entity.Property(e => e.Shortdescription)
                    .HasColumnName("shortdescription")
                    .HasMaxLength(100);

                entity.Property(e => e.Sslsecured).HasColumnName("sslsecured");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Executeasuser)
                    .WithMany(p => p.MailimportSettingsExecuteasuser)
                    .HasForeignKey(d => d.Executeasuserid)
                    .HasConstraintName("fk_gebruiker_executeasuserid_mailimport_settings");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.MailimportSettingsUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_mailimport_settings");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MailimportSettingsUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mailimport_settings");
            });

            modelBuilder.Entity<MeasurementType>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("measurement_type");

                entity.HasIndex(e => e.Naam)
                    .HasName("uidx_measurement_type_naam")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.UnitOfMeasure)
                    .IsRequired()
                    .HasColumnName("unit_of_measure")
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<Meeting>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("meeting");

                entity.HasIndex(e => e.Archivereasonid)
                    .HasName("idx_meeting_archivereasonid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_meeting_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_meeting_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_meeting_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_meeting_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_meeting_attvrijeopzoek5");

                entity.HasIndex(e => e.Branchid)
                    .HasName("idx_meeting_branchid");

                entity.HasIndex(e => e.Chairmanid)
                    .HasName("idx_meeting_chairmanid");

                entity.HasIndex(e => e.Enddate)
                    .HasName("idx_meeting_enddate");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_meeting_importid");

                entity.HasIndex(e => e.Locationid)
                    .HasName("idx_meeting_locationid");

                entity.HasIndex(e => e.Startdate)
                    .HasName("idx_meeting_startdate");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_meeting_status");

                entity.HasIndex(e => e.Typeid)
                    .HasName("idx_meeting_typeid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_meeting_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_meeting_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_meeting_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_meeting_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_meeting_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_meeting_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_meeting_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Action)
                    .HasColumnName("action")
                    .HasColumnType("ntext");

                entity.Property(e => e.Agenda)
                    .HasColumnName("agenda")
                    .HasColumnType("ntext");

                entity.Property(e => e.Archivereasonid).HasColumnName("archivereasonid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Branchid).HasColumnName("branchid");

                entity.Property(e => e.Briefdescription)
                    .IsRequired()
                    .HasColumnName("briefdescription")
                    .HasMaxLength(80);

                entity.Property(e => e.Chairmanid).HasColumnName("chairmanid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("ntext");

                entity.Property(e => e.Enddate)
                    .HasColumnName("enddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Locationid).HasColumnName("locationid");

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasColumnType("ntext");

                entity.Property(e => e.Number)
                    .IsRequired()
                    .HasColumnName("number")
                    .HasMaxLength(30);

                entity.Property(e => e.RefProgresstrail)
                    .HasColumnName("ref_progresstrail")
                    .HasColumnType("ntext");

                entity.Property(e => e.Startdate)
                    .HasColumnName("startdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Typeid).HasColumnName("typeid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Archivereason)
                    .WithMany(p => p.Meeting)
                    .HasForeignKey(d => d.Archivereasonid)
                    .HasConstraintName("fk_archiefreden_archivereasonid_meeting");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.MeetingAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_meeting");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.MeetingAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_meeting");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.MeetingAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_meeting");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.MeetingAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_meeting");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.MeetingAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_meeting");

                entity.HasOne(d => d.Branch)
                    .WithMany(p => p.Meeting)
                    .HasForeignKey(d => d.Branchid)
                    .HasConstraintName("fk_vestiging_branchid_meeting");

                entity.HasOne(d => d.Chairman)
                    .WithMany(p => p.Meeting)
                    .HasForeignKey(d => d.Chairmanid)
                    .HasConstraintName("fk_actiedoor_chairmanid_meeting");

                entity.HasOne(d => d.Location)
                    .WithMany(p => p.Meeting)
                    .HasForeignKey(d => d.Locationid)
                    .HasConstraintName("fk_locatie_locationid_meeting");

                entity.HasOne(d => d.Type)
                    .WithMany(p => p.Meeting)
                    .HasForeignKey(d => d.Typeid)
                    .HasConstraintName("fk_wbvergadersoort_typeid_meeting");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.MeetingUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_meeting");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MeetingUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_meeting");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.MeetingVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_meeting");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.MeetingVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_meeting");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.MeetingVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_meeting");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.MeetingVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_meeting");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.MeetingVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_meeting");
            });

            modelBuilder.Entity<MeetingChangeactivityLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("meeting_changeactivity_link");

                entity.HasIndex(e => e.Changeactivityid)
                    .HasName("idx_meeting_changeactivity_link_changeactivityid");

                entity.HasIndex(e => e.Meetingid)
                    .HasName("idx_meeting_changeactivity_link_meetingid");

                entity.HasIndex(e => new { e.Changeactivityid, e.Meetingid })
                    .HasName("uidx_meeting_changeactivity_link_changeactivityid_meetingid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Changeactivityid).HasColumnName("changeactivityid");

                entity.Property(e => e.Meetingid).HasColumnName("meetingid");

                entity.HasOne(d => d.Changeactivity)
                    .WithMany(p => p.MeetingChangeactivityLink)
                    .HasForeignKey(d => d.Changeactivityid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_changeactivity_changeactivityid_meeting_changeactivity_link");

                entity.HasOne(d => d.Meeting)
                    .WithMany(p => p.MeetingChangeactivityLink)
                    .HasForeignKey(d => d.Meetingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_meeting_meetingid_meeting_changeactivity_link");
            });

            modelBuilder.Entity<MeetingChangeLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("meeting_change_link");

                entity.HasIndex(e => e.Changeid)
                    .HasName("idx_meeting_change_link_changeid");

                entity.HasIndex(e => e.Meetingid)
                    .HasName("idx_meeting_change_link_meetingid");

                entity.HasIndex(e => new { e.Changeid, e.Meetingid })
                    .HasName("uidx_meeting_change_link_changeid_meetingid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Changeid).HasColumnName("changeid");

                entity.Property(e => e.Meetingid).HasColumnName("meetingid");

                entity.HasOne(d => d.Change)
                    .WithMany(p => p.MeetingChangeLink)
                    .HasForeignKey(d => d.Changeid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_changeid_meeting_change_link");

                entity.HasOne(d => d.Meeting)
                    .WithMany(p => p.MeetingChangeLink)
                    .HasForeignKey(d => d.Meetingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_meeting_meetingid_meeting_change_link");
            });

            modelBuilder.Entity<MeetingDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("meeting__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_meeting__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_meeting__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_meeting__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_meeting__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.MeetingDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_meeting_kaartid_meeting__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.MeetingDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_meeting__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.MeetingDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_meeting__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MeetingDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_meeting__documenten");
            });

            modelBuilder.Entity<Meetingduration>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("meetingduration");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_meetingduration_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_meetingduration_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_meetingduration_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Count).HasColumnName("count");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.Type).HasColumnName("type");
            });

            modelBuilder.Entity<MeetingEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("meeting__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_meeting__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_meeting__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.MeetingEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_meeting__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.MeetingEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_meeting_kaartid_meeting__emailberichten");
            });

            modelBuilder.Entity<MeetingIncidentLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("meeting_incident_link");

                entity.HasIndex(e => e.Incidentid)
                    .HasName("idx_meeting_incident_link_incidentid");

                entity.HasIndex(e => e.Meetingid)
                    .HasName("idx_meeting_incident_link_meetingid");

                entity.HasIndex(e => new { e.Incidentid, e.Meetingid })
                    .HasName("uidx_meeting_incident_link_incidentid_meetingid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Incidentid).HasColumnName("incidentid");

                entity.Property(e => e.Meetingid).HasColumnName("meetingid");

                entity.HasOne(d => d.Incident)
                    .WithMany(p => p.MeetingIncidentLink)
                    .HasForeignKey(d => d.Incidentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_incident_incidentid_meeting_incident_link");

                entity.HasOne(d => d.Meeting)
                    .WithMany(p => p.MeetingIncidentLink)
                    .HasForeignKey(d => d.Meetingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_meeting_meetingid_meeting_incident_link");
            });

            modelBuilder.Entity<MeetingLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("meeting__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_meeting__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_meeting__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_meeting__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_meeting__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.MeetingLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_meeting_kaartid_meeting__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.MeetingLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_meeting__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.MeetingLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_meeting__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MeetingLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_meeting__logboek");
            });

            modelBuilder.Entity<MeetingMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("meeting__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_meeting__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_meeting__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_meeting__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_meeting__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_meeting__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_meeting__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_meeting__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_meeting__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_meeting__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.MeetingMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_meeting__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MeetingMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_meeting_parentid_meeting__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.MeetingMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_meeting__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.MeetingMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_meeting__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MeetingMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_meeting__memo_history");
            });

            modelBuilder.Entity<MeetingPersonLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("meeting_person_link");

                entity.HasIndex(e => e.Meetingid)
                    .HasName("idx_meeting_person_link_meetingid");

                entity.HasIndex(e => e.Personid)
                    .HasName("idx_meeting_person_link_personid");

                entity.HasIndex(e => new { e.Meetingid, e.Personid })
                    .HasName("uidx_meeting_person_link_meetingid_personid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Meetingid).HasColumnName("meetingid");

                entity.Property(e => e.Personid).HasColumnName("personid");

                entity.HasOne(d => d.Meeting)
                    .WithMany(p => p.MeetingPersonLink)
                    .HasForeignKey(d => d.Meetingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_meeting_meetingid_meeting_person_link");

                entity.HasOne(d => d.Person)
                    .WithMany(p => p.MeetingPersonLink)
                    .HasForeignKey(d => d.Personid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_persoon_personid_meeting_person_link");
            });

            modelBuilder.Entity<MeetingProblemLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("meeting_problem_link");

                entity.HasIndex(e => e.Meetingid)
                    .HasName("idx_meeting_problem_link_meetingid");

                entity.HasIndex(e => e.Problemid)
                    .HasName("idx_meeting_problem_link_problemid");

                entity.HasIndex(e => new { e.Meetingid, e.Problemid })
                    .HasName("uidx_meeting_problem_link_meetingid_problemid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Meetingid).HasColumnName("meetingid");

                entity.Property(e => e.Problemid).HasColumnName("problemid");

                entity.HasOne(d => d.Meeting)
                    .WithMany(p => p.MeetingProblemLink)
                    .HasForeignKey(d => d.Meetingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_meeting_meetingid_meeting_problem_link");

                entity.HasOne(d => d.Problem)
                    .WithMany(p => p.MeetingProblemLink)
                    .HasForeignKey(d => d.Problemid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_probleem_problemid_meeting_problem_link");
            });

            modelBuilder.Entity<MeetingProfacboomProjectLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("meeting_profacboom_project_link");

                entity.HasIndex(e => e.Meetingid)
                    .HasName("idx_meeting_profacboom_project_link_meetingid");

                entity.HasIndex(e => e.Projectid)
                    .HasName("idx_meeting_profacboom_project_link_projectid");

                entity.HasIndex(e => new { e.Projectid, e.Meetingid })
                    .HasName("uidx_meeting_profacboom_project_link_projectid_meetingid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Meetingid).HasColumnName("meetingid");

                entity.Property(e => e.Projectid).HasColumnName("projectid");

                entity.HasOne(d => d.Meeting)
                    .WithMany(p => p.MeetingProfacboomProjectLink)
                    .HasForeignKey(d => d.Meetingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_meeting_meetingid_meeting_profacboom_project_link");

                entity.HasOne(d => d.Project)
                    .WithMany(p => p.MeetingProfacboomProjectLink)
                    .HasForeignKey(d => d.Projectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_profacboom_project_projectid_meeting_profacboom_project_link");
            });

            modelBuilder.Entity<MeetingVersionLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("meeting_version_link");

                entity.HasIndex(e => e.Meetingid)
                    .HasName("idx_meeting_version_link_meetingid");

                entity.HasIndex(e => e.Versionid)
                    .HasName("idx_meeting_version_link_versionid");

                entity.HasIndex(e => new { e.Versionid, e.Meetingid })
                    .HasName("uidx_meeting_version_link_versionid_meetingid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Meetingid).HasColumnName("meetingid");

                entity.Property(e => e.Versionid).HasColumnName("versionid");

                entity.HasOne(d => d.Meeting)
                    .WithMany(p => p.MeetingVersionLink)
                    .HasForeignKey(d => d.Meetingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_meeting_meetingid_meeting_version_link");

                entity.HasOne(d => d.Version)
                    .WithMany(p => p.MeetingVersionLink)
                    .HasForeignKey(d => d.Versionid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_changeversion_versionid_meeting_version_link");
            });

            modelBuilder.Entity<MutatieBestelaanvraag>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_bestelaanvraag");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_bestelaanvraag_importid");

                entity.HasIndex(e => e.MutAanvraagdatum)
                    .HasName("idx_mutatie_bestelaanvraag_mut_aanvraagdatum");

                entity.HasIndex(e => e.MutAanvraagdatumRid)
                    .HasName("idx_mutatie_bestelaanvraag_mut_aanvraagdatum_rid");

                entity.HasIndex(e => e.MutBehandelaarid)
                    .HasName("idx_mutatie_bestelaanvraag_mut_behandelaarid");

                entity.HasIndex(e => e.MutBehandelaaridRid)
                    .HasName("idx_mutatie_bestelaanvraag_mut_behandelaarid_rid");

                entity.HasIndex(e => e.MutGewensteleverdatum)
                    .HasName("idx_mutatie_bestelaanvraag_mut_gewensteleverdatum");

                entity.HasIndex(e => e.MutGewensteleverdatumRid)
                    .HasName("idx_mutatie_bestelaanvraag_mut_gewensteleverdatum_rid");

                entity.HasIndex(e => e.MutRappeldatum)
                    .HasName("idx_mutatie_bestelaanvraag_mut_rappeldatum");

                entity.HasIndex(e => e.MutRappeldatumRid)
                    .HasName("idx_mutatie_bestelaanvraag_mut_rappeldatum_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_bestelaanvraag_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_bestelaanvraag_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutAanvraagdatum)
                    .HasColumnName("mut_aanvraagdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutAanvraagdatumAct).HasColumnName("mut_aanvraagdatum_act");

                entity.Property(e => e.MutAanvraagdatumRid).HasColumnName("mut_aanvraagdatum_rid");

                entity.Property(e => e.MutBehandelaarid).HasColumnName("mut_behandelaarid");

                entity.Property(e => e.MutBehandelaaridAct).HasColumnName("mut_behandelaarid_act");

                entity.Property(e => e.MutBehandelaaridRid).HasColumnName("mut_behandelaarid_rid");

                entity.Property(e => e.MutGewensteleverdatum)
                    .HasColumnName("mut_gewensteleverdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutGewensteleverdatumAct).HasColumnName("mut_gewensteleverdatum_act");

                entity.Property(e => e.MutGewensteleverdatumRid).HasColumnName("mut_gewensteleverdatum_rid");

                entity.Property(e => e.MutRappeldatum)
                    .HasColumnName("mut_rappeldatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutRappeldatumAct).HasColumnName("mut_rappeldatum_act");

                entity.Property(e => e.MutRappeldatumRid).HasColumnName("mut_rappeldatum_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutAanvraagdatumR)
                    .WithMany(p => p.MutatieBestelaanvraagMutAanvraagdatumR)
                    .HasForeignKey(d => d.MutAanvraagdatumRid)
                    .HasConstraintName("fk_mutatiereden_mut_aanvraagdatum_rid_mutatie_bestelaanvraag");

                entity.HasOne(d => d.MutBehandelaar)
                    .WithMany(p => p.MutatieBestelaanvraag)
                    .HasForeignKey(d => d.MutBehandelaarid)
                    .HasConstraintName("fk_actiedoor_mut_behandelaarid_mutatie_bestelaanvraag");

                entity.HasOne(d => d.MutBehandelaaridR)
                    .WithMany(p => p.MutatieBestelaanvraagMutBehandelaaridR)
                    .HasForeignKey(d => d.MutBehandelaaridRid)
                    .HasConstraintName("fk_mutatiereden_mut_behandelaarid_rid_mutatie_bestelaanvraag");

                entity.HasOne(d => d.MutGewensteleverdatumR)
                    .WithMany(p => p.MutatieBestelaanvraagMutGewensteleverdatumR)
                    .HasForeignKey(d => d.MutGewensteleverdatumRid)
                    .HasConstraintName("fk_mutatiereden_mut_gewensteleverdatum_rid_mutatie_bestelaanvraag");

                entity.HasOne(d => d.MutRappeldatumR)
                    .WithMany(p => p.MutatieBestelaanvraagMutRappeldatumR)
                    .HasForeignKey(d => d.MutRappeldatumRid)
                    .HasConstraintName("fk_mutatiereden_mut_rappeldatum_rid_mutatie_bestelaanvraag");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieBestelaanvraag)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_bestelaanvraag_parentid_mutatie_bestelaanvraag");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieBestelaanvraag)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_bestelaanvraag");
            });

            modelBuilder.Entity<MutatieBestellingen>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_bestellingen");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_bestellingen_importid");

                entity.HasIndex(e => e.MutBehandelaarid)
                    .HasName("idx_mutatie_bestellingen_mut_behandelaarid");

                entity.HasIndex(e => e.MutBehandelaaridRid)
                    .HasName("idx_mutatie_bestellingen_mut_behandelaarid_rid");

                entity.HasIndex(e => e.MutBestelautorisatieid)
                    .HasName("idx_mutatie_bestellingen_mut_bestelautorisatieid");

                entity.HasIndex(e => e.MutBestelautorisatieidRid)
                    .HasName("idx_mutatie_bestellingen_mut_bestelautorisatieid_rid");

                entity.HasIndex(e => e.MutGeplandebesteldatum)
                    .HasName("idx_mutatie_bestellingen_mut_geplandebesteldatum");

                entity.HasIndex(e => e.MutGeplandebesteldatumRid)
                    .HasName("idx_mutatie_bestellingen_mut_geplandebesteldatum_rid");

                entity.HasIndex(e => e.MutOrdernrdatum)
                    .HasName("idx_mutatie_bestellingen_mut_ordernrdatum");

                entity.HasIndex(e => e.MutOrdernrdatumRid)
                    .HasName("idx_mutatie_bestellingen_mut_ordernrdatum_rid");

                entity.HasIndex(e => e.MutStatusid)
                    .HasName("idx_mutatie_bestellingen_mut_statusid");

                entity.HasIndex(e => e.MutStatusidRid)
                    .HasName("idx_mutatie_bestellingen_mut_statusid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_bestellingen_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_bestellingen_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutBehandelaarid).HasColumnName("mut_behandelaarid");

                entity.Property(e => e.MutBehandelaaridAct).HasColumnName("mut_behandelaarid_act");

                entity.Property(e => e.MutBehandelaaridRid).HasColumnName("mut_behandelaarid_rid");

                entity.Property(e => e.MutBestelautorisatieid).HasColumnName("mut_bestelautorisatieid");

                entity.Property(e => e.MutBestelautorisatieidAct).HasColumnName("mut_bestelautorisatieid_act");

                entity.Property(e => e.MutBestelautorisatieidRid).HasColumnName("mut_bestelautorisatieid_rid");

                entity.Property(e => e.MutGeplandebesteldatum)
                    .HasColumnName("mut_geplandebesteldatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutGeplandebesteldatumAct).HasColumnName("mut_geplandebesteldatum_act");

                entity.Property(e => e.MutGeplandebesteldatumRid).HasColumnName("mut_geplandebesteldatum_rid");

                entity.Property(e => e.MutOrdernrdatum)
                    .HasColumnName("mut_ordernrdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutOrdernrdatumAct).HasColumnName("mut_ordernrdatum_act");

                entity.Property(e => e.MutOrdernrdatumRid).HasColumnName("mut_ordernrdatum_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutStatusid).HasColumnName("mut_statusid");

                entity.Property(e => e.MutStatusidAct).HasColumnName("mut_statusid_act");

                entity.Property(e => e.MutStatusidRid).HasColumnName("mut_statusid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutBehandelaar)
                    .WithMany(p => p.MutatieBestellingenMutBehandelaar)
                    .HasForeignKey(d => d.MutBehandelaarid)
                    .HasConstraintName("fk_actiedoor_mut_behandelaarid_mutatie_bestellingen");

                entity.HasOne(d => d.MutBehandelaaridR)
                    .WithMany(p => p.MutatieBestellingenMutBehandelaaridR)
                    .HasForeignKey(d => d.MutBehandelaaridRid)
                    .HasConstraintName("fk_mutatiereden_mut_behandelaarid_rid_mutatie_bestellingen");

                entity.HasOne(d => d.MutBestelautorisatie)
                    .WithMany(p => p.MutatieBestellingenMutBestelautorisatie)
                    .HasForeignKey(d => d.MutBestelautorisatieid)
                    .HasConstraintName("fk_actiedoor_mut_bestelautorisatieid_mutatie_bestellingen");

                entity.HasOne(d => d.MutBestelautorisatieidR)
                    .WithMany(p => p.MutatieBestellingenMutBestelautorisatieidR)
                    .HasForeignKey(d => d.MutBestelautorisatieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_bestelautorisatieid_rid_mutatie_bestellingen");

                entity.HasOne(d => d.MutGeplandebesteldatumR)
                    .WithMany(p => p.MutatieBestellingenMutGeplandebesteldatumR)
                    .HasForeignKey(d => d.MutGeplandebesteldatumRid)
                    .HasConstraintName("fk_mutatiereden_mut_geplandebesteldatum_rid_mutatie_bestellingen");

                entity.HasOne(d => d.MutOrdernrdatumR)
                    .WithMany(p => p.MutatieBestellingenMutOrdernrdatumR)
                    .HasForeignKey(d => d.MutOrdernrdatumRid)
                    .HasConstraintName("fk_mutatiereden_mut_ordernrdatum_rid_mutatie_bestellingen");

                entity.HasOne(d => d.MutStatusNavigation)
                    .WithMany(p => p.MutatieBestellingen)
                    .HasForeignKey(d => d.MutStatusid)
                    .HasConstraintName("fk_bestelstatus_mut_statusid_mutatie_bestellingen");

                entity.HasOne(d => d.MutStatusidR)
                    .WithMany(p => p.MutatieBestellingenMutStatusidR)
                    .HasForeignKey(d => d.MutStatusidRid)
                    .HasConstraintName("fk_mutatiereden_mut_statusid_rid_mutatie_bestellingen");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieBestellingen)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_bestellingen_parentid_mutatie_bestellingen");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieBestellingen)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_bestellingen");
            });

            modelBuilder.Entity<MutatieChange>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_change");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_change_importid");

                entity.HasIndex(e => e.MutAuthorizationdate)
                    .HasName("idx_mutatie_change_mut_authorizationdate");

                entity.HasIndex(e => e.MutAuthorizationdateRid)
                    .HasName("idx_mutatie_change_mut_authorizationdate_rid");

                entity.HasIndex(e => e.MutBenefitid)
                    .HasName("idx_mutatie_change_mut_benefitid");

                entity.HasIndex(e => e.MutBenefitidRid)
                    .HasName("idx_mutatie_change_mut_benefitid_rid");

                entity.HasIndex(e => e.MutCloseddate)
                    .HasName("idx_mutatie_change_mut_closeddate");

                entity.HasIndex(e => e.MutCloseddateRid)
                    .HasName("idx_mutatie_change_mut_closeddate_rid");

                entity.HasIndex(e => e.MutCompleteddate)
                    .HasName("idx_mutatie_change_mut_completeddate");

                entity.HasIndex(e => e.MutCompleteddateRid)
                    .HasName("idx_mutatie_change_mut_completeddate_rid");

                entity.HasIndex(e => e.MutEvalAuthoperatorid)
                    .HasName("idx_mutatie_change_mut_eval_authoperatorid");

                entity.HasIndex(e => e.MutEvalAuthoperatoridRid)
                    .HasName("idx_mutatie_change_mut_eval_authoperatorid_rid");

                entity.HasIndex(e => e.MutEvalAuthpersonid)
                    .HasName("idx_mutatie_change_mut_eval_authpersonid");

                entity.HasIndex(e => e.MutEvalAuthpersonidRid)
                    .HasName("idx_mutatie_change_mut_eval_authpersonid_rid");

                entity.HasIndex(e => e.MutFinaldate)
                    .HasName("idx_mutatie_change_mut_finaldate");

                entity.HasIndex(e => e.MutFinaldateRid)
                    .HasName("idx_mutatie_change_mut_finaldate_rid");

                entity.HasIndex(e => e.MutImpactid)
                    .HasName("idx_mutatie_change_mut_impactid");

                entity.HasIndex(e => e.MutImpactidRid)
                    .HasName("idx_mutatie_change_mut_impactid_rid");

                entity.HasIndex(e => e.MutImplementationdate)
                    .HasName("idx_mutatie_change_mut_implementationdate");

                entity.HasIndex(e => e.MutImplementationdateRid)
                    .HasName("idx_mutatie_change_mut_implementationdate_rid");

                entity.HasIndex(e => e.MutManagerid)
                    .HasName("idx_mutatie_change_mut_managerid");

                entity.HasIndex(e => e.MutManageridRid)
                    .HasName("idx_mutatie_change_mut_managerid_rid");

                entity.HasIndex(e => e.MutMilestoneid)
                    .HasName("idx_mutatie_change_mut_milestoneid");

                entity.HasIndex(e => e.MutMilestoneidRid)
                    .HasName("idx_mutatie_change_mut_milestoneid_rid");

                entity.HasIndex(e => e.MutOperatorid)
                    .HasName("idx_mutatie_change_mut_operatorid");

                entity.HasIndex(e => e.MutOperatoridRid)
                    .HasName("idx_mutatie_change_mut_operatorid_rid");

                entity.HasIndex(e => e.MutPlannedauthdate)
                    .HasName("idx_mutatie_change_mut_plannedauthdate");

                entity.HasIndex(e => e.MutPlannedauthdateRid)
                    .HasName("idx_mutatie_change_mut_plannedauthdate_rid");

                entity.HasIndex(e => e.MutPriorityid)
                    .HasName("idx_mutatie_change_mut_priorityid");

                entity.HasIndex(e => e.MutPriorityidRid)
                    .HasName("idx_mutatie_change_mut_priorityid_rid");

                entity.HasIndex(e => e.MutProAuthoperatorid)
                    .HasName("idx_mutatie_change_mut_pro_authoperatorid");

                entity.HasIndex(e => e.MutProAuthoperatoridRid)
                    .HasName("idx_mutatie_change_mut_pro_authoperatorid_rid");

                entity.HasIndex(e => e.MutProAuthpersonid)
                    .HasName("idx_mutatie_change_mut_pro_authpersonid");

                entity.HasIndex(e => e.MutProAuthpersonidRid)
                    .HasName("idx_mutatie_change_mut_pro_authpersonid_rid");

                entity.HasIndex(e => e.MutReqAuthoperatorid)
                    .HasName("idx_mutatie_change_mut_req_authoperatorid");

                entity.HasIndex(e => e.MutReqAuthoperatoridRid)
                    .HasName("idx_mutatie_change_mut_req_authoperatorid_rid");

                entity.HasIndex(e => e.MutReqAuthpersonid)
                    .HasName("idx_mutatie_change_mut_req_authpersonid");

                entity.HasIndex(e => e.MutReqAuthpersonidRid)
                    .HasName("idx_mutatie_change_mut_req_authpersonid_rid");

                entity.HasIndex(e => e.MutStatusid)
                    .HasName("idx_mutatie_change_mut_statusid");

                entity.HasIndex(e => e.MutStatusidRid)
                    .HasName("idx_mutatie_change_mut_statusid_rid");

                entity.HasIndex(e => e.MutVersionid)
                    .HasName("idx_mutatie_change_mut_versionid");

                entity.HasIndex(e => e.MutVersionidRid)
                    .HasName("idx_mutatie_change_mut_versionid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_change_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_change_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bestedetijd).HasColumnName("bestedetijd");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutAuthorizationdate)
                    .HasColumnName("mut_authorizationdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutAuthorizationdateAct).HasColumnName("mut_authorizationdate_act");

                entity.Property(e => e.MutAuthorizationdateRid).HasColumnName("mut_authorizationdate_rid");

                entity.Property(e => e.MutBenefitid).HasColumnName("mut_benefitid");

                entity.Property(e => e.MutBenefitidAct).HasColumnName("mut_benefitid_act");

                entity.Property(e => e.MutBenefitidRid).HasColumnName("mut_benefitid_rid");

                entity.Property(e => e.MutCloseddate)
                    .HasColumnName("mut_closeddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutCloseddateAct).HasColumnName("mut_closeddate_act");

                entity.Property(e => e.MutCloseddateRid).HasColumnName("mut_closeddate_rid");

                entity.Property(e => e.MutCompleteddate)
                    .HasColumnName("mut_completeddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutCompleteddateAct).HasColumnName("mut_completeddate_act");

                entity.Property(e => e.MutCompleteddateRid).HasColumnName("mut_completeddate_rid");

                entity.Property(e => e.MutEvalAuthoperatorid).HasColumnName("mut_eval_authoperatorid");

                entity.Property(e => e.MutEvalAuthoperatoridAct).HasColumnName("mut_eval_authoperatorid_act");

                entity.Property(e => e.MutEvalAuthoperatoridRid).HasColumnName("mut_eval_authoperatorid_rid");

                entity.Property(e => e.MutEvalAuthpersonid).HasColumnName("mut_eval_authpersonid");

                entity.Property(e => e.MutEvalAuthpersonidAct).HasColumnName("mut_eval_authpersonid_act");

                entity.Property(e => e.MutEvalAuthpersonidRid).HasColumnName("mut_eval_authpersonid_rid");

                entity.Property(e => e.MutFinaldate)
                    .HasColumnName("mut_finaldate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutFinaldateAct).HasColumnName("mut_finaldate_act");

                entity.Property(e => e.MutFinaldateRid).HasColumnName("mut_finaldate_rid");

                entity.Property(e => e.MutImpactid).HasColumnName("mut_impactid");

                entity.Property(e => e.MutImpactidAct).HasColumnName("mut_impactid_act");

                entity.Property(e => e.MutImpactidRid).HasColumnName("mut_impactid_rid");

                entity.Property(e => e.MutImplementationdate)
                    .HasColumnName("mut_implementationdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutImplementationdateAct).HasColumnName("mut_implementationdate_act");

                entity.Property(e => e.MutImplementationdateRid).HasColumnName("mut_implementationdate_rid");

                entity.Property(e => e.MutManagerid).HasColumnName("mut_managerid");

                entity.Property(e => e.MutManageridAct).HasColumnName("mut_managerid_act");

                entity.Property(e => e.MutManageridRid).HasColumnName("mut_managerid_rid");

                entity.Property(e => e.MutMilestoneid).HasColumnName("mut_milestoneid");

                entity.Property(e => e.MutMilestoneidAct).HasColumnName("mut_milestoneid_act");

                entity.Property(e => e.MutMilestoneidRid).HasColumnName("mut_milestoneid_rid");

                entity.Property(e => e.MutOperatorid).HasColumnName("mut_operatorid");

                entity.Property(e => e.MutOperatoridAct).HasColumnName("mut_operatorid_act");

                entity.Property(e => e.MutOperatoridRid).HasColumnName("mut_operatorid_rid");

                entity.Property(e => e.MutPlannedauthdate)
                    .HasColumnName("mut_plannedauthdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutPlannedauthdateAct).HasColumnName("mut_plannedauthdate_act");

                entity.Property(e => e.MutPlannedauthdateRid).HasColumnName("mut_plannedauthdate_rid");

                entity.Property(e => e.MutPriorityid).HasColumnName("mut_priorityid");

                entity.Property(e => e.MutPriorityidAct).HasColumnName("mut_priorityid_act");

                entity.Property(e => e.MutPriorityidRid).HasColumnName("mut_priorityid_rid");

                entity.Property(e => e.MutProAuthoperatorid).HasColumnName("mut_pro_authoperatorid");

                entity.Property(e => e.MutProAuthoperatoridAct).HasColumnName("mut_pro_authoperatorid_act");

                entity.Property(e => e.MutProAuthoperatoridRid).HasColumnName("mut_pro_authoperatorid_rid");

                entity.Property(e => e.MutProAuthpersonid).HasColumnName("mut_pro_authpersonid");

                entity.Property(e => e.MutProAuthpersonidAct).HasColumnName("mut_pro_authpersonid_act");

                entity.Property(e => e.MutProAuthpersonidRid).HasColumnName("mut_pro_authpersonid_rid");

                entity.Property(e => e.MutReqAuthoperatorid).HasColumnName("mut_req_authoperatorid");

                entity.Property(e => e.MutReqAuthoperatoridAct).HasColumnName("mut_req_authoperatorid_act");

                entity.Property(e => e.MutReqAuthoperatoridRid).HasColumnName("mut_req_authoperatorid_rid");

                entity.Property(e => e.MutReqAuthpersonid).HasColumnName("mut_req_authpersonid");

                entity.Property(e => e.MutReqAuthpersonidAct).HasColumnName("mut_req_authpersonid_act");

                entity.Property(e => e.MutReqAuthpersonidRid).HasColumnName("mut_req_authpersonid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutStatusid).HasColumnName("mut_statusid");

                entity.Property(e => e.MutStatusidAct).HasColumnName("mut_statusid_act");

                entity.Property(e => e.MutStatusidRid).HasColumnName("mut_statusid_rid");

                entity.Property(e => e.MutVersionid).HasColumnName("mut_versionid");

                entity.Property(e => e.MutVersionidAct).HasColumnName("mut_versionid_act");

                entity.Property(e => e.MutVersionidRid).HasColumnName("mut_versionid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutAuthorizationdateR)
                    .WithMany(p => p.MutatieChangeMutAuthorizationdateR)
                    .HasForeignKey(d => d.MutAuthorizationdateRid)
                    .HasConstraintName("fk_mutatiereden_mut_authorizationdate_rid_mutatie_change");

                entity.HasOne(d => d.MutBenefit)
                    .WithMany(p => p.MutatieChange)
                    .HasForeignKey(d => d.MutBenefitid)
                    .HasConstraintName("fk_changebenefit_mut_benefitid_mutatie_change");

                entity.HasOne(d => d.MutBenefitidR)
                    .WithMany(p => p.MutatieChangeMutBenefitidR)
                    .HasForeignKey(d => d.MutBenefitidRid)
                    .HasConstraintName("fk_mutatiereden_mut_benefitid_rid_mutatie_change");

                entity.HasOne(d => d.MutCloseddateR)
                    .WithMany(p => p.MutatieChangeMutCloseddateR)
                    .HasForeignKey(d => d.MutCloseddateRid)
                    .HasConstraintName("fk_mutatiereden_mut_closeddate_rid_mutatie_change");

                entity.HasOne(d => d.MutCompleteddateR)
                    .WithMany(p => p.MutatieChangeMutCompleteddateR)
                    .HasForeignKey(d => d.MutCompleteddateRid)
                    .HasConstraintName("fk_mutatiereden_mut_completeddate_rid_mutatie_change");

                entity.HasOne(d => d.MutEvalAuthoperator)
                    .WithMany(p => p.MutatieChangeMutEvalAuthoperator)
                    .HasForeignKey(d => d.MutEvalAuthoperatorid)
                    .HasConstraintName("fk_actiedoor_mut_eval_authoperatorid_mutatie_change");

                entity.HasOne(d => d.MutEvalAuthoperatoridR)
                    .WithMany(p => p.MutatieChangeMutEvalAuthoperatoridR)
                    .HasForeignKey(d => d.MutEvalAuthoperatoridRid)
                    .HasConstraintName("fk_mutatiereden_mut_eval_authoperatorid_rid_mutatie_change");

                entity.HasOne(d => d.MutEvalAuthperson)
                    .WithMany(p => p.MutatieChangeMutEvalAuthperson)
                    .HasForeignKey(d => d.MutEvalAuthpersonid)
                    .HasConstraintName("fk_persoon_mut_eval_authpersonid_mutatie_change");

                entity.HasOne(d => d.MutEvalAuthpersonidR)
                    .WithMany(p => p.MutatieChangeMutEvalAuthpersonidR)
                    .HasForeignKey(d => d.MutEvalAuthpersonidRid)
                    .HasConstraintName("fk_mutatiereden_mut_eval_authpersonid_rid_mutatie_change");

                entity.HasOne(d => d.MutFinaldateR)
                    .WithMany(p => p.MutatieChangeMutFinaldateR)
                    .HasForeignKey(d => d.MutFinaldateRid)
                    .HasConstraintName("fk_mutatiereden_mut_finaldate_rid_mutatie_change");

                entity.HasOne(d => d.MutImpact)
                    .WithMany(p => p.MutatieChange)
                    .HasForeignKey(d => d.MutImpactid)
                    .HasConstraintName("fk_wijziging_impact_mut_impactid_mutatie_change");

                entity.HasOne(d => d.MutImpactidR)
                    .WithMany(p => p.MutatieChangeMutImpactidR)
                    .HasForeignKey(d => d.MutImpactidRid)
                    .HasConstraintName("fk_mutatiereden_mut_impactid_rid_mutatie_change");

                entity.HasOne(d => d.MutImplementationdateR)
                    .WithMany(p => p.MutatieChangeMutImplementationdateR)
                    .HasForeignKey(d => d.MutImplementationdateRid)
                    .HasConstraintName("fk_mutatiereden_mut_implementationdate_rid_mutatie_change");

                entity.HasOne(d => d.MutManager)
                    .WithMany(p => p.MutatieChangeMutManager)
                    .HasForeignKey(d => d.MutManagerid)
                    .HasConstraintName("fk_actiedoor_mut_managerid_mutatie_change");

                entity.HasOne(d => d.MutManageridR)
                    .WithMany(p => p.MutatieChangeMutManageridR)
                    .HasForeignKey(d => d.MutManageridRid)
                    .HasConstraintName("fk_mutatiereden_mut_managerid_rid_mutatie_change");

                entity.HasOne(d => d.MutMilestone)
                    .WithMany(p => p.MutatieChangeMutMilestone)
                    .HasForeignKey(d => d.MutMilestoneid)
                    .HasConstraintName("fk_changeversion_mut_milestoneid_mutatie_change");

                entity.HasOne(d => d.MutMilestoneidR)
                    .WithMany(p => p.MutatieChangeMutMilestoneidR)
                    .HasForeignKey(d => d.MutMilestoneidRid)
                    .HasConstraintName("fk_mutatiereden_mut_milestoneid_rid_mutatie_change");

                entity.HasOne(d => d.MutOperator)
                    .WithMany(p => p.MutatieChangeMutOperator)
                    .HasForeignKey(d => d.MutOperatorid)
                    .HasConstraintName("fk_actiedoor_mut_operatorid_mutatie_change");

                entity.HasOne(d => d.MutOperatoridR)
                    .WithMany(p => p.MutatieChangeMutOperatoridR)
                    .HasForeignKey(d => d.MutOperatoridRid)
                    .HasConstraintName("fk_mutatiereden_mut_operatorid_rid_mutatie_change");

                entity.HasOne(d => d.MutPlannedauthdateR)
                    .WithMany(p => p.MutatieChangeMutPlannedauthdateR)
                    .HasForeignKey(d => d.MutPlannedauthdateRid)
                    .HasConstraintName("fk_mutatiereden_mut_plannedauthdate_rid_mutatie_change");

                entity.HasOne(d => d.MutPriority)
                    .WithMany(p => p.MutatieChange)
                    .HasForeignKey(d => d.MutPriorityid)
                    .HasConstraintName("fk_change_priority_mut_priorityid_mutatie_change");

                entity.HasOne(d => d.MutPriorityidR)
                    .WithMany(p => p.MutatieChangeMutPriorityidR)
                    .HasForeignKey(d => d.MutPriorityidRid)
                    .HasConstraintName("fk_mutatiereden_mut_priorityid_rid_mutatie_change");

                entity.HasOne(d => d.MutProAuthoperator)
                    .WithMany(p => p.MutatieChangeMutProAuthoperator)
                    .HasForeignKey(d => d.MutProAuthoperatorid)
                    .HasConstraintName("fk_actiedoor_mut_pro_authoperatorid_mutatie_change");

                entity.HasOne(d => d.MutProAuthoperatoridR)
                    .WithMany(p => p.MutatieChangeMutProAuthoperatoridR)
                    .HasForeignKey(d => d.MutProAuthoperatoridRid)
                    .HasConstraintName("fk_mutatiereden_mut_pro_authoperatorid_rid_mutatie_change");

                entity.HasOne(d => d.MutProAuthperson)
                    .WithMany(p => p.MutatieChangeMutProAuthperson)
                    .HasForeignKey(d => d.MutProAuthpersonid)
                    .HasConstraintName("fk_persoon_mut_pro_authpersonid_mutatie_change");

                entity.HasOne(d => d.MutProAuthpersonidR)
                    .WithMany(p => p.MutatieChangeMutProAuthpersonidR)
                    .HasForeignKey(d => d.MutProAuthpersonidRid)
                    .HasConstraintName("fk_mutatiereden_mut_pro_authpersonid_rid_mutatie_change");

                entity.HasOne(d => d.MutReqAuthoperator)
                    .WithMany(p => p.MutatieChangeMutReqAuthoperator)
                    .HasForeignKey(d => d.MutReqAuthoperatorid)
                    .HasConstraintName("fk_actiedoor_mut_req_authoperatorid_mutatie_change");

                entity.HasOne(d => d.MutReqAuthoperatoridR)
                    .WithMany(p => p.MutatieChangeMutReqAuthoperatoridR)
                    .HasForeignKey(d => d.MutReqAuthoperatoridRid)
                    .HasConstraintName("fk_mutatiereden_mut_req_authoperatorid_rid_mutatie_change");

                entity.HasOne(d => d.MutReqAuthperson)
                    .WithMany(p => p.MutatieChangeMutReqAuthperson)
                    .HasForeignKey(d => d.MutReqAuthpersonid)
                    .HasConstraintName("fk_persoon_mut_req_authpersonid_mutatie_change");

                entity.HasOne(d => d.MutReqAuthpersonidR)
                    .WithMany(p => p.MutatieChangeMutReqAuthpersonidR)
                    .HasForeignKey(d => d.MutReqAuthpersonidRid)
                    .HasConstraintName("fk_mutatiereden_mut_req_authpersonid_rid_mutatie_change");

                entity.HasOne(d => d.MutStatusNavigation)
                    .WithMany(p => p.MutatieChange)
                    .HasForeignKey(d => d.MutStatusid)
                    .HasConstraintName("fk_wijzigingstatus_mut_statusid_mutatie_change");

                entity.HasOne(d => d.MutStatusidR)
                    .WithMany(p => p.MutatieChangeMutStatusidR)
                    .HasForeignKey(d => d.MutStatusidRid)
                    .HasConstraintName("fk_mutatiereden_mut_statusid_rid_mutatie_change");

                entity.HasOne(d => d.MutVersion)
                    .WithMany(p => p.MutatieChangeMutVersion)
                    .HasForeignKey(d => d.MutVersionid)
                    .HasConstraintName("fk_changeversion_mut_versionid_mutatie_change");

                entity.HasOne(d => d.MutVersionidR)
                    .WithMany(p => p.MutatieChangeMutVersionidR)
                    .HasForeignKey(d => d.MutVersionidRid)
                    .HasConstraintName("fk_mutatiereden_mut_versionid_rid_mutatie_change");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieChange)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_change_parentid_mutatie_change");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieChange)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_change");
            });

            modelBuilder.Entity<MutatieChangeactivity>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_changeactivity");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_changeactivity_importid");

                entity.HasIndex(e => e.MutActivitystatusid)
                    .HasName("idx_mutatie_changeactivity_mut_activitystatusid");

                entity.HasIndex(e => e.MutActivitystatusidRid)
                    .HasName("idx_mutatie_changeactivity_mut_activitystatusid_rid");

                entity.HasIndex(e => e.MutApproveddate)
                    .HasName("idx_mutatie_changeactivity_mut_approveddate");

                entity.HasIndex(e => e.MutApproveddateRid)
                    .HasName("idx_mutatie_changeactivity_mut_approveddate_rid");

                entity.HasIndex(e => e.MutDecidedbypersonid)
                    .HasName("idx_mutatie_changeactivity_mut_decidedbypersonid");

                entity.HasIndex(e => e.MutDecidedbypersonidRid)
                    .HasName("idx_mutatie_changeactivity_mut_decidedbypersonid_rid");

                entity.HasIndex(e => e.MutMilestoneid)
                    .HasName("idx_mutatie_changeactivity_mut_milestoneid");

                entity.HasIndex(e => e.MutMilestoneidRid)
                    .HasName("idx_mutatie_changeactivity_mut_milestoneid_rid");

                entity.HasIndex(e => e.MutOperatorgroupid)
                    .HasName("idx_mutatie_changeactivity_mut_operatorgroupid");

                entity.HasIndex(e => e.MutOperatorgroupidRid)
                    .HasName("idx_mutatie_changeactivity_mut_operatorgroupid_rid");

                entity.HasIndex(e => e.MutOperatorid)
                    .HasName("idx_mutatie_changeactivity_mut_operatorid");

                entity.HasIndex(e => e.MutOperatoridRid)
                    .HasName("idx_mutatie_changeactivity_mut_operatorid_rid");

                entity.HasIndex(e => e.MutRejecteddate)
                    .HasName("idx_mutatie_changeactivity_mut_rejecteddate");

                entity.HasIndex(e => e.MutRejecteddateRid)
                    .HasName("idx_mutatie_changeactivity_mut_rejecteddate_rid");

                entity.HasIndex(e => e.MutRejectionreasonid)
                    .HasName("idx_mutatie_changeactivity_mut_rejectionreasonid");

                entity.HasIndex(e => e.MutRejectionreasonidRid)
                    .HasName("idx_mutatie_changeactivity_mut_rejectionreasonid_rid");

                entity.HasIndex(e => e.MutResolveddate)
                    .HasName("idx_mutatie_changeactivity_mut_resolveddate");

                entity.HasIndex(e => e.MutResolveddateRid)
                    .HasName("idx_mutatie_changeactivity_mut_resolveddate_rid");

                entity.HasIndex(e => e.MutSkippeddate)
                    .HasName("idx_mutatie_changeactivity_mut_skippeddate");

                entity.HasIndex(e => e.MutSkippeddateRid)
                    .HasName("idx_mutatie_changeactivity_mut_skippeddate_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_changeactivity_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_changeactivity_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bestedetijd).HasColumnName("bestedetijd");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutActivitystatusid).HasColumnName("mut_activitystatusid");

                entity.Property(e => e.MutActivitystatusidAct).HasColumnName("mut_activitystatusid_act");

                entity.Property(e => e.MutActivitystatusidRid).HasColumnName("mut_activitystatusid_rid");

                entity.Property(e => e.MutApproveddate)
                    .HasColumnName("mut_approveddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutApproveddateAct).HasColumnName("mut_approveddate_act");

                entity.Property(e => e.MutApproveddateRid).HasColumnName("mut_approveddate_rid");

                entity.Property(e => e.MutDecidedbypersonid).HasColumnName("mut_decidedbypersonid");

                entity.Property(e => e.MutDecidedbypersonidAct).HasColumnName("mut_decidedbypersonid_act");

                entity.Property(e => e.MutDecidedbypersonidRid).HasColumnName("mut_decidedbypersonid_rid");

                entity.Property(e => e.MutMilestoneid).HasColumnName("mut_milestoneid");

                entity.Property(e => e.MutMilestoneidAct).HasColumnName("mut_milestoneid_act");

                entity.Property(e => e.MutMilestoneidRid).HasColumnName("mut_milestoneid_rid");

                entity.Property(e => e.MutOperatorgroupid).HasColumnName("mut_operatorgroupid");

                entity.Property(e => e.MutOperatorgroupidAct).HasColumnName("mut_operatorgroupid_act");

                entity.Property(e => e.MutOperatorgroupidRid).HasColumnName("mut_operatorgroupid_rid");

                entity.Property(e => e.MutOperatorid).HasColumnName("mut_operatorid");

                entity.Property(e => e.MutOperatoridAct).HasColumnName("mut_operatorid_act");

                entity.Property(e => e.MutOperatoridRid).HasColumnName("mut_operatorid_rid");

                entity.Property(e => e.MutRejecteddate)
                    .HasColumnName("mut_rejecteddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutRejecteddateAct).HasColumnName("mut_rejecteddate_act");

                entity.Property(e => e.MutRejecteddateRid).HasColumnName("mut_rejecteddate_rid");

                entity.Property(e => e.MutRejectionreasonid).HasColumnName("mut_rejectionreasonid");

                entity.Property(e => e.MutRejectionreasonidAct).HasColumnName("mut_rejectionreasonid_act");

                entity.Property(e => e.MutRejectionreasonidRid).HasColumnName("mut_rejectionreasonid_rid");

                entity.Property(e => e.MutResolveddate)
                    .HasColumnName("mut_resolveddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutResolveddateAct).HasColumnName("mut_resolveddate_act");

                entity.Property(e => e.MutResolveddateRid).HasColumnName("mut_resolveddate_rid");

                entity.Property(e => e.MutSkippeddate)
                    .HasColumnName("mut_skippeddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutSkippeddateAct).HasColumnName("mut_skippeddate_act");

                entity.Property(e => e.MutSkippeddateRid).HasColumnName("mut_skippeddate_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutActivitystatus)
                    .WithMany(p => p.MutatieChangeactivity)
                    .HasForeignKey(d => d.MutActivitystatusid)
                    .HasConstraintName("fk_changeactivity_status_mut_activitystatusid_mutatie_changeactivity");

                entity.HasOne(d => d.MutActivitystatusidR)
                    .WithMany(p => p.MutatieChangeactivityMutActivitystatusidR)
                    .HasForeignKey(d => d.MutActivitystatusidRid)
                    .HasConstraintName("fk_mutatiereden_mut_activitystatusid_rid_mutatie_changeactivity");

                entity.HasOne(d => d.MutApproveddateR)
                    .WithMany(p => p.MutatieChangeactivityMutApproveddateR)
                    .HasForeignKey(d => d.MutApproveddateRid)
                    .HasConstraintName("fk_mutatiereden_mut_approveddate_rid_mutatie_changeactivity");

                entity.HasOne(d => d.MutDecidedbyperson)
                    .WithMany(p => p.MutatieChangeactivity)
                    .HasForeignKey(d => d.MutDecidedbypersonid)
                    .HasConstraintName("fk_persoon_mut_decidedbypersonid_mutatie_changeactivity");

                entity.HasOne(d => d.MutDecidedbypersonidR)
                    .WithMany(p => p.MutatieChangeactivityMutDecidedbypersonidR)
                    .HasForeignKey(d => d.MutDecidedbypersonidRid)
                    .HasConstraintName("fk_mutatiereden_mut_decidedbypersonid_rid_mutatie_changeactivity");

                entity.HasOne(d => d.MutMilestone)
                    .WithMany(p => p.MutatieChangeactivity)
                    .HasForeignKey(d => d.MutMilestoneid)
                    .HasConstraintName("fk_changeversion_mut_milestoneid_mutatie_changeactivity");

                entity.HasOne(d => d.MutMilestoneidR)
                    .WithMany(p => p.MutatieChangeactivityMutMilestoneidR)
                    .HasForeignKey(d => d.MutMilestoneidRid)
                    .HasConstraintName("fk_mutatiereden_mut_milestoneid_rid_mutatie_changeactivity");

                entity.HasOne(d => d.MutOperatorgroup)
                    .WithMany(p => p.MutatieChangeactivityMutOperatorgroup)
                    .HasForeignKey(d => d.MutOperatorgroupid)
                    .HasConstraintName("fk_actiedoor_mut_operatorgroupid_mutatie_changeactivity");

                entity.HasOne(d => d.MutOperatorgroupidR)
                    .WithMany(p => p.MutatieChangeactivityMutOperatorgroupidR)
                    .HasForeignKey(d => d.MutOperatorgroupidRid)
                    .HasConstraintName("fk_mutatiereden_mut_operatorgroupid_rid_mutatie_changeactivity");

                entity.HasOne(d => d.MutOperator)
                    .WithMany(p => p.MutatieChangeactivityMutOperator)
                    .HasForeignKey(d => d.MutOperatorid)
                    .HasConstraintName("fk_actiedoor_mut_operatorid_mutatie_changeactivity");

                entity.HasOne(d => d.MutOperatoridR)
                    .WithMany(p => p.MutatieChangeactivityMutOperatoridR)
                    .HasForeignKey(d => d.MutOperatoridRid)
                    .HasConstraintName("fk_mutatiereden_mut_operatorid_rid_mutatie_changeactivity");

                entity.HasOne(d => d.MutRejecteddateR)
                    .WithMany(p => p.MutatieChangeactivityMutRejecteddateR)
                    .HasForeignKey(d => d.MutRejecteddateRid)
                    .HasConstraintName("fk_mutatiereden_mut_rejecteddate_rid_mutatie_changeactivity");

                entity.HasOne(d => d.MutRejectionreason)
                    .WithMany(p => p.MutatieChangeactivity)
                    .HasForeignKey(d => d.MutRejectionreasonid)
                    .HasConstraintName("fk_changeactivity_rejectionreason_mut_rejectionreasonid_mutatie_changeactivity");

                entity.HasOne(d => d.MutRejectionreasonidR)
                    .WithMany(p => p.MutatieChangeactivityMutRejectionreasonidR)
                    .HasForeignKey(d => d.MutRejectionreasonidRid)
                    .HasConstraintName("fk_mutatiereden_mut_rejectionreasonid_rid_mutatie_changeactivity");

                entity.HasOne(d => d.MutResolveddateR)
                    .WithMany(p => p.MutatieChangeactivityMutResolveddateR)
                    .HasForeignKey(d => d.MutResolveddateRid)
                    .HasConstraintName("fk_mutatiereden_mut_resolveddate_rid_mutatie_changeactivity");

                entity.HasOne(d => d.MutSkippeddateR)
                    .WithMany(p => p.MutatieChangeactivityMutSkippeddateR)
                    .HasForeignKey(d => d.MutSkippeddateRid)
                    .HasConstraintName("fk_mutatiereden_mut_skippeddate_rid_mutatie_changeactivity");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieChangeactivity)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_changeactivity_parentid_mutatie_changeactivity");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieChangeactivity)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_changeactivity");
            });

            modelBuilder.Entity<MutatieChangeversion>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_changeversion");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_changeversion_importid");

                entity.HasIndex(e => e.MutFreezedate)
                    .HasName("idx_mutatie_changeversion_mut_freezedate");

                entity.HasIndex(e => e.MutFreezedateRid)
                    .HasName("idx_mutatie_changeversion_mut_freezedate_rid");

                entity.HasIndex(e => e.MutOperatorid)
                    .HasName("idx_mutatie_changeversion_mut_operatorid");

                entity.HasIndex(e => e.MutOperatoridRid)
                    .HasName("idx_mutatie_changeversion_mut_operatorid_rid");

                entity.HasIndex(e => e.MutPlannedimpldate)
                    .HasName("idx_mutatie_changeversion_mut_plannedimpldate");

                entity.HasIndex(e => e.MutPlannedimpldateRid)
                    .HasName("idx_mutatie_changeversion_mut_plannedimpldate_rid");

                entity.HasIndex(e => e.MutStatusid)
                    .HasName("idx_mutatie_changeversion_mut_statusid");

                entity.HasIndex(e => e.MutStatusidRid)
                    .HasName("idx_mutatie_changeversion_mut_statusid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_changeversion_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_changeversion_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutFreezedate)
                    .HasColumnName("mut_freezedate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutFreezedateAct).HasColumnName("mut_freezedate_act");

                entity.Property(e => e.MutFreezedateRid).HasColumnName("mut_freezedate_rid");

                entity.Property(e => e.MutOperatorid).HasColumnName("mut_operatorid");

                entity.Property(e => e.MutOperatoridAct).HasColumnName("mut_operatorid_act");

                entity.Property(e => e.MutOperatoridRid).HasColumnName("mut_operatorid_rid");

                entity.Property(e => e.MutPlannedimpldate)
                    .HasColumnName("mut_plannedimpldate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutPlannedimpldateAct).HasColumnName("mut_plannedimpldate_act");

                entity.Property(e => e.MutPlannedimpldateRid).HasColumnName("mut_plannedimpldate_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutStatusid).HasColumnName("mut_statusid");

                entity.Property(e => e.MutStatusidAct).HasColumnName("mut_statusid_act");

                entity.Property(e => e.MutStatusidRid).HasColumnName("mut_statusid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutFreezedateR)
                    .WithMany(p => p.MutatieChangeversionMutFreezedateR)
                    .HasForeignKey(d => d.MutFreezedateRid)
                    .HasConstraintName("fk_mutatiereden_mut_freezedate_rid_mutatie_changeversion");

                entity.HasOne(d => d.MutOperator)
                    .WithMany(p => p.MutatieChangeversion)
                    .HasForeignKey(d => d.MutOperatorid)
                    .HasConstraintName("fk_actiedoor_mut_operatorid_mutatie_changeversion");

                entity.HasOne(d => d.MutOperatoridR)
                    .WithMany(p => p.MutatieChangeversionMutOperatoridR)
                    .HasForeignKey(d => d.MutOperatoridRid)
                    .HasConstraintName("fk_mutatiereden_mut_operatorid_rid_mutatie_changeversion");

                entity.HasOne(d => d.MutPlannedimpldateR)
                    .WithMany(p => p.MutatieChangeversionMutPlannedimpldateR)
                    .HasForeignKey(d => d.MutPlannedimpldateRid)
                    .HasConstraintName("fk_mutatiereden_mut_plannedimpldate_rid_mutatie_changeversion");

                entity.HasOne(d => d.MutStatusNavigation)
                    .WithMany(p => p.MutatieChangeversion)
                    .HasForeignKey(d => d.MutStatusid)
                    .HasConstraintName("fk_wijzigingstatus_mut_statusid_mutatie_changeversion");

                entity.HasOne(d => d.MutStatusidR)
                    .WithMany(p => p.MutatieChangeversionMutStatusidR)
                    .HasForeignKey(d => d.MutStatusidRid)
                    .HasConstraintName("fk_mutatiereden_mut_statusid_rid_mutatie_changeversion");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieChangeversion)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_changeversion_parentid_mutatie_changeversion");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieChangeversion)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_changeversion");
            });

            modelBuilder.Entity<MutatieConfiguratie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_configuratie");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_mutatie_configuratie_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_configuratie_importid");

                entity.HasIndex(e => e.MutPersoongroepid)
                    .HasName("idx_mutatie_configuratie_mut_persoongroepid");

                entity.HasIndex(e => e.MutPersoongroepidRid)
                    .HasName("idx_mutatie_configuratie_mut_persoongroepid_rid");

                entity.HasIndex(e => e.MutPersoonid)
                    .HasName("idx_mutatie_configuratie_mut_persoonid");

                entity.HasIndex(e => e.MutPersoonidRid)
                    .HasName("idx_mutatie_configuratie_mut_persoonid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_configuratie_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_configuratie_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutPersoongroepid).HasColumnName("mut_persoongroepid");

                entity.Property(e => e.MutPersoongroepidAct).HasColumnName("mut_persoongroepid_act");

                entity.Property(e => e.MutPersoongroepidRid).HasColumnName("mut_persoongroepid_rid");

                entity.Property(e => e.MutPersoonid).HasColumnName("mut_persoonid");

                entity.Property(e => e.MutPersoonidAct).HasColumnName("mut_persoonid_act");

                entity.Property(e => e.MutPersoonidRid).HasColumnName("mut_persoonid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutPersoongroep)
                    .WithMany(p => p.MutatieConfiguratie)
                    .HasForeignKey(d => d.MutPersoongroepid)
                    .HasConstraintName("fk_persoongroep_mut_persoongroepid_mutatie_configuratie");

                entity.HasOne(d => d.MutPersoongroepidR)
                    .WithMany(p => p.MutatieConfiguratieMutPersoongroepidR)
                    .HasForeignKey(d => d.MutPersoongroepidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoongroepid_rid_mutatie_configuratie");

                entity.HasOne(d => d.MutPersoon)
                    .WithMany(p => p.MutatieConfiguratie)
                    .HasForeignKey(d => d.MutPersoonid)
                    .HasConstraintName("fk_persoon_mut_persoonid_mutatie_configuratie");

                entity.HasOne(d => d.MutPersoonidR)
                    .WithMany(p => p.MutatieConfiguratieMutPersoonidR)
                    .HasForeignKey(d => d.MutPersoonidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoonid_rid_mutatie_configuratie");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieConfiguratie)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_configuratie_parentid_mutatie_configuratie");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieConfiguratie)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_configuratie");
            });

            modelBuilder.Entity<MutatieDnocontract>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_dnocontract");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_dnocontract_importid");

                entity.HasIndex(e => e.MutBehandelaarid)
                    .HasName("idx_mutatie_dnocontract_mut_behandelaarid");

                entity.HasIndex(e => e.MutBehandelaaridRid)
                    .HasName("idx_mutatie_dnocontract_mut_behandelaarid_rid");

                entity.HasIndex(e => e.MutContractstatusid)
                    .HasName("idx_mutatie_dnocontract_mut_contractstatusid");

                entity.HasIndex(e => e.MutContractstatusidRid)
                    .HasName("idx_mutatie_dnocontract_mut_contractstatusid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_dnocontract_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_dnocontract_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutBehandelaarid).HasColumnName("mut_behandelaarid");

                entity.Property(e => e.MutBehandelaaridAct).HasColumnName("mut_behandelaarid_act");

                entity.Property(e => e.MutBehandelaaridRid).HasColumnName("mut_behandelaarid_rid");

                entity.Property(e => e.MutContractstatusid).HasColumnName("mut_contractstatusid");

                entity.Property(e => e.MutContractstatusidAct).HasColumnName("mut_contractstatusid_act");

                entity.Property(e => e.MutContractstatusidRid).HasColumnName("mut_contractstatusid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutBehandelaar)
                    .WithMany(p => p.MutatieDnocontract)
                    .HasForeignKey(d => d.MutBehandelaarid)
                    .HasConstraintName("fk_actiedoor_mut_behandelaarid_mutatie_dnocontract");

                entity.HasOne(d => d.MutBehandelaaridR)
                    .WithMany(p => p.MutatieDnocontractMutBehandelaaridR)
                    .HasForeignKey(d => d.MutBehandelaaridRid)
                    .HasConstraintName("fk_mutatiereden_mut_behandelaarid_rid_mutatie_dnocontract");

                entity.HasOne(d => d.MutContractstatus)
                    .WithMany(p => p.MutatieDnocontract)
                    .HasForeignKey(d => d.MutContractstatusid)
                    .HasConstraintName("fk_dnocontractstatus_mut_contractstatusid_mutatie_dnocontract");

                entity.HasOne(d => d.MutContractstatusidR)
                    .WithMany(p => p.MutatieDnocontractMutContractstatusidR)
                    .HasForeignKey(d => d.MutContractstatusidRid)
                    .HasConstraintName("fk_mutatiereden_mut_contractstatusid_rid_mutatie_dnocontract");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieDnocontract)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_dnocontract_parentid_mutatie_dnocontract");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieDnocontract)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_dnocontract");
            });

            modelBuilder.Entity<MutatieDnodienst>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_dnodienst");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_dnodienst_importid");

                entity.HasIndex(e => e.MutDnodienstsoortid)
                    .HasName("idx_mutatie_dnodienst_mut_dnodienstsoortid");

                entity.HasIndex(e => e.MutDnodienstsoortidRid)
                    .HasName("idx_mutatie_dnodienst_mut_dnodienstsoortid_rid");

                entity.HasIndex(e => e.MutDomeinid)
                    .HasName("idx_mutatie_dnodienst_mut_domeinid");

                entity.HasIndex(e => e.MutDomeinidRid)
                    .HasName("idx_mutatie_dnodienst_mut_domeinid_rid");

                entity.HasIndex(e => e.MutPublishedRid)
                    .HasName("idx_mutatie_dnodienst_mut_published_rid");

                entity.HasIndex(e => e.MutSoortmeldingid)
                    .HasName("idx_mutatie_dnodienst_mut_soortmeldingid");

                entity.HasIndex(e => e.MutSoortmeldingidRid)
                    .HasName("idx_mutatie_dnodienst_mut_soortmeldingid_rid");

                entity.HasIndex(e => e.MutSpecificatieid)
                    .HasName("idx_mutatie_dnodienst_mut_specificatieid");

                entity.HasIndex(e => e.MutSpecificatieidRid)
                    .HasName("idx_mutatie_dnodienst_mut_specificatieid_rid");

                entity.HasIndex(e => e.MutUnderpinningcontractid)
                    .HasName("idx_mutatie_dnodienst_mut_underpinningcontractid");

                entity.HasIndex(e => e.MutUnderpinningcontractidRid)
                    .HasName("idx_mutatie_dnodienst_mut_underpinningcontractid_rid");

                entity.HasIndex(e => e.MutUnderpinningdienstid)
                    .HasName("idx_mutatie_dnodienst_mut_underpinningdienstid");

                entity.HasIndex(e => e.MutUnderpinningdienstidRid)
                    .HasName("idx_mutatie_dnodienst_mut_underpinningdienstid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_dnodienst_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_dnodienst_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutDnodienstsoortid).HasColumnName("mut_dnodienstsoortid");

                entity.Property(e => e.MutDnodienstsoortidAct).HasColumnName("mut_dnodienstsoortid_act");

                entity.Property(e => e.MutDnodienstsoortidRid).HasColumnName("mut_dnodienstsoortid_rid");

                entity.Property(e => e.MutDomeinid).HasColumnName("mut_domeinid");

                entity.Property(e => e.MutDomeinidAct).HasColumnName("mut_domeinid_act");

                entity.Property(e => e.MutDomeinidRid).HasColumnName("mut_domeinid_rid");

                entity.Property(e => e.MutPublished).HasColumnName("mut_published");

                entity.Property(e => e.MutPublishedAct).HasColumnName("mut_published_act");

                entity.Property(e => e.MutPublishedRid).HasColumnName("mut_published_rid");

                entity.Property(e => e.MutSoortmeldingid).HasColumnName("mut_soortmeldingid");

                entity.Property(e => e.MutSoortmeldingidAct).HasColumnName("mut_soortmeldingid_act");

                entity.Property(e => e.MutSoortmeldingidRid).HasColumnName("mut_soortmeldingid_rid");

                entity.Property(e => e.MutSpecificatieid).HasColumnName("mut_specificatieid");

                entity.Property(e => e.MutSpecificatieidAct).HasColumnName("mut_specificatieid_act");

                entity.Property(e => e.MutSpecificatieidRid).HasColumnName("mut_specificatieid_rid");

                entity.Property(e => e.MutUnderpinningcontractid).HasColumnName("mut_underpinningcontractid");

                entity.Property(e => e.MutUnderpinningcontractidAct).HasColumnName("mut_underpinningcontractid_act");

                entity.Property(e => e.MutUnderpinningcontractidRid).HasColumnName("mut_underpinningcontractid_rid");

                entity.Property(e => e.MutUnderpinningdienstid).HasColumnName("mut_underpinningdienstid");

                entity.Property(e => e.MutUnderpinningdienstidAct).HasColumnName("mut_underpinningdienstid_act");

                entity.Property(e => e.MutUnderpinningdienstidRid).HasColumnName("mut_underpinningdienstid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutDnodienstsoort)
                    .WithMany(p => p.MutatieDnodienst)
                    .HasForeignKey(d => d.MutDnodienstsoortid)
                    .HasConstraintName("fk_dnodienstsoort_mut_dnodienstsoortid_mutatie_dnodienst");

                entity.HasOne(d => d.MutDnodienstsoortidR)
                    .WithMany(p => p.MutatieDnodienstMutDnodienstsoortidR)
                    .HasForeignKey(d => d.MutDnodienstsoortidRid)
                    .HasConstraintName("fk_mutatiereden_mut_dnodienstsoortid_rid_mutatie_dnodienst");

                entity.HasOne(d => d.MutDomein)
                    .WithMany(p => p.MutatieDnodienstMutDomein)
                    .HasForeignKey(d => d.MutDomeinid)
                    .HasConstraintName("fk_classificatie_mut_domeinid_mutatie_dnodienst");

                entity.HasOne(d => d.MutDomeinidR)
                    .WithMany(p => p.MutatieDnodienstMutDomeinidR)
                    .HasForeignKey(d => d.MutDomeinidRid)
                    .HasConstraintName("fk_mutatiereden_mut_domeinid_rid_mutatie_dnodienst");

                entity.HasOne(d => d.MutPublishedR)
                    .WithMany(p => p.MutatieDnodienstMutPublishedR)
                    .HasForeignKey(d => d.MutPublishedRid)
                    .HasConstraintName("fk_mutatiereden_mut_published_rid_mutatie_dnodienst");

                entity.HasOne(d => d.MutSoortmelding)
                    .WithMany(p => p.MutatieDnodienst)
                    .HasForeignKey(d => d.MutSoortmeldingid)
                    .HasConstraintName("fk_soortmelding_mut_soortmeldingid_mutatie_dnodienst");

                entity.HasOne(d => d.MutSoortmeldingidR)
                    .WithMany(p => p.MutatieDnodienstMutSoortmeldingidR)
                    .HasForeignKey(d => d.MutSoortmeldingidRid)
                    .HasConstraintName("fk_mutatiereden_mut_soortmeldingid_rid_mutatie_dnodienst");

                entity.HasOne(d => d.MutSpecificatie)
                    .WithMany(p => p.MutatieDnodienstMutSpecificatie)
                    .HasForeignKey(d => d.MutSpecificatieid)
                    .HasConstraintName("fk_classificatie_mut_specificatieid_mutatie_dnodienst");

                entity.HasOne(d => d.MutSpecificatieidR)
                    .WithMany(p => p.MutatieDnodienstMutSpecificatieidR)
                    .HasForeignKey(d => d.MutSpecificatieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_specificatieid_rid_mutatie_dnodienst");

                entity.HasOne(d => d.MutUnderpinningcontract)
                    .WithMany(p => p.MutatieDnodienst)
                    .HasForeignKey(d => d.MutUnderpinningcontractid)
                    .HasConstraintName("fk_dnocontract_mut_underpinningcontractid_mutatie_dnodienst");

                entity.HasOne(d => d.MutUnderpinningcontractidR)
                    .WithMany(p => p.MutatieDnodienstMutUnderpinningcontractidR)
                    .HasForeignKey(d => d.MutUnderpinningcontractidRid)
                    .HasConstraintName("fk_mutatiereden_mut_underpinningcontractid_rid_mutatie_dnodienst");

                entity.HasOne(d => d.MutUnderpinningdienst)
                    .WithMany(p => p.MutatieDnodienstMutUnderpinningdienst)
                    .HasForeignKey(d => d.MutUnderpinningdienstid)
                    .HasConstraintName("fk_dnodienst_mut_underpinningdienstid_mutatie_dnodienst");

                entity.HasOne(d => d.MutUnderpinningdienstidR)
                    .WithMany(p => p.MutatieDnodienstMutUnderpinningdienstidR)
                    .HasForeignKey(d => d.MutUnderpinningdienstidRid)
                    .HasConstraintName("fk_mutatiereden_mut_underpinningdienstid_rid_mutatie_dnodienst");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieDnodienstParent)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_dnodienst_parentid_mutatie_dnodienst");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieDnodienst)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_dnodienst");
            });

            modelBuilder.Entity<MutatieHardware>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_hardware");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_mutatie_hardware_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_hardware_importid");

                entity.HasIndex(e => e.MutConfiguratieid)
                    .HasName("idx_mutatie_hardware_mut_configuratieid");

                entity.HasIndex(e => e.MutConfiguratieidRid)
                    .HasName("idx_mutatie_hardware_mut_configuratieid_rid");

                entity.HasIndex(e => e.MutLokatieid)
                    .HasName("idx_mutatie_hardware_mut_lokatieid");

                entity.HasIndex(e => e.MutLokatieidRid)
                    .HasName("idx_mutatie_hardware_mut_lokatieid_rid");

                entity.HasIndex(e => e.MutPersoongroepid)
                    .HasName("idx_mutatie_hardware_mut_persoongroepid");

                entity.HasIndex(e => e.MutPersoongroepidRid)
                    .HasName("idx_mutatie_hardware_mut_persoongroepid_rid");

                entity.HasIndex(e => e.MutPersoonid)
                    .HasName("idx_mutatie_hardware_mut_persoonid");

                entity.HasIndex(e => e.MutPersoonidRid)
                    .HasName("idx_mutatie_hardware_mut_persoonid_rid");

                entity.HasIndex(e => e.MutVestigingid)
                    .HasName("idx_mutatie_hardware_mut_vestigingid");

                entity.HasIndex(e => e.MutVestigingidRid)
                    .HasName("idx_mutatie_hardware_mut_vestigingid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_hardware_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_hardware_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutConfiguratieid).HasColumnName("mut_configuratieid");

                entity.Property(e => e.MutConfiguratieidAct).HasColumnName("mut_configuratieid_act");

                entity.Property(e => e.MutConfiguratieidRid).HasColumnName("mut_configuratieid_rid");

                entity.Property(e => e.MutLokatieid).HasColumnName("mut_lokatieid");

                entity.Property(e => e.MutLokatieidAct).HasColumnName("mut_lokatieid_act");

                entity.Property(e => e.MutLokatieidRid).HasColumnName("mut_lokatieid_rid");

                entity.Property(e => e.MutPersoongroepid).HasColumnName("mut_persoongroepid");

                entity.Property(e => e.MutPersoongroepidAct).HasColumnName("mut_persoongroepid_act");

                entity.Property(e => e.MutPersoongroepidRid).HasColumnName("mut_persoongroepid_rid");

                entity.Property(e => e.MutPersoonid).HasColumnName("mut_persoonid");

                entity.Property(e => e.MutPersoonidAct).HasColumnName("mut_persoonid_act");

                entity.Property(e => e.MutPersoonidRid).HasColumnName("mut_persoonid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutVestigingid).HasColumnName("mut_vestigingid");

                entity.Property(e => e.MutVestigingidAct).HasColumnName("mut_vestigingid_act");

                entity.Property(e => e.MutVestigingidRid).HasColumnName("mut_vestigingid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutConfiguratie)
                    .WithMany(p => p.MutatieHardware)
                    .HasForeignKey(d => d.MutConfiguratieid)
                    .HasConstraintName("fk_configuratie_mut_configuratieid_mutatie_hardware");

                entity.HasOne(d => d.MutConfiguratieidR)
                    .WithMany(p => p.MutatieHardwareMutConfiguratieidR)
                    .HasForeignKey(d => d.MutConfiguratieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_configuratieid_rid_mutatie_hardware");

                entity.HasOne(d => d.MutLokatie)
                    .WithMany(p => p.MutatieHardware)
                    .HasForeignKey(d => d.MutLokatieid)
                    .HasConstraintName("fk_locatie_mut_lokatieid_mutatie_hardware");

                entity.HasOne(d => d.MutLokatieidR)
                    .WithMany(p => p.MutatieHardwareMutLokatieidR)
                    .HasForeignKey(d => d.MutLokatieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_lokatieid_rid_mutatie_hardware");

                entity.HasOne(d => d.MutPersoongroep)
                    .WithMany(p => p.MutatieHardware)
                    .HasForeignKey(d => d.MutPersoongroepid)
                    .HasConstraintName("fk_persoongroep_mut_persoongroepid_mutatie_hardware");

                entity.HasOne(d => d.MutPersoongroepidR)
                    .WithMany(p => p.MutatieHardwareMutPersoongroepidR)
                    .HasForeignKey(d => d.MutPersoongroepidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoongroepid_rid_mutatie_hardware");

                entity.HasOne(d => d.MutPersoon)
                    .WithMany(p => p.MutatieHardware)
                    .HasForeignKey(d => d.MutPersoonid)
                    .HasConstraintName("fk_persoon_mut_persoonid_mutatie_hardware");

                entity.HasOne(d => d.MutPersoonidR)
                    .WithMany(p => p.MutatieHardwareMutPersoonidR)
                    .HasForeignKey(d => d.MutPersoonidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoonid_rid_mutatie_hardware");

                entity.HasOne(d => d.MutVestiging)
                    .WithMany(p => p.MutatieHardware)
                    .HasForeignKey(d => d.MutVestigingid)
                    .HasConstraintName("fk_vestiging_mut_vestigingid_mutatie_hardware");

                entity.HasOne(d => d.MutVestigingidR)
                    .WithMany(p => p.MutatieHardwareMutVestigingidR)
                    .HasForeignKey(d => d.MutVestigingidRid)
                    .HasConstraintName("fk_mutatiereden_mut_vestigingid_rid_mutatie_hardware");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieHardware)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_hardware_parentid_mutatie_hardware");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieHardware)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_hardware");
            });

            modelBuilder.Entity<MutatieIncident>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_incident");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_mutatie_incident_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_incident_importid");

                entity.HasIndex(e => e.MutAfhandelingstatusid)
                    .HasName("idx_mutatie_incident_mut_afhandelingstatusid");

                entity.HasIndex(e => e.MutAfhandelingstatusidRid)
                    .HasName("idx_mutatie_incident_mut_afhandelingstatusid_rid");

                entity.HasIndex(e => e.MutDatumafgemeld)
                    .HasName("idx_mutatie_incident_mut_datumafgemeld");

                entity.HasIndex(e => e.MutDatumafgemeldRid)
                    .HasName("idx_mutatie_incident_mut_datumafgemeld_rid");

                entity.HasIndex(e => e.MutDatumafspraak)
                    .HasName("idx_mutatie_incident_mut_datumafspraak");

                entity.HasIndex(e => e.MutDatumafspraakRid)
                    .HasName("idx_mutatie_incident_mut_datumafspraak_rid");

                entity.HasIndex(e => e.MutDatumgereed)
                    .HasName("idx_mutatie_incident_mut_datumgereed");

                entity.HasIndex(e => e.MutDatumgereedRid)
                    .HasName("idx_mutatie_incident_mut_datumgereed_rid");

                entity.HasIndex(e => e.MutImpactid)
                    .HasName("idx_mutatie_incident_mut_impactid");

                entity.HasIndex(e => e.MutImpactidRid)
                    .HasName("idx_mutatie_incident_mut_impactid_rid");

                entity.HasIndex(e => e.MutOnholddatum)
                    .HasName("idx_mutatie_incident_mut_onholddatum");

                entity.HasIndex(e => e.MutOnholddatumRid)
                    .HasName("idx_mutatie_incident_mut_onholddatum_rid");

                entity.HasIndex(e => e.MutOperatorgroupid)
                    .HasName("idx_mutatie_incident_mut_operatorgroupid");

                entity.HasIndex(e => e.MutOperatorgroupidRid)
                    .HasName("idx_mutatie_incident_mut_operatorgroupid_rid");

                entity.HasIndex(e => e.MutOperatorid)
                    .HasName("idx_mutatie_incident_mut_operatorid");

                entity.HasIndex(e => e.MutOperatoridRid)
                    .HasName("idx_mutatie_incident_mut_operatorid_rid");

                entity.HasIndex(e => e.MutPriorityid)
                    .HasName("idx_mutatie_incident_mut_priorityid");

                entity.HasIndex(e => e.MutPriorityidRid)
                    .HasName("idx_mutatie_incident_mut_priorityid_rid");

                entity.HasIndex(e => e.MutSupplierid)
                    .HasName("idx_mutatie_incident_mut_supplierid");

                entity.HasIndex(e => e.MutSupplieridRid)
                    .HasName("idx_mutatie_incident_mut_supplierid_rid");

                entity.HasIndex(e => e.MutUrgencyid)
                    .HasName("idx_mutatie_incident_mut_urgencyid");

                entity.HasIndex(e => e.MutUrgencyidRid)
                    .HasName("idx_mutatie_incident_mut_urgencyid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_incident_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_incident_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bestedetijd).HasColumnName("bestedetijd");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutAfhandelingstatusid).HasColumnName("mut_afhandelingstatusid");

                entity.Property(e => e.MutAfhandelingstatusidAct).HasColumnName("mut_afhandelingstatusid_act");

                entity.Property(e => e.MutAfhandelingstatusidRid).HasColumnName("mut_afhandelingstatusid_rid");

                entity.Property(e => e.MutDatumafgemeld)
                    .HasColumnName("mut_datumafgemeld")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutDatumafgemeldAct).HasColumnName("mut_datumafgemeld_act");

                entity.Property(e => e.MutDatumafgemeldRid).HasColumnName("mut_datumafgemeld_rid");

                entity.Property(e => e.MutDatumafspraak)
                    .HasColumnName("mut_datumafspraak")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutDatumafspraakAct).HasColumnName("mut_datumafspraak_act");

                entity.Property(e => e.MutDatumafspraakRid).HasColumnName("mut_datumafspraak_rid");

                entity.Property(e => e.MutDatumgereed)
                    .HasColumnName("mut_datumgereed")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutDatumgereedAct).HasColumnName("mut_datumgereed_act");

                entity.Property(e => e.MutDatumgereedRid).HasColumnName("mut_datumgereed_rid");

                entity.Property(e => e.MutImpactid).HasColumnName("mut_impactid");

                entity.Property(e => e.MutImpactidAct).HasColumnName("mut_impactid_act");

                entity.Property(e => e.MutImpactidRid).HasColumnName("mut_impactid_rid");

                entity.Property(e => e.MutOnholddatum)
                    .HasColumnName("mut_onholddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutOnholddatumAct).HasColumnName("mut_onholddatum_act");

                entity.Property(e => e.MutOnholddatumRid).HasColumnName("mut_onholddatum_rid");

                entity.Property(e => e.MutOperatorgroupid).HasColumnName("mut_operatorgroupid");

                entity.Property(e => e.MutOperatorgroupidAct).HasColumnName("mut_operatorgroupid_act");

                entity.Property(e => e.MutOperatorgroupidRid).HasColumnName("mut_operatorgroupid_rid");

                entity.Property(e => e.MutOperatorid).HasColumnName("mut_operatorid");

                entity.Property(e => e.MutOperatoridAct).HasColumnName("mut_operatorid_act");

                entity.Property(e => e.MutOperatoridRid).HasColumnName("mut_operatorid_rid");

                entity.Property(e => e.MutPriorityid).HasColumnName("mut_priorityid");

                entity.Property(e => e.MutPriorityidAct).HasColumnName("mut_priorityid_act");

                entity.Property(e => e.MutPriorityidRid).HasColumnName("mut_priorityid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutSupplierid).HasColumnName("mut_supplierid");

                entity.Property(e => e.MutSupplieridAct).HasColumnName("mut_supplierid_act");

                entity.Property(e => e.MutSupplieridRid).HasColumnName("mut_supplierid_rid");

                entity.Property(e => e.MutUrgencyid).HasColumnName("mut_urgencyid");

                entity.Property(e => e.MutUrgencyidAct).HasColumnName("mut_urgencyid_act");

                entity.Property(e => e.MutUrgencyidRid).HasColumnName("mut_urgencyid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutAfhandelingstatus)
                    .WithMany(p => p.MutatieIncident)
                    .HasForeignKey(d => d.MutAfhandelingstatusid)
                    .HasConstraintName("fk_afhandelingstatus_mut_afhandelingstatusid_mutatie_incident");

                entity.HasOne(d => d.MutAfhandelingstatusidR)
                    .WithMany(p => p.MutatieIncidentMutAfhandelingstatusidR)
                    .HasForeignKey(d => d.MutAfhandelingstatusidRid)
                    .HasConstraintName("fk_mutatiereden_mut_afhandelingstatusid_rid_mutatie_incident");

                entity.HasOne(d => d.MutDatumafgemeldR)
                    .WithMany(p => p.MutatieIncidentMutDatumafgemeldR)
                    .HasForeignKey(d => d.MutDatumafgemeldRid)
                    .HasConstraintName("fk_mutatiereden_mut_datumafgemeld_rid_mutatie_incident");

                entity.HasOne(d => d.MutDatumafspraakR)
                    .WithMany(p => p.MutatieIncidentMutDatumafspraakR)
                    .HasForeignKey(d => d.MutDatumafspraakRid)
                    .HasConstraintName("fk_mutatiereden_mut_datumafspraak_rid_mutatie_incident");

                entity.HasOne(d => d.MutDatumgereedR)
                    .WithMany(p => p.MutatieIncidentMutDatumgereedR)
                    .HasForeignKey(d => d.MutDatumgereedRid)
                    .HasConstraintName("fk_mutatiereden_mut_datumgereed_rid_mutatie_incident");

                entity.HasOne(d => d.MutImpact)
                    .WithMany(p => p.MutatieIncident)
                    .HasForeignKey(d => d.MutImpactid)
                    .HasConstraintName("fk_impact_mut_impactid_mutatie_incident");

                entity.HasOne(d => d.MutImpactidR)
                    .WithMany(p => p.MutatieIncidentMutImpactidR)
                    .HasForeignKey(d => d.MutImpactidRid)
                    .HasConstraintName("fk_mutatiereden_mut_impactid_rid_mutatie_incident");

                entity.HasOne(d => d.MutOnholddatumR)
                    .WithMany(p => p.MutatieIncidentMutOnholddatumR)
                    .HasForeignKey(d => d.MutOnholddatumRid)
                    .HasConstraintName("fk_mutatiereden_mut_onholddatum_rid_mutatie_incident");

                entity.HasOne(d => d.MutOperatorgroup)
                    .WithMany(p => p.MutatieIncidentMutOperatorgroup)
                    .HasForeignKey(d => d.MutOperatorgroupid)
                    .HasConstraintName("fk_actiedoor_mut_operatorgroupid_mutatie_incident");

                entity.HasOne(d => d.MutOperatorgroupidR)
                    .WithMany(p => p.MutatieIncidentMutOperatorgroupidR)
                    .HasForeignKey(d => d.MutOperatorgroupidRid)
                    .HasConstraintName("fk_mutatiereden_mut_operatorgroupid_rid_mutatie_incident");

                entity.HasOne(d => d.MutOperator)
                    .WithMany(p => p.MutatieIncidentMutOperator)
                    .HasForeignKey(d => d.MutOperatorid)
                    .HasConstraintName("fk_actiedoor_mut_operatorid_mutatie_incident");

                entity.HasOne(d => d.MutOperatoridR)
                    .WithMany(p => p.MutatieIncidentMutOperatoridR)
                    .HasForeignKey(d => d.MutOperatoridRid)
                    .HasConstraintName("fk_mutatiereden_mut_operatorid_rid_mutatie_incident");

                entity.HasOne(d => d.MutPriority)
                    .WithMany(p => p.MutatieIncident)
                    .HasForeignKey(d => d.MutPriorityid)
                    .HasConstraintName("fk_priority_mut_priorityid_mutatie_incident");

                entity.HasOne(d => d.MutPriorityidR)
                    .WithMany(p => p.MutatieIncidentMutPriorityidR)
                    .HasForeignKey(d => d.MutPriorityidRid)
                    .HasConstraintName("fk_mutatiereden_mut_priorityid_rid_mutatie_incident");

                entity.HasOne(d => d.MutSupplier)
                    .WithMany(p => p.MutatieIncident)
                    .HasForeignKey(d => d.MutSupplierid)
                    .HasConstraintName("fk_leverancier_mut_supplierid_mutatie_incident");

                entity.HasOne(d => d.MutSupplieridR)
                    .WithMany(p => p.MutatieIncidentMutSupplieridR)
                    .HasForeignKey(d => d.MutSupplieridRid)
                    .HasConstraintName("fk_mutatiereden_mut_supplierid_rid_mutatie_incident");

                entity.HasOne(d => d.MutUrgency)
                    .WithMany(p => p.MutatieIncident)
                    .HasForeignKey(d => d.MutUrgencyid)
                    .HasConstraintName("fk_urgency_mut_urgencyid_mutatie_incident");

                entity.HasOne(d => d.MutUrgencyidR)
                    .WithMany(p => p.MutatieIncidentMutUrgencyidR)
                    .HasForeignKey(d => d.MutUrgencyidRid)
                    .HasConstraintName("fk_mutatiereden_mut_urgencyid_rid_mutatie_incident");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieIncident)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_incident_parentid_mutatie_incident");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieIncident)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_incident");
            });

            modelBuilder.Entity<MutatieInventaris>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_inventaris");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_mutatie_inventaris_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_inventaris_importid");

                entity.HasIndex(e => e.MutConfiguratieid)
                    .HasName("idx_mutatie_inventaris_mut_configuratieid");

                entity.HasIndex(e => e.MutConfiguratieidRid)
                    .HasName("idx_mutatie_inventaris_mut_configuratieid_rid");

                entity.HasIndex(e => e.MutLokatieid)
                    .HasName("idx_mutatie_inventaris_mut_lokatieid");

                entity.HasIndex(e => e.MutLokatieidRid)
                    .HasName("idx_mutatie_inventaris_mut_lokatieid_rid");

                entity.HasIndex(e => e.MutPersoongroepid)
                    .HasName("idx_mutatie_inventaris_mut_persoongroepid");

                entity.HasIndex(e => e.MutPersoongroepidRid)
                    .HasName("idx_mutatie_inventaris_mut_persoongroepid_rid");

                entity.HasIndex(e => e.MutPersoonid)
                    .HasName("idx_mutatie_inventaris_mut_persoonid");

                entity.HasIndex(e => e.MutPersoonidRid)
                    .HasName("idx_mutatie_inventaris_mut_persoonid_rid");

                entity.HasIndex(e => e.MutVestigingid)
                    .HasName("idx_mutatie_inventaris_mut_vestigingid");

                entity.HasIndex(e => e.MutVestigingidRid)
                    .HasName("idx_mutatie_inventaris_mut_vestigingid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_inventaris_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_inventaris_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutConfiguratieid).HasColumnName("mut_configuratieid");

                entity.Property(e => e.MutConfiguratieidAct).HasColumnName("mut_configuratieid_act");

                entity.Property(e => e.MutConfiguratieidRid).HasColumnName("mut_configuratieid_rid");

                entity.Property(e => e.MutLokatieid).HasColumnName("mut_lokatieid");

                entity.Property(e => e.MutLokatieidAct).HasColumnName("mut_lokatieid_act");

                entity.Property(e => e.MutLokatieidRid).HasColumnName("mut_lokatieid_rid");

                entity.Property(e => e.MutPersoongroepid).HasColumnName("mut_persoongroepid");

                entity.Property(e => e.MutPersoongroepidAct).HasColumnName("mut_persoongroepid_act");

                entity.Property(e => e.MutPersoongroepidRid).HasColumnName("mut_persoongroepid_rid");

                entity.Property(e => e.MutPersoonid).HasColumnName("mut_persoonid");

                entity.Property(e => e.MutPersoonidAct).HasColumnName("mut_persoonid_act");

                entity.Property(e => e.MutPersoonidRid).HasColumnName("mut_persoonid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutVestigingid).HasColumnName("mut_vestigingid");

                entity.Property(e => e.MutVestigingidAct).HasColumnName("mut_vestigingid_act");

                entity.Property(e => e.MutVestigingidRid).HasColumnName("mut_vestigingid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutConfiguratie)
                    .WithMany(p => p.MutatieInventaris)
                    .HasForeignKey(d => d.MutConfiguratieid)
                    .HasConstraintName("fk_configuratie_mut_configuratieid_mutatie_inventaris");

                entity.HasOne(d => d.MutConfiguratieidR)
                    .WithMany(p => p.MutatieInventarisMutConfiguratieidR)
                    .HasForeignKey(d => d.MutConfiguratieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_configuratieid_rid_mutatie_inventaris");

                entity.HasOne(d => d.MutLokatie)
                    .WithMany(p => p.MutatieInventaris)
                    .HasForeignKey(d => d.MutLokatieid)
                    .HasConstraintName("fk_locatie_mut_lokatieid_mutatie_inventaris");

                entity.HasOne(d => d.MutLokatieidR)
                    .WithMany(p => p.MutatieInventarisMutLokatieidR)
                    .HasForeignKey(d => d.MutLokatieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_lokatieid_rid_mutatie_inventaris");

                entity.HasOne(d => d.MutPersoongroep)
                    .WithMany(p => p.MutatieInventaris)
                    .HasForeignKey(d => d.MutPersoongroepid)
                    .HasConstraintName("fk_persoongroep_mut_persoongroepid_mutatie_inventaris");

                entity.HasOne(d => d.MutPersoongroepidR)
                    .WithMany(p => p.MutatieInventarisMutPersoongroepidR)
                    .HasForeignKey(d => d.MutPersoongroepidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoongroepid_rid_mutatie_inventaris");

                entity.HasOne(d => d.MutPersoon)
                    .WithMany(p => p.MutatieInventaris)
                    .HasForeignKey(d => d.MutPersoonid)
                    .HasConstraintName("fk_persoon_mut_persoonid_mutatie_inventaris");

                entity.HasOne(d => d.MutPersoonidR)
                    .WithMany(p => p.MutatieInventarisMutPersoonidR)
                    .HasForeignKey(d => d.MutPersoonidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoonid_rid_mutatie_inventaris");

                entity.HasOne(d => d.MutVestiging)
                    .WithMany(p => p.MutatieInventaris)
                    .HasForeignKey(d => d.MutVestigingid)
                    .HasConstraintName("fk_vestiging_mut_vestigingid_mutatie_inventaris");

                entity.HasOne(d => d.MutVestigingidR)
                    .WithMany(p => p.MutatieInventarisMutVestigingidR)
                    .HasForeignKey(d => d.MutVestigingidRid)
                    .HasConstraintName("fk_mutatiereden_mut_vestigingid_rid_mutatie_inventaris");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieInventaris)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_inventaris_parentid_mutatie_inventaris");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieInventaris)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_inventaris");
            });

            modelBuilder.Entity<MutatieNetwerkcomponent>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_netwerkcomponent");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_mutatie_netwerkcomponent_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_netwerkcomponent_importid");

                entity.HasIndex(e => e.MutConfiguratieid)
                    .HasName("idx_mutatie_netwerkcomponent_mut_configuratieid");

                entity.HasIndex(e => e.MutConfiguratieidRid)
                    .HasName("idx_mutatie_netwerkcomponent_mut_configuratieid_rid");

                entity.HasIndex(e => e.MutLokatieid)
                    .HasName("idx_mutatie_netwerkcomponent_mut_lokatieid");

                entity.HasIndex(e => e.MutLokatieidRid)
                    .HasName("idx_mutatie_netwerkcomponent_mut_lokatieid_rid");

                entity.HasIndex(e => e.MutPersoongroepid)
                    .HasName("idx_mutatie_netwerkcomponent_mut_persoongroepid");

                entity.HasIndex(e => e.MutPersoongroepidRid)
                    .HasName("idx_mutatie_netwerkcomponent_mut_persoongroepid_rid");

                entity.HasIndex(e => e.MutPersoonid)
                    .HasName("idx_mutatie_netwerkcomponent_mut_persoonid");

                entity.HasIndex(e => e.MutPersoonidRid)
                    .HasName("idx_mutatie_netwerkcomponent_mut_persoonid_rid");

                entity.HasIndex(e => e.MutVestigingid)
                    .HasName("idx_mutatie_netwerkcomponent_mut_vestigingid");

                entity.HasIndex(e => e.MutVestigingidRid)
                    .HasName("idx_mutatie_netwerkcomponent_mut_vestigingid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_netwerkcomponent_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_netwerkcomponent_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutConfiguratieid).HasColumnName("mut_configuratieid");

                entity.Property(e => e.MutConfiguratieidAct).HasColumnName("mut_configuratieid_act");

                entity.Property(e => e.MutConfiguratieidRid).HasColumnName("mut_configuratieid_rid");

                entity.Property(e => e.MutLokatieid).HasColumnName("mut_lokatieid");

                entity.Property(e => e.MutLokatieidAct).HasColumnName("mut_lokatieid_act");

                entity.Property(e => e.MutLokatieidRid).HasColumnName("mut_lokatieid_rid");

                entity.Property(e => e.MutPersoongroepid).HasColumnName("mut_persoongroepid");

                entity.Property(e => e.MutPersoongroepidAct).HasColumnName("mut_persoongroepid_act");

                entity.Property(e => e.MutPersoongroepidRid).HasColumnName("mut_persoongroepid_rid");

                entity.Property(e => e.MutPersoonid).HasColumnName("mut_persoonid");

                entity.Property(e => e.MutPersoonidAct).HasColumnName("mut_persoonid_act");

                entity.Property(e => e.MutPersoonidRid).HasColumnName("mut_persoonid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutVestigingid).HasColumnName("mut_vestigingid");

                entity.Property(e => e.MutVestigingidAct).HasColumnName("mut_vestigingid_act");

                entity.Property(e => e.MutVestigingidRid).HasColumnName("mut_vestigingid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutConfiguratie)
                    .WithMany(p => p.MutatieNetwerkcomponent)
                    .HasForeignKey(d => d.MutConfiguratieid)
                    .HasConstraintName("fk_configuratie_mut_configuratieid_mutatie_netwerkcomponent");

                entity.HasOne(d => d.MutConfiguratieidR)
                    .WithMany(p => p.MutatieNetwerkcomponentMutConfiguratieidR)
                    .HasForeignKey(d => d.MutConfiguratieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_configuratieid_rid_mutatie_netwerkcomponent");

                entity.HasOne(d => d.MutLokatie)
                    .WithMany(p => p.MutatieNetwerkcomponent)
                    .HasForeignKey(d => d.MutLokatieid)
                    .HasConstraintName("fk_locatie_mut_lokatieid_mutatie_netwerkcomponent");

                entity.HasOne(d => d.MutLokatieidR)
                    .WithMany(p => p.MutatieNetwerkcomponentMutLokatieidR)
                    .HasForeignKey(d => d.MutLokatieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_lokatieid_rid_mutatie_netwerkcomponent");

                entity.HasOne(d => d.MutPersoongroep)
                    .WithMany(p => p.MutatieNetwerkcomponent)
                    .HasForeignKey(d => d.MutPersoongroepid)
                    .HasConstraintName("fk_persoongroep_mut_persoongroepid_mutatie_netwerkcomponent");

                entity.HasOne(d => d.MutPersoongroepidR)
                    .WithMany(p => p.MutatieNetwerkcomponentMutPersoongroepidR)
                    .HasForeignKey(d => d.MutPersoongroepidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoongroepid_rid_mutatie_netwerkcomponent");

                entity.HasOne(d => d.MutPersoon)
                    .WithMany(p => p.MutatieNetwerkcomponent)
                    .HasForeignKey(d => d.MutPersoonid)
                    .HasConstraintName("fk_persoon_mut_persoonid_mutatie_netwerkcomponent");

                entity.HasOne(d => d.MutPersoonidR)
                    .WithMany(p => p.MutatieNetwerkcomponentMutPersoonidR)
                    .HasForeignKey(d => d.MutPersoonidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoonid_rid_mutatie_netwerkcomponent");

                entity.HasOne(d => d.MutVestiging)
                    .WithMany(p => p.MutatieNetwerkcomponent)
                    .HasForeignKey(d => d.MutVestigingid)
                    .HasConstraintName("fk_vestiging_mut_vestigingid_mutatie_netwerkcomponent");

                entity.HasOne(d => d.MutVestigingidR)
                    .WithMany(p => p.MutatieNetwerkcomponentMutVestigingidR)
                    .HasForeignKey(d => d.MutVestigingidRid)
                    .HasConstraintName("fk_mutatiereden_mut_vestigingid_rid_mutatie_netwerkcomponent");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieNetwerkcomponent)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_netwerkcomponent_parentid_mutatie_netwerkcomponent");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieNetwerkcomponent)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_netwerkcomponent");
            });

            modelBuilder.Entity<MutatieOmActiviteit>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_om_activiteit");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_om_activiteit_importid");

                entity.HasIndex(e => e.MutBehandelaarid)
                    .HasName("idx_mutatie_om_activiteit_mut_behandelaarid");

                entity.HasIndex(e => e.MutBehandelaaridRid)
                    .HasName("idx_mutatie_om_activiteit_mut_behandelaarid_rid");

                entity.HasIndex(e => e.MutOperatorgroupid)
                    .HasName("idx_mutatie_om_activiteit_mut_operatorgroupid");

                entity.HasIndex(e => e.MutOperatorgroupidRid)
                    .HasName("idx_mutatie_om_activiteit_mut_operatorgroupid_rid");

                entity.HasIndex(e => e.MutStatusid)
                    .HasName("idx_mutatie_om_activiteit_mut_statusid");

                entity.HasIndex(e => e.MutStatusidRid)
                    .HasName("idx_mutatie_om_activiteit_mut_statusid_rid");

                entity.HasIndex(e => e.MutSupplierid)
                    .HasName("idx_mutatie_om_activiteit_mut_supplierid");

                entity.HasIndex(e => e.MutSupplieridRid)
                    .HasName("idx_mutatie_om_activiteit_mut_supplierid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_om_activiteit_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_om_activiteit_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bestedetijd).HasColumnName("bestedetijd");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutBehandelaarid).HasColumnName("mut_behandelaarid");

                entity.Property(e => e.MutBehandelaaridAct).HasColumnName("mut_behandelaarid_act");

                entity.Property(e => e.MutBehandelaaridRid).HasColumnName("mut_behandelaarid_rid");

                entity.Property(e => e.MutOperatorgroupid).HasColumnName("mut_operatorgroupid");

                entity.Property(e => e.MutOperatorgroupidAct).HasColumnName("mut_operatorgroupid_act");

                entity.Property(e => e.MutOperatorgroupidRid).HasColumnName("mut_operatorgroupid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutStatusid).HasColumnName("mut_statusid");

                entity.Property(e => e.MutStatusidAct).HasColumnName("mut_statusid_act");

                entity.Property(e => e.MutStatusidRid).HasColumnName("mut_statusid_rid");

                entity.Property(e => e.MutSupplierid).HasColumnName("mut_supplierid");

                entity.Property(e => e.MutSupplieridAct).HasColumnName("mut_supplierid_act");

                entity.Property(e => e.MutSupplieridRid).HasColumnName("mut_supplierid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutBehandelaar)
                    .WithMany(p => p.MutatieOmActiviteitMutBehandelaar)
                    .HasForeignKey(d => d.MutBehandelaarid)
                    .HasConstraintName("fk_actiedoor_mut_behandelaarid_mutatie_om_activiteit");

                entity.HasOne(d => d.MutBehandelaaridR)
                    .WithMany(p => p.MutatieOmActiviteitMutBehandelaaridR)
                    .HasForeignKey(d => d.MutBehandelaaridRid)
                    .HasConstraintName("fk_mutatiereden_mut_behandelaarid_rid_mutatie_om_activiteit");

                entity.HasOne(d => d.MutOperatorgroup)
                    .WithMany(p => p.MutatieOmActiviteitMutOperatorgroup)
                    .HasForeignKey(d => d.MutOperatorgroupid)
                    .HasConstraintName("fk_actiedoor_mut_operatorgroupid_mutatie_om_activiteit");

                entity.HasOne(d => d.MutOperatorgroupidR)
                    .WithMany(p => p.MutatieOmActiviteitMutOperatorgroupidR)
                    .HasForeignKey(d => d.MutOperatorgroupidRid)
                    .HasConstraintName("fk_mutatiereden_mut_operatorgroupid_rid_mutatie_om_activiteit");

                entity.HasOne(d => d.MutStatusNavigation)
                    .WithMany(p => p.MutatieOmActiviteit)
                    .HasForeignKey(d => d.MutStatusid)
                    .HasConstraintName("fk_om_activiteit_status_mut_statusid_mutatie_om_activiteit");

                entity.HasOne(d => d.MutStatusidR)
                    .WithMany(p => p.MutatieOmActiviteitMutStatusidR)
                    .HasForeignKey(d => d.MutStatusidRid)
                    .HasConstraintName("fk_mutatiereden_mut_statusid_rid_mutatie_om_activiteit");

                entity.HasOne(d => d.MutSupplier)
                    .WithMany(p => p.MutatieOmActiviteit)
                    .HasForeignKey(d => d.MutSupplierid)
                    .HasConstraintName("fk_leverancier_mut_supplierid_mutatie_om_activiteit");

                entity.HasOne(d => d.MutSupplieridR)
                    .WithMany(p => p.MutatieOmActiviteitMutSupplieridR)
                    .HasForeignKey(d => d.MutSupplieridRid)
                    .HasConstraintName("fk_mutatiereden_mut_supplierid_rid_mutatie_om_activiteit");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieOmActiviteit)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_om_activiteit_parentid_mutatie_om_activiteit");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieOmActiviteit)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_om_activiteit");
            });

            modelBuilder.Entity<MutatieOmReeks>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_om_reeks");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_om_reeks_importid");

                entity.HasIndex(e => e.MutBeheerderid)
                    .HasName("idx_mutatie_om_reeks_mut_beheerderid");

                entity.HasIndex(e => e.MutBeheerderidRid)
                    .HasName("idx_mutatie_om_reeks_mut_beheerderid_rid");

                entity.HasIndex(e => e.MutStatusid)
                    .HasName("idx_mutatie_om_reeks_mut_statusid");

                entity.HasIndex(e => e.MutStatusidRid)
                    .HasName("idx_mutatie_om_reeks_mut_statusid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_om_reeks_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_om_reeks_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutBeheerderid).HasColumnName("mut_beheerderid");

                entity.Property(e => e.MutBeheerderidAct).HasColumnName("mut_beheerderid_act");

                entity.Property(e => e.MutBeheerderidRid).HasColumnName("mut_beheerderid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutStatusid).HasColumnName("mut_statusid");

                entity.Property(e => e.MutStatusidAct).HasColumnName("mut_statusid_act");

                entity.Property(e => e.MutStatusidRid).HasColumnName("mut_statusid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutBeheerder)
                    .WithMany(p => p.MutatieOmReeks)
                    .HasForeignKey(d => d.MutBeheerderid)
                    .HasConstraintName("fk_actiedoor_mut_beheerderid_mutatie_om_reeks");

                entity.HasOne(d => d.MutBeheerderidR)
                    .WithMany(p => p.MutatieOmReeksMutBeheerderidR)
                    .HasForeignKey(d => d.MutBeheerderidRid)
                    .HasConstraintName("fk_mutatiereden_mut_beheerderid_rid_mutatie_om_reeks");

                entity.HasOne(d => d.MutStatusNavigation)
                    .WithMany(p => p.MutatieOmReeks)
                    .HasForeignKey(d => d.MutStatusid)
                    .HasConstraintName("fk_om_status_mut_statusid_mutatie_om_reeks");

                entity.HasOne(d => d.MutStatusidR)
                    .WithMany(p => p.MutatieOmReeksMutStatusidR)
                    .HasForeignKey(d => d.MutStatusidRid)
                    .HasConstraintName("fk_mutatiereden_mut_statusid_rid_mutatie_om_reeks");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieOmReeks)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_om_reeks_parentid_mutatie_om_reeks");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieOmReeks)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_om_reeks");
            });

            modelBuilder.Entity<MutatieOmSchema>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_om_schema");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_om_schema_importid");

                entity.HasIndex(e => e.MutBeheerderid)
                    .HasName("idx_mutatie_om_schema_mut_beheerderid");

                entity.HasIndex(e => e.MutBeheerderidRid)
                    .HasName("idx_mutatie_om_schema_mut_beheerderid_rid");

                entity.HasIndex(e => e.MutStatusid)
                    .HasName("idx_mutatie_om_schema_mut_statusid");

                entity.HasIndex(e => e.MutStatusidRid)
                    .HasName("idx_mutatie_om_schema_mut_statusid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_om_schema_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_om_schema_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutBeheerderid).HasColumnName("mut_beheerderid");

                entity.Property(e => e.MutBeheerderidAct).HasColumnName("mut_beheerderid_act");

                entity.Property(e => e.MutBeheerderidRid).HasColumnName("mut_beheerderid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutStatusid).HasColumnName("mut_statusid");

                entity.Property(e => e.MutStatusidAct).HasColumnName("mut_statusid_act");

                entity.Property(e => e.MutStatusidRid).HasColumnName("mut_statusid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutBeheerder)
                    .WithMany(p => p.MutatieOmSchema)
                    .HasForeignKey(d => d.MutBeheerderid)
                    .HasConstraintName("fk_actiedoor_mut_beheerderid_mutatie_om_schema");

                entity.HasOne(d => d.MutBeheerderidR)
                    .WithMany(p => p.MutatieOmSchemaMutBeheerderidR)
                    .HasForeignKey(d => d.MutBeheerderidRid)
                    .HasConstraintName("fk_mutatiereden_mut_beheerderid_rid_mutatie_om_schema");

                entity.HasOne(d => d.MutStatusNavigation)
                    .WithMany(p => p.MutatieOmSchema)
                    .HasForeignKey(d => d.MutStatusid)
                    .HasConstraintName("fk_om_status_mut_statusid_mutatie_om_schema");

                entity.HasOne(d => d.MutStatusidR)
                    .WithMany(p => p.MutatieOmSchemaMutStatusidR)
                    .HasForeignKey(d => d.MutStatusidRid)
                    .HasConstraintName("fk_mutatiereden_mut_statusid_rid_mutatie_om_schema");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieOmSchema)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_om_schema_parentid_mutatie_om_schema");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieOmSchema)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_om_schema");
            });

            modelBuilder.Entity<MutatieProbleem>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_probleem");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_mutatie_probleem_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_probleem_importid");

                entity.HasIndex(e => e.MutActiedoorbfid)
                    .HasName("idx_mutatie_probleem_mut_actiedoorbfid");

                entity.HasIndex(e => e.MutActiedoorbfidRid)
                    .HasName("idx_mutatie_probleem_mut_actiedoorbfid_rid");

                entity.HasIndex(e => e.MutActiedoorid)
                    .HasName("idx_mutatie_probleem_mut_actiedoorid");

                entity.HasIndex(e => e.MutActiedooridRid)
                    .HasName("idx_mutatie_probleem_mut_actiedoorid_rid");

                entity.HasIndex(e => e.MutBeheerderbfid)
                    .HasName("idx_mutatie_probleem_mut_beheerderbfid");

                entity.HasIndex(e => e.MutBeheerderbfidRid)
                    .HasName("idx_mutatie_probleem_mut_beheerderbfid_rid");

                entity.HasIndex(e => e.MutDatumafgemeld)
                    .HasName("idx_mutatie_probleem_mut_datumafgemeld");

                entity.HasIndex(e => e.MutDatumafgemeldRid)
                    .HasName("idx_mutatie_probleem_mut_datumafgemeld_rid");

                entity.HasIndex(e => e.MutDatumafgemeldbf)
                    .HasName("idx_mutatie_probleem_mut_datumafgemeldbf");

                entity.HasIndex(e => e.MutDatumafgemeldbfRid)
                    .HasName("idx_mutatie_probleem_mut_datumafgemeldbf_rid");

                entity.HasIndex(e => e.MutDatumgereed)
                    .HasName("idx_mutatie_probleem_mut_datumgereed");

                entity.HasIndex(e => e.MutDatumgereedRid)
                    .HasName("idx_mutatie_probleem_mut_datumgereed_rid");

                entity.HasIndex(e => e.MutDatumgereedbf)
                    .HasName("idx_mutatie_probleem_mut_datumgereedbf");

                entity.HasIndex(e => e.MutDatumgereedbfRid)
                    .HasName("idx_mutatie_probleem_mut_datumgereedbf_rid");

                entity.HasIndex(e => e.MutOperatorgroupbfid)
                    .HasName("idx_mutatie_probleem_mut_operatorgroupbfid");

                entity.HasIndex(e => e.MutOperatorgroupbfidRid)
                    .HasName("idx_mutatie_probleem_mut_operatorgroupbfid_rid");

                entity.HasIndex(e => e.MutOperatorgroupid)
                    .HasName("idx_mutatie_probleem_mut_operatorgroupid");

                entity.HasIndex(e => e.MutOperatorgroupidRid)
                    .HasName("idx_mutatie_probleem_mut_operatorgroupid_rid");

                entity.HasIndex(e => e.MutPriorityid)
                    .HasName("idx_mutatie_probleem_mut_priorityid");

                entity.HasIndex(e => e.MutPriorityidRid)
                    .HasName("idx_mutatie_probleem_mut_priorityid_rid");

                entity.HasIndex(e => e.MutStatusbfid)
                    .HasName("idx_mutatie_probleem_mut_statusbfid");

                entity.HasIndex(e => e.MutStatusbfidRid)
                    .HasName("idx_mutatie_probleem_mut_statusbfid_rid");

                entity.HasIndex(e => e.MutStatusid)
                    .HasName("idx_mutatie_probleem_mut_statusid");

                entity.HasIndex(e => e.MutStatusidRid)
                    .HasName("idx_mutatie_probleem_mut_statusid_rid");

                entity.HasIndex(e => e.MutStreefdatum)
                    .HasName("idx_mutatie_probleem_mut_streefdatum");

                entity.HasIndex(e => e.MutStreefdatumRid)
                    .HasName("idx_mutatie_probleem_mut_streefdatum_rid");

                entity.HasIndex(e => e.MutStreefdatumbf)
                    .HasName("idx_mutatie_probleem_mut_streefdatumbf");

                entity.HasIndex(e => e.MutStreefdatumbfRid)
                    .HasName("idx_mutatie_probleem_mut_streefdatumbf_rid");

                entity.HasIndex(e => e.MutUrgencyid)
                    .HasName("idx_mutatie_probleem_mut_urgencyid");

                entity.HasIndex(e => e.MutUrgencyidRid)
                    .HasName("idx_mutatie_probleem_mut_urgencyid_rid");

                entity.HasIndex(e => e.MutVerantwoordelijkeid)
                    .HasName("idx_mutatie_probleem_mut_verantwoordelijkeid");

                entity.HasIndex(e => e.MutVerantwoordelijkeidRid)
                    .HasName("idx_mutatie_probleem_mut_verantwoordelijkeid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_probleem_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_probleem_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bestedetijd).HasColumnName("bestedetijd");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutActiedoorbfid).HasColumnName("mut_actiedoorbfid");

                entity.Property(e => e.MutActiedoorbfidAct).HasColumnName("mut_actiedoorbfid_act");

                entity.Property(e => e.MutActiedoorbfidRid).HasColumnName("mut_actiedoorbfid_rid");

                entity.Property(e => e.MutActiedoorid).HasColumnName("mut_actiedoorid");

                entity.Property(e => e.MutActiedooridAct).HasColumnName("mut_actiedoorid_act");

                entity.Property(e => e.MutActiedooridRid).HasColumnName("mut_actiedoorid_rid");

                entity.Property(e => e.MutBeheerderbfid).HasColumnName("mut_beheerderbfid");

                entity.Property(e => e.MutBeheerderbfidAct).HasColumnName("mut_beheerderbfid_act");

                entity.Property(e => e.MutBeheerderbfidRid).HasColumnName("mut_beheerderbfid_rid");

                entity.Property(e => e.MutDatumafgemeld)
                    .HasColumnName("mut_datumafgemeld")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutDatumafgemeldAct).HasColumnName("mut_datumafgemeld_act");

                entity.Property(e => e.MutDatumafgemeldRid).HasColumnName("mut_datumafgemeld_rid");

                entity.Property(e => e.MutDatumafgemeldbf)
                    .HasColumnName("mut_datumafgemeldbf")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutDatumafgemeldbfAct).HasColumnName("mut_datumafgemeldbf_act");

                entity.Property(e => e.MutDatumafgemeldbfRid).HasColumnName("mut_datumafgemeldbf_rid");

                entity.Property(e => e.MutDatumgereed)
                    .HasColumnName("mut_datumgereed")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutDatumgereedAct).HasColumnName("mut_datumgereed_act");

                entity.Property(e => e.MutDatumgereedRid).HasColumnName("mut_datumgereed_rid");

                entity.Property(e => e.MutDatumgereedbf)
                    .HasColumnName("mut_datumgereedbf")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutDatumgereedbfAct).HasColumnName("mut_datumgereedbf_act");

                entity.Property(e => e.MutDatumgereedbfRid).HasColumnName("mut_datumgereedbf_rid");

                entity.Property(e => e.MutOperatorgroupbfid).HasColumnName("mut_operatorgroupbfid");

                entity.Property(e => e.MutOperatorgroupbfidAct).HasColumnName("mut_operatorgroupbfid_act");

                entity.Property(e => e.MutOperatorgroupbfidRid).HasColumnName("mut_operatorgroupbfid_rid");

                entity.Property(e => e.MutOperatorgroupid).HasColumnName("mut_operatorgroupid");

                entity.Property(e => e.MutOperatorgroupidAct).HasColumnName("mut_operatorgroupid_act");

                entity.Property(e => e.MutOperatorgroupidRid).HasColumnName("mut_operatorgroupid_rid");

                entity.Property(e => e.MutPriorityid).HasColumnName("mut_priorityid");

                entity.Property(e => e.MutPriorityidAct).HasColumnName("mut_priorityid_act");

                entity.Property(e => e.MutPriorityidRid).HasColumnName("mut_priorityid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutStatusbfid).HasColumnName("mut_statusbfid");

                entity.Property(e => e.MutStatusbfidAct).HasColumnName("mut_statusbfid_act");

                entity.Property(e => e.MutStatusbfidRid).HasColumnName("mut_statusbfid_rid");

                entity.Property(e => e.MutStatusid).HasColumnName("mut_statusid");

                entity.Property(e => e.MutStatusidAct).HasColumnName("mut_statusid_act");

                entity.Property(e => e.MutStatusidRid).HasColumnName("mut_statusid_rid");

                entity.Property(e => e.MutStreefdatum)
                    .HasColumnName("mut_streefdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutStreefdatumAct).HasColumnName("mut_streefdatum_act");

                entity.Property(e => e.MutStreefdatumRid).HasColumnName("mut_streefdatum_rid");

                entity.Property(e => e.MutStreefdatumbf)
                    .HasColumnName("mut_streefdatumbf")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutStreefdatumbfAct).HasColumnName("mut_streefdatumbf_act");

                entity.Property(e => e.MutStreefdatumbfRid).HasColumnName("mut_streefdatumbf_rid");

                entity.Property(e => e.MutUrgencyid).HasColumnName("mut_urgencyid");

                entity.Property(e => e.MutUrgencyidAct).HasColumnName("mut_urgencyid_act");

                entity.Property(e => e.MutUrgencyidRid).HasColumnName("mut_urgencyid_rid");

                entity.Property(e => e.MutVerantwoordelijkeid).HasColumnName("mut_verantwoordelijkeid");

                entity.Property(e => e.MutVerantwoordelijkeidAct).HasColumnName("mut_verantwoordelijkeid_act");

                entity.Property(e => e.MutVerantwoordelijkeidRid).HasColumnName("mut_verantwoordelijkeid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutActiedoorbf)
                    .WithMany(p => p.MutatieProbleemMutActiedoorbf)
                    .HasForeignKey(d => d.MutActiedoorbfid)
                    .HasConstraintName("fk_actiedoor_mut_actiedoorbfid_mutatie_probleem");

                entity.HasOne(d => d.MutActiedoorbfidR)
                    .WithMany(p => p.MutatieProbleemMutActiedoorbfidR)
                    .HasForeignKey(d => d.MutActiedoorbfidRid)
                    .HasConstraintName("fk_mutatiereden_mut_actiedoorbfid_rid_mutatie_probleem");

                entity.HasOne(d => d.MutActiedoor)
                    .WithMany(p => p.MutatieProbleemMutActiedoor)
                    .HasForeignKey(d => d.MutActiedoorid)
                    .HasConstraintName("fk_actiedoor_mut_actiedoorid_mutatie_probleem");

                entity.HasOne(d => d.MutActiedooridR)
                    .WithMany(p => p.MutatieProbleemMutActiedooridR)
                    .HasForeignKey(d => d.MutActiedooridRid)
                    .HasConstraintName("fk_mutatiereden_mut_actiedoorid_rid_mutatie_probleem");

                entity.HasOne(d => d.MutBeheerderbf)
                    .WithMany(p => p.MutatieProbleemMutBeheerderbf)
                    .HasForeignKey(d => d.MutBeheerderbfid)
                    .HasConstraintName("fk_actiedoor_mut_beheerderbfid_mutatie_probleem");

                entity.HasOne(d => d.MutBeheerderbfidR)
                    .WithMany(p => p.MutatieProbleemMutBeheerderbfidR)
                    .HasForeignKey(d => d.MutBeheerderbfidRid)
                    .HasConstraintName("fk_mutatiereden_mut_beheerderbfid_rid_mutatie_probleem");

                entity.HasOne(d => d.MutDatumafgemeldR)
                    .WithMany(p => p.MutatieProbleemMutDatumafgemeldR)
                    .HasForeignKey(d => d.MutDatumafgemeldRid)
                    .HasConstraintName("fk_mutatiereden_mut_datumafgemeld_rid_mutatie_probleem");

                entity.HasOne(d => d.MutDatumafgemeldbfR)
                    .WithMany(p => p.MutatieProbleemMutDatumafgemeldbfR)
                    .HasForeignKey(d => d.MutDatumafgemeldbfRid)
                    .HasConstraintName("fk_mutatiereden_mut_datumafgemeldbf_rid_mutatie_probleem");

                entity.HasOne(d => d.MutDatumgereedR)
                    .WithMany(p => p.MutatieProbleemMutDatumgereedR)
                    .HasForeignKey(d => d.MutDatumgereedRid)
                    .HasConstraintName("fk_mutatiereden_mut_datumgereed_rid_mutatie_probleem");

                entity.HasOne(d => d.MutDatumgereedbfR)
                    .WithMany(p => p.MutatieProbleemMutDatumgereedbfR)
                    .HasForeignKey(d => d.MutDatumgereedbfRid)
                    .HasConstraintName("fk_mutatiereden_mut_datumgereedbf_rid_mutatie_probleem");

                entity.HasOne(d => d.MutOperatorgroupbf)
                    .WithMany(p => p.MutatieProbleemMutOperatorgroupbf)
                    .HasForeignKey(d => d.MutOperatorgroupbfid)
                    .HasConstraintName("fk_actiedoor_mut_operatorgroupbfid_mutatie_probleem");

                entity.HasOne(d => d.MutOperatorgroupbfidR)
                    .WithMany(p => p.MutatieProbleemMutOperatorgroupbfidR)
                    .HasForeignKey(d => d.MutOperatorgroupbfidRid)
                    .HasConstraintName("fk_mutatiereden_mut_operatorgroupbfid_rid_mutatie_probleem");

                entity.HasOne(d => d.MutOperatorgroup)
                    .WithMany(p => p.MutatieProbleemMutOperatorgroup)
                    .HasForeignKey(d => d.MutOperatorgroupid)
                    .HasConstraintName("fk_actiedoor_mut_operatorgroupid_mutatie_probleem");

                entity.HasOne(d => d.MutOperatorgroupidR)
                    .WithMany(p => p.MutatieProbleemMutOperatorgroupidR)
                    .HasForeignKey(d => d.MutOperatorgroupidRid)
                    .HasConstraintName("fk_mutatiereden_mut_operatorgroupid_rid_mutatie_probleem");

                entity.HasOne(d => d.MutPriority)
                    .WithMany(p => p.MutatieProbleem)
                    .HasForeignKey(d => d.MutPriorityid)
                    .HasConstraintName("fk_problem_priority_mut_priorityid_mutatie_probleem");

                entity.HasOne(d => d.MutPriorityidR)
                    .WithMany(p => p.MutatieProbleemMutPriorityidR)
                    .HasForeignKey(d => d.MutPriorityidRid)
                    .HasConstraintName("fk_mutatiereden_mut_priorityid_rid_mutatie_probleem");

                entity.HasOne(d => d.MutStatusbf)
                    .WithMany(p => p.MutatieProbleemMutStatusbf)
                    .HasForeignKey(d => d.MutStatusbfid)
                    .HasConstraintName("fk_probleem_status_mut_statusbfid_mutatie_probleem");

                entity.HasOne(d => d.MutStatusbfidR)
                    .WithMany(p => p.MutatieProbleemMutStatusbfidR)
                    .HasForeignKey(d => d.MutStatusbfidRid)
                    .HasConstraintName("fk_mutatiereden_mut_statusbfid_rid_mutatie_probleem");

                entity.HasOne(d => d.MutStatusNavigation)
                    .WithMany(p => p.MutatieProbleemMutStatusNavigation)
                    .HasForeignKey(d => d.MutStatusid)
                    .HasConstraintName("fk_probleem_status_mut_statusid_mutatie_probleem");

                entity.HasOne(d => d.MutStatusidR)
                    .WithMany(p => p.MutatieProbleemMutStatusidR)
                    .HasForeignKey(d => d.MutStatusidRid)
                    .HasConstraintName("fk_mutatiereden_mut_statusid_rid_mutatie_probleem");

                entity.HasOne(d => d.MutStreefdatumR)
                    .WithMany(p => p.MutatieProbleemMutStreefdatumR)
                    .HasForeignKey(d => d.MutStreefdatumRid)
                    .HasConstraintName("fk_mutatiereden_mut_streefdatum_rid_mutatie_probleem");

                entity.HasOne(d => d.MutStreefdatumbfR)
                    .WithMany(p => p.MutatieProbleemMutStreefdatumbfR)
                    .HasForeignKey(d => d.MutStreefdatumbfRid)
                    .HasConstraintName("fk_mutatiereden_mut_streefdatumbf_rid_mutatie_probleem");

                entity.HasOne(d => d.MutUrgency)
                    .WithMany(p => p.MutatieProbleem)
                    .HasForeignKey(d => d.MutUrgencyid)
                    .HasConstraintName("fk_problem_urgency_mut_urgencyid_mutatie_probleem");

                entity.HasOne(d => d.MutUrgencyidR)
                    .WithMany(p => p.MutatieProbleemMutUrgencyidR)
                    .HasForeignKey(d => d.MutUrgencyidRid)
                    .HasConstraintName("fk_mutatiereden_mut_urgencyid_rid_mutatie_probleem");

                entity.HasOne(d => d.MutVerantwoordelijke)
                    .WithMany(p => p.MutatieProbleemMutVerantwoordelijke)
                    .HasForeignKey(d => d.MutVerantwoordelijkeid)
                    .HasConstraintName("fk_actiedoor_mut_verantwoordelijkeid_mutatie_probleem");

                entity.HasOne(d => d.MutVerantwoordelijkeidR)
                    .WithMany(p => p.MutatieProbleemMutVerantwoordelijkeidR)
                    .HasForeignKey(d => d.MutVerantwoordelijkeidRid)
                    .HasConstraintName("fk_mutatiereden_mut_verantwoordelijkeid_rid_mutatie_probleem");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieProbleem)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_probleem_parentid_mutatie_probleem");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieProbleem)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_probleem");
            });

            modelBuilder.Entity<MutatieProfacboomProject>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_profacboom_project");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_mutatie_profacboom_project_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_profacboom_project_importid");

                entity.HasIndex(e => e.MutBehandelaarid)
                    .HasName("idx_mutatie_profacboom_project_mut_behandelaarid");

                entity.HasIndex(e => e.MutBehandelaaridRid)
                    .HasName("idx_mutatie_profacboom_project_mut_behandelaarid_rid");

                entity.HasIndex(e => e.MutCurrentplanexpenses)
                    .HasName("idx_mutatie_profacboom_project_mut_currentplanexpenses");

                entity.HasIndex(e => e.MutCurrentplanexpensesRid)
                    .HasName("idx_mutatie_profacboom_project_mut_currentplanexpenses_rid");

                entity.HasIndex(e => e.MutCurrentplantimetaken)
                    .HasName("idx_mutatie_profacboom_project_mut_currentplantimetaken");

                entity.HasIndex(e => e.MutCurrentplantimetakenRid)
                    .HasName("idx_mutatie_profacboom_project_mut_currentplantimetaken_rid");

                entity.HasIndex(e => e.MutEstimateexpenses)
                    .HasName("idx_mutatie_profacboom_project_mut_estimateexpenses");

                entity.HasIndex(e => e.MutEstimateexpensesRid)
                    .HasName("idx_mutatie_profacboom_project_mut_estimateexpenses_rid");

                entity.HasIndex(e => e.MutEstimatetimetaken)
                    .HasName("idx_mutatie_profacboom_project_mut_estimatetimetaken");

                entity.HasIndex(e => e.MutEstimatetimetakenRid)
                    .HasName("idx_mutatie_profacboom_project_mut_estimatetimetaken_rid");

                entity.HasIndex(e => e.MutMilestoneid)
                    .HasName("idx_mutatie_profacboom_project_mut_milestoneid");

                entity.HasIndex(e => e.MutMilestoneidRid)
                    .HasName("idx_mutatie_profacboom_project_mut_milestoneid_rid");

                entity.HasIndex(e => e.MutOperatorgroupid)
                    .HasName("idx_mutatie_profacboom_project_mut_operatorgroupid");

                entity.HasIndex(e => e.MutOperatorgroupidRid)
                    .HasName("idx_mutatie_profacboom_project_mut_operatorgroupid_rid");

                entity.HasIndex(e => e.MutOriginalplanexpenses)
                    .HasName("idx_mutatie_profacboom_project_mut_originalplanexpenses");

                entity.HasIndex(e => e.MutOriginalplanexpensesRid)
                    .HasName("idx_mutatie_profacboom_project_mut_originalplanexpenses_rid");

                entity.HasIndex(e => e.MutOriginalplantimetaken)
                    .HasName("idx_mutatie_profacboom_project_mut_originalplantimetaken");

                entity.HasIndex(e => e.MutOriginalplantimetakenRid)
                    .HasName("idx_mutatie_profacboom_project_mut_originalplantimetaken_rid");

                entity.HasIndex(e => e.MutPlannedfinaldate)
                    .HasName("idx_mutatie_profacboom_project_mut_plannedfinaldate");

                entity.HasIndex(e => e.MutPlannedfinaldateRid)
                    .HasName("idx_mutatie_profacboom_project_mut_plannedfinaldate_rid");

                entity.HasIndex(e => e.MutPlannedstartdate)
                    .HasName("idx_mutatie_profacboom_project_mut_plannedstartdate");

                entity.HasIndex(e => e.MutPlannedstartdateRid)
                    .HasName("idx_mutatie_profacboom_project_mut_plannedstartdate_rid");

                entity.HasIndex(e => e.MutResolveddate)
                    .HasName("idx_mutatie_profacboom_project_mut_resolveddate");

                entity.HasIndex(e => e.MutResolveddateRid)
                    .HasName("idx_mutatie_profacboom_project_mut_resolveddate_rid");

                entity.HasIndex(e => e.MutSkippeddate)
                    .HasName("idx_mutatie_profacboom_project_mut_skippeddate");

                entity.HasIndex(e => e.MutSkippeddateRid)
                    .HasName("idx_mutatie_profacboom_project_mut_skippeddate_rid");

                entity.HasIndex(e => e.MutStarteddate)
                    .HasName("idx_mutatie_profacboom_project_mut_starteddate");

                entity.HasIndex(e => e.MutStarteddateRid)
                    .HasName("idx_mutatie_profacboom_project_mut_starteddate_rid");

                entity.HasIndex(e => e.MutStatusid)
                    .HasName("idx_mutatie_profacboom_project_mut_statusid");

                entity.HasIndex(e => e.MutStatusidRid)
                    .HasName("idx_mutatie_profacboom_project_mut_statusid_rid");

                entity.HasIndex(e => e.MutVersionid)
                    .HasName("idx_mutatie_profacboom_project_mut_versionid");

                entity.HasIndex(e => e.MutVersionidRid)
                    .HasName("idx_mutatie_profacboom_project_mut_versionid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_profacboom_project_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_profacboom_project_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bestedetijd).HasColumnName("bestedetijd");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutBehandelaarid).HasColumnName("mut_behandelaarid");

                entity.Property(e => e.MutBehandelaaridAct).HasColumnName("mut_behandelaarid_act");

                entity.Property(e => e.MutBehandelaaridRid).HasColumnName("mut_behandelaarid_rid");

                entity.Property(e => e.MutCurrentplanexpenses)
                    .HasColumnName("mut_currentplanexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.MutCurrentplanexpensesAct).HasColumnName("mut_currentplanexpenses_act");

                entity.Property(e => e.MutCurrentplanexpensesRid).HasColumnName("mut_currentplanexpenses_rid");

                entity.Property(e => e.MutCurrentplantimetaken).HasColumnName("mut_currentplantimetaken");

                entity.Property(e => e.MutCurrentplantimetakenAct).HasColumnName("mut_currentplantimetaken_act");

                entity.Property(e => e.MutCurrentplantimetakenRid).HasColumnName("mut_currentplantimetaken_rid");

                entity.Property(e => e.MutEstimateexpenses)
                    .HasColumnName("mut_estimateexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.MutEstimateexpensesAct).HasColumnName("mut_estimateexpenses_act");

                entity.Property(e => e.MutEstimateexpensesRid).HasColumnName("mut_estimateexpenses_rid");

                entity.Property(e => e.MutEstimatetimetaken).HasColumnName("mut_estimatetimetaken");

                entity.Property(e => e.MutEstimatetimetakenAct).HasColumnName("mut_estimatetimetaken_act");

                entity.Property(e => e.MutEstimatetimetakenRid).HasColumnName("mut_estimatetimetaken_rid");

                entity.Property(e => e.MutMilestoneid).HasColumnName("mut_milestoneid");

                entity.Property(e => e.MutMilestoneidAct).HasColumnName("mut_milestoneid_act");

                entity.Property(e => e.MutMilestoneidRid).HasColumnName("mut_milestoneid_rid");

                entity.Property(e => e.MutOperatorgroupid).HasColumnName("mut_operatorgroupid");

                entity.Property(e => e.MutOperatorgroupidAct).HasColumnName("mut_operatorgroupid_act");

                entity.Property(e => e.MutOperatorgroupidRid).HasColumnName("mut_operatorgroupid_rid");

                entity.Property(e => e.MutOriginalplanexpenses)
                    .HasColumnName("mut_originalplanexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.MutOriginalplanexpensesAct).HasColumnName("mut_originalplanexpenses_act");

                entity.Property(e => e.MutOriginalplanexpensesRid).HasColumnName("mut_originalplanexpenses_rid");

                entity.Property(e => e.MutOriginalplantimetaken).HasColumnName("mut_originalplantimetaken");

                entity.Property(e => e.MutOriginalplantimetakenAct).HasColumnName("mut_originalplantimetaken_act");

                entity.Property(e => e.MutOriginalplantimetakenRid).HasColumnName("mut_originalplantimetaken_rid");

                entity.Property(e => e.MutPlannedfinaldate)
                    .HasColumnName("mut_plannedfinaldate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutPlannedfinaldateAct).HasColumnName("mut_plannedfinaldate_act");

                entity.Property(e => e.MutPlannedfinaldateRid).HasColumnName("mut_plannedfinaldate_rid");

                entity.Property(e => e.MutPlannedstartdate)
                    .HasColumnName("mut_plannedstartdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutPlannedstartdateAct).HasColumnName("mut_plannedstartdate_act");

                entity.Property(e => e.MutPlannedstartdateRid).HasColumnName("mut_plannedstartdate_rid");

                entity.Property(e => e.MutResolveddate)
                    .HasColumnName("mut_resolveddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutResolveddateAct).HasColumnName("mut_resolveddate_act");

                entity.Property(e => e.MutResolveddateRid).HasColumnName("mut_resolveddate_rid");

                entity.Property(e => e.MutSkippeddate)
                    .HasColumnName("mut_skippeddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutSkippeddateAct).HasColumnName("mut_skippeddate_act");

                entity.Property(e => e.MutSkippeddateRid).HasColumnName("mut_skippeddate_rid");

                entity.Property(e => e.MutStarteddate)
                    .HasColumnName("mut_starteddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutStarteddateAct).HasColumnName("mut_starteddate_act");

                entity.Property(e => e.MutStarteddateRid).HasColumnName("mut_starteddate_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutStatusid).HasColumnName("mut_statusid");

                entity.Property(e => e.MutStatusidAct).HasColumnName("mut_statusid_act");

                entity.Property(e => e.MutStatusidRid).HasColumnName("mut_statusid_rid");

                entity.Property(e => e.MutVersionid).HasColumnName("mut_versionid");

                entity.Property(e => e.MutVersionidAct).HasColumnName("mut_versionid_act");

                entity.Property(e => e.MutVersionidRid).HasColumnName("mut_versionid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutBehandelaar)
                    .WithMany(p => p.MutatieProfacboomProjectMutBehandelaar)
                    .HasForeignKey(d => d.MutBehandelaarid)
                    .HasConstraintName("fk_actiedoor_mut_behandelaarid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutBehandelaaridR)
                    .WithMany(p => p.MutatieProfacboomProjectMutBehandelaaridR)
                    .HasForeignKey(d => d.MutBehandelaaridRid)
                    .HasConstraintName("fk_mutatiereden_mut_behandelaarid_rid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutCurrentplanexpensesR)
                    .WithMany(p => p.MutatieProfacboomProjectMutCurrentplanexpensesR)
                    .HasForeignKey(d => d.MutCurrentplanexpensesRid)
                    .HasConstraintName("fk_mutatiereden_mut_currentplanexpenses_rid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutCurrentplantimetakenR)
                    .WithMany(p => p.MutatieProfacboomProjectMutCurrentplantimetakenR)
                    .HasForeignKey(d => d.MutCurrentplantimetakenRid)
                    .HasConstraintName("fk_mutatiereden_mut_currentplantimetaken_rid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutEstimateexpensesR)
                    .WithMany(p => p.MutatieProfacboomProjectMutEstimateexpensesR)
                    .HasForeignKey(d => d.MutEstimateexpensesRid)
                    .HasConstraintName("fk_mutatiereden_mut_estimateexpenses_rid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutEstimatetimetakenR)
                    .WithMany(p => p.MutatieProfacboomProjectMutEstimatetimetakenR)
                    .HasForeignKey(d => d.MutEstimatetimetakenRid)
                    .HasConstraintName("fk_mutatiereden_mut_estimatetimetaken_rid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutMilestone)
                    .WithMany(p => p.MutatieProfacboomProjectMutMilestone)
                    .HasForeignKey(d => d.MutMilestoneid)
                    .HasConstraintName("fk_changeversion_mut_milestoneid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutMilestoneidR)
                    .WithMany(p => p.MutatieProfacboomProjectMutMilestoneidR)
                    .HasForeignKey(d => d.MutMilestoneidRid)
                    .HasConstraintName("fk_mutatiereden_mut_milestoneid_rid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutOperatorgroup)
                    .WithMany(p => p.MutatieProfacboomProjectMutOperatorgroup)
                    .HasForeignKey(d => d.MutOperatorgroupid)
                    .HasConstraintName("fk_actiedoor_mut_operatorgroupid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutOperatorgroupidR)
                    .WithMany(p => p.MutatieProfacboomProjectMutOperatorgroupidR)
                    .HasForeignKey(d => d.MutOperatorgroupidRid)
                    .HasConstraintName("fk_mutatiereden_mut_operatorgroupid_rid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutOriginalplanexpensesR)
                    .WithMany(p => p.MutatieProfacboomProjectMutOriginalplanexpensesR)
                    .HasForeignKey(d => d.MutOriginalplanexpensesRid)
                    .HasConstraintName("fk_mutatiereden_mut_originalplanexpenses_rid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutOriginalplantimetakenR)
                    .WithMany(p => p.MutatieProfacboomProjectMutOriginalplantimetakenR)
                    .HasForeignKey(d => d.MutOriginalplantimetakenRid)
                    .HasConstraintName("fk_mutatiereden_mut_originalplantimetaken_rid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutPlannedfinaldateR)
                    .WithMany(p => p.MutatieProfacboomProjectMutPlannedfinaldateR)
                    .HasForeignKey(d => d.MutPlannedfinaldateRid)
                    .HasConstraintName("fk_mutatiereden_mut_plannedfinaldate_rid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutPlannedstartdateR)
                    .WithMany(p => p.MutatieProfacboomProjectMutPlannedstartdateR)
                    .HasForeignKey(d => d.MutPlannedstartdateRid)
                    .HasConstraintName("fk_mutatiereden_mut_plannedstartdate_rid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutResolveddateR)
                    .WithMany(p => p.MutatieProfacboomProjectMutResolveddateR)
                    .HasForeignKey(d => d.MutResolveddateRid)
                    .HasConstraintName("fk_mutatiereden_mut_resolveddate_rid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutSkippeddateR)
                    .WithMany(p => p.MutatieProfacboomProjectMutSkippeddateR)
                    .HasForeignKey(d => d.MutSkippeddateRid)
                    .HasConstraintName("fk_mutatiereden_mut_skippeddate_rid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutStarteddateR)
                    .WithMany(p => p.MutatieProfacboomProjectMutStarteddateR)
                    .HasForeignKey(d => d.MutStarteddateRid)
                    .HasConstraintName("fk_mutatiereden_mut_starteddate_rid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutStatusNavigation)
                    .WithMany(p => p.MutatieProfacboomProject)
                    .HasForeignKey(d => d.MutStatusid)
                    .HasConstraintName("fk_projectstatus_mut_statusid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutStatusidR)
                    .WithMany(p => p.MutatieProfacboomProjectMutStatusidR)
                    .HasForeignKey(d => d.MutStatusidRid)
                    .HasConstraintName("fk_mutatiereden_mut_statusid_rid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutVersion)
                    .WithMany(p => p.MutatieProfacboomProjectMutVersion)
                    .HasForeignKey(d => d.MutVersionid)
                    .HasConstraintName("fk_changeversion_mut_versionid_mutatie_profacboom_project");

                entity.HasOne(d => d.MutVersionidR)
                    .WithMany(p => p.MutatieProfacboomProjectMutVersionidR)
                    .HasForeignKey(d => d.MutVersionidRid)
                    .HasConstraintName("fk_mutatiereden_mut_versionid_rid_mutatie_profacboom_project");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieProfacboomProject)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_profacboom_project_parentid_mutatie_profacboom_project");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieProfacboomProject)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_profacboom_project");
            });

            modelBuilder.Entity<Mutatiereden>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatiereden");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_mutatiereden_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_mutatiereden_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_mutatiereden_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasColumnName("code")
                    .HasMaxLength(16);

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<MutatieReservering>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_reservering");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_reservering_importid");

                entity.HasIndex(e => e.MutBeheerderid)
                    .HasName("idx_mutatie_reservering_mut_beheerderid");

                entity.HasIndex(e => e.MutBeheerderidRid)
                    .HasName("idx_mutatie_reservering_mut_beheerderid_rid");

                entity.HasIndex(e => e.MutCategorieid)
                    .HasName("idx_mutatie_reservering_mut_categorieid");

                entity.HasIndex(e => e.MutCategorieidRid)
                    .HasName("idx_mutatie_reservering_mut_categorieid_rid");

                entity.HasIndex(e => e.MutEinddatumgepland)
                    .HasName("idx_mutatie_reservering_mut_einddatumgepland");

                entity.HasIndex(e => e.MutEinddatumgeplandRid)
                    .HasName("idx_mutatie_reservering_mut_einddatumgepland_rid");

                entity.HasIndex(e => e.MutStartdatumgepland)
                    .HasName("idx_mutatie_reservering_mut_startdatumgepland");

                entity.HasIndex(e => e.MutStartdatumgeplandRid)
                    .HasName("idx_mutatie_reservering_mut_startdatumgepland_rid");

                entity.HasIndex(e => e.MutStatusid)
                    .HasName("idx_mutatie_reservering_mut_statusid");

                entity.HasIndex(e => e.MutStatusidRid)
                    .HasName("idx_mutatie_reservering_mut_statusid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_reservering_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_reservering_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutBeheerderid).HasColumnName("mut_beheerderid");

                entity.Property(e => e.MutBeheerderidAct).HasColumnName("mut_beheerderid_act");

                entity.Property(e => e.MutBeheerderidRid).HasColumnName("mut_beheerderid_rid");

                entity.Property(e => e.MutCategorieid).HasColumnName("mut_categorieid");

                entity.Property(e => e.MutCategorieidAct).HasColumnName("mut_categorieid_act");

                entity.Property(e => e.MutCategorieidRid).HasColumnName("mut_categorieid_rid");

                entity.Property(e => e.MutEinddatumgepland)
                    .HasColumnName("mut_einddatumgepland")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutEinddatumgeplandAct).HasColumnName("mut_einddatumgepland_act");

                entity.Property(e => e.MutEinddatumgeplandRid).HasColumnName("mut_einddatumgepland_rid");

                entity.Property(e => e.MutStartdatumgepland)
                    .HasColumnName("mut_startdatumgepland")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutStartdatumgeplandAct).HasColumnName("mut_startdatumgepland_act");

                entity.Property(e => e.MutStartdatumgeplandRid).HasColumnName("mut_startdatumgepland_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutStatusid).HasColumnName("mut_statusid");

                entity.Property(e => e.MutStatusidAct).HasColumnName("mut_statusid_act");

                entity.Property(e => e.MutStatusidRid).HasColumnName("mut_statusid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutBeheerder)
                    .WithMany(p => p.MutatieReservering)
                    .HasForeignKey(d => d.MutBeheerderid)
                    .HasConstraintName("fk_actiedoor_mut_beheerderid_mutatie_reservering");

                entity.HasOne(d => d.MutBeheerderidR)
                    .WithMany(p => p.MutatieReserveringMutBeheerderidR)
                    .HasForeignKey(d => d.MutBeheerderidRid)
                    .HasConstraintName("fk_mutatiereden_mut_beheerderid_rid_mutatie_reservering");

                entity.HasOne(d => d.MutCategorie)
                    .WithMany(p => p.MutatieReservering)
                    .HasForeignKey(d => d.MutCategorieid)
                    .HasConstraintName("fk_verhuurcategorie_mut_categorieid_mutatie_reservering");

                entity.HasOne(d => d.MutCategorieidR)
                    .WithMany(p => p.MutatieReserveringMutCategorieidR)
                    .HasForeignKey(d => d.MutCategorieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_categorieid_rid_mutatie_reservering");

                entity.HasOne(d => d.MutEinddatumgeplandR)
                    .WithMany(p => p.MutatieReserveringMutEinddatumgeplandR)
                    .HasForeignKey(d => d.MutEinddatumgeplandRid)
                    .HasConstraintName("fk_mutatiereden_mut_einddatumgepland_rid_mutatie_reservering");

                entity.HasOne(d => d.MutStartdatumgeplandR)
                    .WithMany(p => p.MutatieReserveringMutStartdatumgeplandR)
                    .HasForeignKey(d => d.MutStartdatumgeplandRid)
                    .HasConstraintName("fk_mutatiereden_mut_startdatumgepland_rid_mutatie_reservering");

                entity.HasOne(d => d.MutStatusNavigation)
                    .WithMany(p => p.MutatieReservering)
                    .HasForeignKey(d => d.MutStatusid)
                    .HasConstraintName("fk_verhuurstatus_mut_statusid_mutatie_reservering");

                entity.HasOne(d => d.MutStatusidR)
                    .WithMany(p => p.MutatieReserveringMutStatusidR)
                    .HasForeignKey(d => d.MutStatusidRid)
                    .HasConstraintName("fk_mutatiereden_mut_statusid_rid_mutatie_reservering");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieReservering)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_reservering_parentid_mutatie_reservering");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieReservering)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_reservering");
            });

            modelBuilder.Entity<MutatieSoftware>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_software");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_mutatie_software_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_software_importid");

                entity.HasIndex(e => e.MutConfiguratieid)
                    .HasName("idx_mutatie_software_mut_configuratieid");

                entity.HasIndex(e => e.MutConfiguratieidRid)
                    .HasName("idx_mutatie_software_mut_configuratieid_rid");

                entity.HasIndex(e => e.MutLokatieid)
                    .HasName("idx_mutatie_software_mut_lokatieid");

                entity.HasIndex(e => e.MutLokatieidRid)
                    .HasName("idx_mutatie_software_mut_lokatieid_rid");

                entity.HasIndex(e => e.MutPersoongroepid)
                    .HasName("idx_mutatie_software_mut_persoongroepid");

                entity.HasIndex(e => e.MutPersoongroepidRid)
                    .HasName("idx_mutatie_software_mut_persoongroepid_rid");

                entity.HasIndex(e => e.MutPersoonid)
                    .HasName("idx_mutatie_software_mut_persoonid");

                entity.HasIndex(e => e.MutPersoonidRid)
                    .HasName("idx_mutatie_software_mut_persoonid_rid");

                entity.HasIndex(e => e.MutVestigingid)
                    .HasName("idx_mutatie_software_mut_vestigingid");

                entity.HasIndex(e => e.MutVestigingidRid)
                    .HasName("idx_mutatie_software_mut_vestigingid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_software_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_software_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutConfiguratieid).HasColumnName("mut_configuratieid");

                entity.Property(e => e.MutConfiguratieidAct).HasColumnName("mut_configuratieid_act");

                entity.Property(e => e.MutConfiguratieidRid).HasColumnName("mut_configuratieid_rid");

                entity.Property(e => e.MutLokatieid).HasColumnName("mut_lokatieid");

                entity.Property(e => e.MutLokatieidAct).HasColumnName("mut_lokatieid_act");

                entity.Property(e => e.MutLokatieidRid).HasColumnName("mut_lokatieid_rid");

                entity.Property(e => e.MutPersoongroepid).HasColumnName("mut_persoongroepid");

                entity.Property(e => e.MutPersoongroepidAct).HasColumnName("mut_persoongroepid_act");

                entity.Property(e => e.MutPersoongroepidRid).HasColumnName("mut_persoongroepid_rid");

                entity.Property(e => e.MutPersoonid).HasColumnName("mut_persoonid");

                entity.Property(e => e.MutPersoonidAct).HasColumnName("mut_persoonid_act");

                entity.Property(e => e.MutPersoonidRid).HasColumnName("mut_persoonid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutVestigingid).HasColumnName("mut_vestigingid");

                entity.Property(e => e.MutVestigingidAct).HasColumnName("mut_vestigingid_act");

                entity.Property(e => e.MutVestigingidRid).HasColumnName("mut_vestigingid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutConfiguratie)
                    .WithMany(p => p.MutatieSoftware)
                    .HasForeignKey(d => d.MutConfiguratieid)
                    .HasConstraintName("fk_configuratie_mut_configuratieid_mutatie_software");

                entity.HasOne(d => d.MutConfiguratieidR)
                    .WithMany(p => p.MutatieSoftwareMutConfiguratieidR)
                    .HasForeignKey(d => d.MutConfiguratieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_configuratieid_rid_mutatie_software");

                entity.HasOne(d => d.MutLokatie)
                    .WithMany(p => p.MutatieSoftware)
                    .HasForeignKey(d => d.MutLokatieid)
                    .HasConstraintName("fk_locatie_mut_lokatieid_mutatie_software");

                entity.HasOne(d => d.MutLokatieidR)
                    .WithMany(p => p.MutatieSoftwareMutLokatieidR)
                    .HasForeignKey(d => d.MutLokatieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_lokatieid_rid_mutatie_software");

                entity.HasOne(d => d.MutPersoongroep)
                    .WithMany(p => p.MutatieSoftware)
                    .HasForeignKey(d => d.MutPersoongroepid)
                    .HasConstraintName("fk_persoongroep_mut_persoongroepid_mutatie_software");

                entity.HasOne(d => d.MutPersoongroepidR)
                    .WithMany(p => p.MutatieSoftwareMutPersoongroepidR)
                    .HasForeignKey(d => d.MutPersoongroepidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoongroepid_rid_mutatie_software");

                entity.HasOne(d => d.MutPersoon)
                    .WithMany(p => p.MutatieSoftware)
                    .HasForeignKey(d => d.MutPersoonid)
                    .HasConstraintName("fk_persoon_mut_persoonid_mutatie_software");

                entity.HasOne(d => d.MutPersoonidR)
                    .WithMany(p => p.MutatieSoftwareMutPersoonidR)
                    .HasForeignKey(d => d.MutPersoonidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoonid_rid_mutatie_software");

                entity.HasOne(d => d.MutVestiging)
                    .WithMany(p => p.MutatieSoftware)
                    .HasForeignKey(d => d.MutVestigingid)
                    .HasConstraintName("fk_vestiging_mut_vestigingid_mutatie_software");

                entity.HasOne(d => d.MutVestigingidR)
                    .WithMany(p => p.MutatieSoftwareMutVestigingidR)
                    .HasForeignKey(d => d.MutVestigingidRid)
                    .HasConstraintName("fk_mutatiereden_mut_vestigingid_rid_mutatie_software");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieSoftware)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_software_parentid_mutatie_software");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieSoftware)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_software");
            });

            modelBuilder.Entity<MutatieTelefonie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_telefonie");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_mutatie_telefonie_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_telefonie_importid");

                entity.HasIndex(e => e.MutConfiguratieid)
                    .HasName("idx_mutatie_telefonie_mut_configuratieid");

                entity.HasIndex(e => e.MutConfiguratieidRid)
                    .HasName("idx_mutatie_telefonie_mut_configuratieid_rid");

                entity.HasIndex(e => e.MutLokatieid)
                    .HasName("idx_mutatie_telefonie_mut_lokatieid");

                entity.HasIndex(e => e.MutLokatieidRid)
                    .HasName("idx_mutatie_telefonie_mut_lokatieid_rid");

                entity.HasIndex(e => e.MutPersoongroepid)
                    .HasName("idx_mutatie_telefonie_mut_persoongroepid");

                entity.HasIndex(e => e.MutPersoongroepidRid)
                    .HasName("idx_mutatie_telefonie_mut_persoongroepid_rid");

                entity.HasIndex(e => e.MutPersoonid)
                    .HasName("idx_mutatie_telefonie_mut_persoonid");

                entity.HasIndex(e => e.MutPersoonidRid)
                    .HasName("idx_mutatie_telefonie_mut_persoonid_rid");

                entity.HasIndex(e => e.MutVestigingid)
                    .HasName("idx_mutatie_telefonie_mut_vestigingid");

                entity.HasIndex(e => e.MutVestigingidRid)
                    .HasName("idx_mutatie_telefonie_mut_vestigingid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_telefonie_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_telefonie_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutConfiguratieid).HasColumnName("mut_configuratieid");

                entity.Property(e => e.MutConfiguratieidAct).HasColumnName("mut_configuratieid_act");

                entity.Property(e => e.MutConfiguratieidRid).HasColumnName("mut_configuratieid_rid");

                entity.Property(e => e.MutLokatieid).HasColumnName("mut_lokatieid");

                entity.Property(e => e.MutLokatieidAct).HasColumnName("mut_lokatieid_act");

                entity.Property(e => e.MutLokatieidRid).HasColumnName("mut_lokatieid_rid");

                entity.Property(e => e.MutPersoongroepid).HasColumnName("mut_persoongroepid");

                entity.Property(e => e.MutPersoongroepidAct).HasColumnName("mut_persoongroepid_act");

                entity.Property(e => e.MutPersoongroepidRid).HasColumnName("mut_persoongroepid_rid");

                entity.Property(e => e.MutPersoonid).HasColumnName("mut_persoonid");

                entity.Property(e => e.MutPersoonidAct).HasColumnName("mut_persoonid_act");

                entity.Property(e => e.MutPersoonidRid).HasColumnName("mut_persoonid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutVestigingid).HasColumnName("mut_vestigingid");

                entity.Property(e => e.MutVestigingidAct).HasColumnName("mut_vestigingid_act");

                entity.Property(e => e.MutVestigingidRid).HasColumnName("mut_vestigingid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutConfiguratie)
                    .WithMany(p => p.MutatieTelefonie)
                    .HasForeignKey(d => d.MutConfiguratieid)
                    .HasConstraintName("fk_configuratie_mut_configuratieid_mutatie_telefonie");

                entity.HasOne(d => d.MutConfiguratieidR)
                    .WithMany(p => p.MutatieTelefonieMutConfiguratieidR)
                    .HasForeignKey(d => d.MutConfiguratieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_configuratieid_rid_mutatie_telefonie");

                entity.HasOne(d => d.MutLokatie)
                    .WithMany(p => p.MutatieTelefonie)
                    .HasForeignKey(d => d.MutLokatieid)
                    .HasConstraintName("fk_locatie_mut_lokatieid_mutatie_telefonie");

                entity.HasOne(d => d.MutLokatieidR)
                    .WithMany(p => p.MutatieTelefonieMutLokatieidR)
                    .HasForeignKey(d => d.MutLokatieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_lokatieid_rid_mutatie_telefonie");

                entity.HasOne(d => d.MutPersoongroep)
                    .WithMany(p => p.MutatieTelefonie)
                    .HasForeignKey(d => d.MutPersoongroepid)
                    .HasConstraintName("fk_persoongroep_mut_persoongroepid_mutatie_telefonie");

                entity.HasOne(d => d.MutPersoongroepidR)
                    .WithMany(p => p.MutatieTelefonieMutPersoongroepidR)
                    .HasForeignKey(d => d.MutPersoongroepidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoongroepid_rid_mutatie_telefonie");

                entity.HasOne(d => d.MutPersoon)
                    .WithMany(p => p.MutatieTelefonie)
                    .HasForeignKey(d => d.MutPersoonid)
                    .HasConstraintName("fk_persoon_mut_persoonid_mutatie_telefonie");

                entity.HasOne(d => d.MutPersoonidR)
                    .WithMany(p => p.MutatieTelefonieMutPersoonidR)
                    .HasForeignKey(d => d.MutPersoonidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoonid_rid_mutatie_telefonie");

                entity.HasOne(d => d.MutVestiging)
                    .WithMany(p => p.MutatieTelefonie)
                    .HasForeignKey(d => d.MutVestigingid)
                    .HasConstraintName("fk_vestiging_mut_vestigingid_mutatie_telefonie");

                entity.HasOne(d => d.MutVestigingidR)
                    .WithMany(p => p.MutatieTelefonieMutVestigingidR)
                    .HasForeignKey(d => d.MutVestigingidRid)
                    .HasConstraintName("fk_mutatiereden_mut_vestigingid_rid_mutatie_telefonie");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieTelefonie)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_telefonie_parentid_mutatie_telefonie");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieTelefonie)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_telefonie");
            });

            modelBuilder.Entity<MutatieVestiging>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_vestiging");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_vestiging_importid");

                entity.HasIndex(e => e.MutAnnualdepreciationRid)
                    .HasName("idx_mutatie_vestiging_mut_annualdepreciation_rid");

                entity.HasIndex(e => e.MutBuildingLevelEpcId)
                    .HasName("idx_mutatie_vestiging_mut_building_level_epc_id");

                entity.HasIndex(e => e.MutBuildingLevelEpcIdRid)
                    .HasName("idx_mutatie_vestiging_mut_building_level_epc_id_rid");

                entity.HasIndex(e => e.MutDepreciationperiodRid)
                    .HasName("idx_mutatie_vestiging_mut_depreciationperiod_rid");

                entity.HasIndex(e => e.MutDesignationId)
                    .HasName("idx_mutatie_vestiging_mut_designation_id");

                entity.HasIndex(e => e.MutDesignationIdRid)
                    .HasName("idx_mutatie_vestiging_mut_designation_id_rid");

                entity.HasIndex(e => e.MutEnergyPerformanceId)
                    .HasName("idx_mutatie_vestiging_mut_energy_performance_id");

                entity.HasIndex(e => e.MutEnergyPerformanceIdRid)
                    .HasName("idx_mutatie_vestiging_mut_energy_performance_id_rid");

                entity.HasIndex(e => e.MutEnergyperformancemeasurementdateRid)
                    .HasName("idx_mutatie_vestiging_mut_energyperformancemeasurementdate_rid");

                entity.HasIndex(e => e.MutEnvironmentalImpactId)
                    .HasName("idx_mutatie_vestiging_mut_environmental_impact_id");

                entity.HasIndex(e => e.MutEnvironmentalImpactIdRid)
                    .HasName("idx_mutatie_vestiging_mut_environmental_impact_id_rid");

                entity.HasIndex(e => e.MutEnvironmentalimpactmeasurementdateRid)
                    .HasName("idx_mutatie_vestiging_mut_environmentalimpactmeasurementdate_rid");

                entity.HasIndex(e => e.MutExtraaid)
                    .HasName("idx_mutatie_vestiging_mut_extraaid");

                entity.HasIndex(e => e.MutExtraaidRid)
                    .HasName("idx_mutatie_vestiging_mut_extraaid_rid");

                entity.HasIndex(e => e.MutExtrabid)
                    .HasName("idx_mutatie_vestiging_mut_extrabid");

                entity.HasIndex(e => e.MutExtrabidRid)
                    .HasName("idx_mutatie_vestiging_mut_extrabid_rid");

                entity.HasIndex(e => e.MutForeclosurevalueRid)
                    .HasName("idx_mutatie_vestiging_mut_foreclosurevalue_rid");

                entity.HasIndex(e => e.MutForeclosurevaluesurveydateRid)
                    .HasName("idx_mutatie_vestiging_mut_foreclosurevaluesurveydate_rid");

                entity.HasIndex(e => e.MutHistoricalSiteId)
                    .HasName("idx_mutatie_vestiging_mut_historical_site_id");

                entity.HasIndex(e => e.MutHistoricalSiteIdRid)
                    .HasName("idx_mutatie_vestiging_mut_historical_site_id_rid");

                entity.HasIndex(e => e.MutLandvalueRid)
                    .HasName("idx_mutatie_vestiging_mut_landvalue_rid");

                entity.HasIndex(e => e.MutLandvaluesurveydateRid)
                    .HasName("idx_mutatie_vestiging_mut_landvaluesurveydate_rid");

                entity.HasIndex(e => e.MutMarketvalueRid)
                    .HasName("idx_mutatie_vestiging_mut_marketvalue_rid");

                entity.HasIndex(e => e.MutMarketvaluesurveydateRid)
                    .HasName("idx_mutatie_vestiging_mut_marketvaluesurveydate_rid");

                entity.HasIndex(e => e.MutOwneremailRid)
                    .HasName("idx_mutatie_vestiging_mut_owneremail_rid");

                entity.HasIndex(e => e.MutOwnermobilephoneRid)
                    .HasName("idx_mutatie_vestiging_mut_ownermobilephone_rid");

                entity.HasIndex(e => e.MutOwnernameRid)
                    .HasName("idx_mutatie_vestiging_mut_ownername_rid");

                entity.HasIndex(e => e.MutOwnertelephoneRid)
                    .HasName("idx_mutatie_vestiging_mut_ownertelephone_rid");

                entity.HasIndex(e => e.MutPriceofacquisitionRid)
                    .HasName("idx_mutatie_vestiging_mut_priceofacquisition_rid");

                entity.HasIndex(e => e.MutPropertyvaluationRid)
                    .HasName("idx_mutatie_vestiging_mut_propertyvaluation_rid");

                entity.HasIndex(e => e.MutRebuildingvalueRid)
                    .HasName("idx_mutatie_vestiging_mut_rebuildingvalue_rid");

                entity.HasIndex(e => e.MutRebuildingvaluesurveydateRid)
                    .HasName("idx_mutatie_vestiging_mut_rebuildingvaluesurveydate_rid");

                entity.HasIndex(e => e.MutRegistryreferenceRid)
                    .HasName("idx_mutatie_vestiging_mut_registryreference_rid");

                entity.HasIndex(e => e.MutRentalvalueRid)
                    .HasName("idx_mutatie_vestiging_mut_rentalvalue_rid");

                entity.HasIndex(e => e.MutRentalvaluesurveydateRid)
                    .HasName("idx_mutatie_vestiging_mut_rentalvaluesurveydate_rid");

                entity.HasIndex(e => e.MutResidualvalueRid)
                    .HasName("idx_mutatie_vestiging_mut_residualvalue_rid");

                entity.HasIndex(e => e.MutSurfaceAreaM2Rid)
                    .HasName("idx_mutatie_vestiging_mut_surface_area_m2_rid");

                entity.HasIndex(e => e.MutTotalcostofacquisitionRid)
                    .HasName("idx_mutatie_vestiging_mut_totalcostofacquisition_rid");

                entity.HasIndex(e => e.MutVolumeM3Rid)
                    .HasName("idx_mutatie_vestiging_mut_volume_m3_rid");

                entity.HasIndex(e => e.MutYearofacquisitionRid)
                    .HasName("idx_mutatie_vestiging_mut_yearofacquisition_rid");

                entity.HasIndex(e => e.MutYearofconstructionRid)
                    .HasName("idx_mutatie_vestiging_mut_yearofconstruction_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_vestiging_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_vestiging_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutAnnualdepreciation)
                    .HasColumnName("mut_annualdepreciation")
                    .HasColumnType("money");

                entity.Property(e => e.MutAnnualdepreciationAct).HasColumnName("mut_annualdepreciation_act");

                entity.Property(e => e.MutAnnualdepreciationRid).HasColumnName("mut_annualdepreciation_rid");

                entity.Property(e => e.MutBuildingLevelEpcId).HasColumnName("mut_building_level_epc_id");

                entity.Property(e => e.MutBuildingLevelEpcIdAct).HasColumnName("mut_building_level_epc_id_act");

                entity.Property(e => e.MutBuildingLevelEpcIdRid).HasColumnName("mut_building_level_epc_id_rid");

                entity.Property(e => e.MutDepreciationperiod).HasColumnName("mut_depreciationperiod");

                entity.Property(e => e.MutDepreciationperiodAct).HasColumnName("mut_depreciationperiod_act");

                entity.Property(e => e.MutDepreciationperiodRid).HasColumnName("mut_depreciationperiod_rid");

                entity.Property(e => e.MutDesignationId).HasColumnName("mut_designation_id");

                entity.Property(e => e.MutDesignationIdAct).HasColumnName("mut_designation_id_act");

                entity.Property(e => e.MutDesignationIdRid).HasColumnName("mut_designation_id_rid");

                entity.Property(e => e.MutEnergyPerformanceId).HasColumnName("mut_energy_performance_id");

                entity.Property(e => e.MutEnergyPerformanceIdAct).HasColumnName("mut_energy_performance_id_act");

                entity.Property(e => e.MutEnergyPerformanceIdRid).HasColumnName("mut_energy_performance_id_rid");

                entity.Property(e => e.MutEnergyperformancemeasurementdate)
                    .HasColumnName("mut_energyperformancemeasurementdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutEnergyperformancemeasurementdateAct).HasColumnName("mut_energyperformancemeasurementdate_act");

                entity.Property(e => e.MutEnergyperformancemeasurementdateRid).HasColumnName("mut_energyperformancemeasurementdate_rid");

                entity.Property(e => e.MutEnvironmentalImpactId).HasColumnName("mut_environmental_impact_id");

                entity.Property(e => e.MutEnvironmentalImpactIdAct).HasColumnName("mut_environmental_impact_id_act");

                entity.Property(e => e.MutEnvironmentalImpactIdRid).HasColumnName("mut_environmental_impact_id_rid");

                entity.Property(e => e.MutEnvironmentalimpactmeasurementdate)
                    .HasColumnName("mut_environmentalimpactmeasurementdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutEnvironmentalimpactmeasurementdateAct).HasColumnName("mut_environmentalimpactmeasurementdate_act");

                entity.Property(e => e.MutEnvironmentalimpactmeasurementdateRid).HasColumnName("mut_environmentalimpactmeasurementdate_rid");

                entity.Property(e => e.MutExtraaid).HasColumnName("mut_extraaid");

                entity.Property(e => e.MutExtraaidAct).HasColumnName("mut_extraaid_act");

                entity.Property(e => e.MutExtraaidRid).HasColumnName("mut_extraaid_rid");

                entity.Property(e => e.MutExtrabid).HasColumnName("mut_extrabid");

                entity.Property(e => e.MutExtrabidAct).HasColumnName("mut_extrabid_act");

                entity.Property(e => e.MutExtrabidRid).HasColumnName("mut_extrabid_rid");

                entity.Property(e => e.MutForeclosurevalue)
                    .HasColumnName("mut_foreclosurevalue")
                    .HasColumnType("money");

                entity.Property(e => e.MutForeclosurevalueAct).HasColumnName("mut_foreclosurevalue_act");

                entity.Property(e => e.MutForeclosurevalueRid).HasColumnName("mut_foreclosurevalue_rid");

                entity.Property(e => e.MutForeclosurevaluesurveydate)
                    .HasColumnName("mut_foreclosurevaluesurveydate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutForeclosurevaluesurveydateAct).HasColumnName("mut_foreclosurevaluesurveydate_act");

                entity.Property(e => e.MutForeclosurevaluesurveydateRid).HasColumnName("mut_foreclosurevaluesurveydate_rid");

                entity.Property(e => e.MutHistoricalSiteId).HasColumnName("mut_historical_site_id");

                entity.Property(e => e.MutHistoricalSiteIdAct).HasColumnName("mut_historical_site_id_act");

                entity.Property(e => e.MutHistoricalSiteIdRid).HasColumnName("mut_historical_site_id_rid");

                entity.Property(e => e.MutLandvalue)
                    .HasColumnName("mut_landvalue")
                    .HasColumnType("money");

                entity.Property(e => e.MutLandvalueAct).HasColumnName("mut_landvalue_act");

                entity.Property(e => e.MutLandvalueRid).HasColumnName("mut_landvalue_rid");

                entity.Property(e => e.MutLandvaluesurveydate)
                    .HasColumnName("mut_landvaluesurveydate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutLandvaluesurveydateAct).HasColumnName("mut_landvaluesurveydate_act");

                entity.Property(e => e.MutLandvaluesurveydateRid).HasColumnName("mut_landvaluesurveydate_rid");

                entity.Property(e => e.MutMarketvalue)
                    .HasColumnName("mut_marketvalue")
                    .HasColumnType("money");

                entity.Property(e => e.MutMarketvalueAct).HasColumnName("mut_marketvalue_act");

                entity.Property(e => e.MutMarketvalueRid).HasColumnName("mut_marketvalue_rid");

                entity.Property(e => e.MutMarketvaluesurveydate)
                    .HasColumnName("mut_marketvaluesurveydate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutMarketvaluesurveydateAct).HasColumnName("mut_marketvaluesurveydate_act");

                entity.Property(e => e.MutMarketvaluesurveydateRid).HasColumnName("mut_marketvaluesurveydate_rid");

                entity.Property(e => e.MutOwneremail)
                    .HasColumnName("mut_owneremail")
                    .HasMaxLength(100);

                entity.Property(e => e.MutOwneremailAct).HasColumnName("mut_owneremail_act");

                entity.Property(e => e.MutOwneremailRid).HasColumnName("mut_owneremail_rid");

                entity.Property(e => e.MutOwnermobilephone)
                    .HasColumnName("mut_ownermobilephone")
                    .HasMaxLength(100);

                entity.Property(e => e.MutOwnermobilephoneAct).HasColumnName("mut_ownermobilephone_act");

                entity.Property(e => e.MutOwnermobilephoneRid).HasColumnName("mut_ownermobilephone_rid");

                entity.Property(e => e.MutOwnername)
                    .HasColumnName("mut_ownername")
                    .HasMaxLength(109);

                entity.Property(e => e.MutOwnernameAct).HasColumnName("mut_ownername_act");

                entity.Property(e => e.MutOwnernameRid).HasColumnName("mut_ownername_rid");

                entity.Property(e => e.MutOwnertelephone)
                    .HasColumnName("mut_ownertelephone")
                    .HasMaxLength(100);

                entity.Property(e => e.MutOwnertelephoneAct).HasColumnName("mut_ownertelephone_act");

                entity.Property(e => e.MutOwnertelephoneRid).HasColumnName("mut_ownertelephone_rid");

                entity.Property(e => e.MutPriceofacquisition)
                    .HasColumnName("mut_priceofacquisition")
                    .HasColumnType("money");

                entity.Property(e => e.MutPriceofacquisitionAct).HasColumnName("mut_priceofacquisition_act");

                entity.Property(e => e.MutPriceofacquisitionRid).HasColumnName("mut_priceofacquisition_rid");

                entity.Property(e => e.MutPropertyvaluation)
                    .HasColumnName("mut_propertyvaluation")
                    .HasColumnType("money");

                entity.Property(e => e.MutPropertyvaluationAct).HasColumnName("mut_propertyvaluation_act");

                entity.Property(e => e.MutPropertyvaluationRid).HasColumnName("mut_propertyvaluation_rid");

                entity.Property(e => e.MutRebuildingvalue)
                    .HasColumnName("mut_rebuildingvalue")
                    .HasColumnType("money");

                entity.Property(e => e.MutRebuildingvalueAct).HasColumnName("mut_rebuildingvalue_act");

                entity.Property(e => e.MutRebuildingvalueRid).HasColumnName("mut_rebuildingvalue_rid");

                entity.Property(e => e.MutRebuildingvaluesurveydate)
                    .HasColumnName("mut_rebuildingvaluesurveydate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutRebuildingvaluesurveydateAct).HasColumnName("mut_rebuildingvaluesurveydate_act");

                entity.Property(e => e.MutRebuildingvaluesurveydateRid).HasColumnName("mut_rebuildingvaluesurveydate_rid");

                entity.Property(e => e.MutRegistryreference)
                    .HasColumnName("mut_registryreference")
                    .HasMaxLength(100);

                entity.Property(e => e.MutRegistryreferenceAct).HasColumnName("mut_registryreference_act");

                entity.Property(e => e.MutRegistryreferenceRid).HasColumnName("mut_registryreference_rid");

                entity.Property(e => e.MutRentalvalue)
                    .HasColumnName("mut_rentalvalue")
                    .HasColumnType("money");

                entity.Property(e => e.MutRentalvalueAct).HasColumnName("mut_rentalvalue_act");

                entity.Property(e => e.MutRentalvalueRid).HasColumnName("mut_rentalvalue_rid");

                entity.Property(e => e.MutRentalvaluesurveydate)
                    .HasColumnName("mut_rentalvaluesurveydate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MutRentalvaluesurveydateAct).HasColumnName("mut_rentalvaluesurveydate_act");

                entity.Property(e => e.MutRentalvaluesurveydateRid).HasColumnName("mut_rentalvaluesurveydate_rid");

                entity.Property(e => e.MutResidualvalue)
                    .HasColumnName("mut_residualvalue")
                    .HasColumnType("money");

                entity.Property(e => e.MutResidualvalueAct).HasColumnName("mut_residualvalue_act");

                entity.Property(e => e.MutResidualvalueRid).HasColumnName("mut_residualvalue_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutSurfaceAreaM2).HasColumnName("mut_surface_area_m2");

                entity.Property(e => e.MutSurfaceAreaM2Act).HasColumnName("mut_surface_area_m2_act");

                entity.Property(e => e.MutSurfaceAreaM2Rid).HasColumnName("mut_surface_area_m2_rid");

                entity.Property(e => e.MutTotalcostofacquisition)
                    .HasColumnName("mut_totalcostofacquisition")
                    .HasColumnType("money");

                entity.Property(e => e.MutTotalcostofacquisitionAct).HasColumnName("mut_totalcostofacquisition_act");

                entity.Property(e => e.MutTotalcostofacquisitionRid).HasColumnName("mut_totalcostofacquisition_rid");

                entity.Property(e => e.MutVolumeM3).HasColumnName("mut_volume_m3");

                entity.Property(e => e.MutVolumeM3Act).HasColumnName("mut_volume_m3_act");

                entity.Property(e => e.MutVolumeM3Rid).HasColumnName("mut_volume_m3_rid");

                entity.Property(e => e.MutYearofacquisition).HasColumnName("mut_yearofacquisition");

                entity.Property(e => e.MutYearofacquisitionAct).HasColumnName("mut_yearofacquisition_act");

                entity.Property(e => e.MutYearofacquisitionRid).HasColumnName("mut_yearofacquisition_rid");

                entity.Property(e => e.MutYearofconstruction).HasColumnName("mut_yearofconstruction");

                entity.Property(e => e.MutYearofconstructionAct).HasColumnName("mut_yearofconstruction_act");

                entity.Property(e => e.MutYearofconstructionRid).HasColumnName("mut_yearofconstruction_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutAnnualdepreciationR)
                    .WithMany(p => p.MutatieVestigingMutAnnualdepreciationR)
                    .HasForeignKey(d => d.MutAnnualdepreciationRid)
                    .HasConstraintName("fk_mutatiereden_mut_annualdepreciation_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutBuildingLevelEpc)
                    .WithMany(p => p.MutatieVestiging)
                    .HasForeignKey(d => d.MutBuildingLevelEpcId)
                    .HasConstraintName("fk_building_level_epc_mut_building_level_epc_id_mutatie_vestiging");

                entity.HasOne(d => d.MutBuildingLevelEpcIdR)
                    .WithMany(p => p.MutatieVestigingMutBuildingLevelEpcIdR)
                    .HasForeignKey(d => d.MutBuildingLevelEpcIdRid)
                    .HasConstraintName("fk_mutatiereden_mut_building_level_epc_id_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutDepreciationperiodR)
                    .WithMany(p => p.MutatieVestigingMutDepreciationperiodR)
                    .HasForeignKey(d => d.MutDepreciationperiodRid)
                    .HasConstraintName("fk_mutatiereden_mut_depreciationperiod_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutDesignation)
                    .WithMany(p => p.MutatieVestiging)
                    .HasForeignKey(d => d.MutDesignationId)
                    .HasConstraintName("fk_branch_designation_mut_designation_id_mutatie_vestiging");

                entity.HasOne(d => d.MutDesignationIdR)
                    .WithMany(p => p.MutatieVestigingMutDesignationIdR)
                    .HasForeignKey(d => d.MutDesignationIdRid)
                    .HasConstraintName("fk_mutatiereden_mut_designation_id_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutEnergyPerformance)
                    .WithMany(p => p.MutatieVestiging)
                    .HasForeignKey(d => d.MutEnergyPerformanceId)
                    .HasConstraintName("fk_energy_performance_mut_energy_performance_id_mutatie_vestiging");

                entity.HasOne(d => d.MutEnergyPerformanceIdR)
                    .WithMany(p => p.MutatieVestigingMutEnergyPerformanceIdR)
                    .HasForeignKey(d => d.MutEnergyPerformanceIdRid)
                    .HasConstraintName("fk_mutatiereden_mut_energy_performance_id_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutEnergyperformancemeasurementdateR)
                    .WithMany(p => p.MutatieVestigingMutEnergyperformancemeasurementdateR)
                    .HasForeignKey(d => d.MutEnergyperformancemeasurementdateRid)
                    .HasConstraintName("fk_mutatiereden_mut_energyperformancemeasurementdate_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutEnvironmentalImpact)
                    .WithMany(p => p.MutatieVestiging)
                    .HasForeignKey(d => d.MutEnvironmentalImpactId)
                    .HasConstraintName("fk_environmental_impact_mut_environmental_impact_id_mutatie_vestiging");

                entity.HasOne(d => d.MutEnvironmentalImpactIdR)
                    .WithMany(p => p.MutatieVestigingMutEnvironmentalImpactIdR)
                    .HasForeignKey(d => d.MutEnvironmentalImpactIdRid)
                    .HasConstraintName("fk_mutatiereden_mut_environmental_impact_id_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutEnvironmentalimpactmeasurementdateR)
                    .WithMany(p => p.MutatieVestigingMutEnvironmentalimpactmeasurementdateR)
                    .HasForeignKey(d => d.MutEnvironmentalimpactmeasurementdateRid)
                    .HasConstraintName("fk_mutatiereden_mut_environmentalimpactmeasurementdate_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutExtraa)
                    .WithMany(p => p.MutatieVestiging)
                    .HasForeignKey(d => d.MutExtraaid)
                    .HasConstraintName("fk_extraa_mut_extraaid_mutatie_vestiging");

                entity.HasOne(d => d.MutExtraaidR)
                    .WithMany(p => p.MutatieVestigingMutExtraaidR)
                    .HasForeignKey(d => d.MutExtraaidRid)
                    .HasConstraintName("fk_mutatiereden_mut_extraaid_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutExtrab)
                    .WithMany(p => p.MutatieVestiging)
                    .HasForeignKey(d => d.MutExtrabid)
                    .HasConstraintName("fk_extrab_mut_extrabid_mutatie_vestiging");

                entity.HasOne(d => d.MutExtrabidR)
                    .WithMany(p => p.MutatieVestigingMutExtrabidR)
                    .HasForeignKey(d => d.MutExtrabidRid)
                    .HasConstraintName("fk_mutatiereden_mut_extrabid_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutForeclosurevalueR)
                    .WithMany(p => p.MutatieVestigingMutForeclosurevalueR)
                    .HasForeignKey(d => d.MutForeclosurevalueRid)
                    .HasConstraintName("fk_mutatiereden_mut_foreclosurevalue_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutForeclosurevaluesurveydateR)
                    .WithMany(p => p.MutatieVestigingMutForeclosurevaluesurveydateR)
                    .HasForeignKey(d => d.MutForeclosurevaluesurveydateRid)
                    .HasConstraintName("fk_mutatiereden_mut_foreclosurevaluesurveydate_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutHistoricalSite)
                    .WithMany(p => p.MutatieVestiging)
                    .HasForeignKey(d => d.MutHistoricalSiteId)
                    .HasConstraintName("fk_historical_site_mut_historical_site_id_mutatie_vestiging");

                entity.HasOne(d => d.MutHistoricalSiteIdR)
                    .WithMany(p => p.MutatieVestigingMutHistoricalSiteIdR)
                    .HasForeignKey(d => d.MutHistoricalSiteIdRid)
                    .HasConstraintName("fk_mutatiereden_mut_historical_site_id_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutLandvalueR)
                    .WithMany(p => p.MutatieVestigingMutLandvalueR)
                    .HasForeignKey(d => d.MutLandvalueRid)
                    .HasConstraintName("fk_mutatiereden_mut_landvalue_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutLandvaluesurveydateR)
                    .WithMany(p => p.MutatieVestigingMutLandvaluesurveydateR)
                    .HasForeignKey(d => d.MutLandvaluesurveydateRid)
                    .HasConstraintName("fk_mutatiereden_mut_landvaluesurveydate_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutMarketvalueR)
                    .WithMany(p => p.MutatieVestigingMutMarketvalueR)
                    .HasForeignKey(d => d.MutMarketvalueRid)
                    .HasConstraintName("fk_mutatiereden_mut_marketvalue_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutMarketvaluesurveydateR)
                    .WithMany(p => p.MutatieVestigingMutMarketvaluesurveydateR)
                    .HasForeignKey(d => d.MutMarketvaluesurveydateRid)
                    .HasConstraintName("fk_mutatiereden_mut_marketvaluesurveydate_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutOwneremailR)
                    .WithMany(p => p.MutatieVestigingMutOwneremailR)
                    .HasForeignKey(d => d.MutOwneremailRid)
                    .HasConstraintName("fk_mutatiereden_mut_owneremail_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutOwnermobilephoneR)
                    .WithMany(p => p.MutatieVestigingMutOwnermobilephoneR)
                    .HasForeignKey(d => d.MutOwnermobilephoneRid)
                    .HasConstraintName("fk_mutatiereden_mut_ownermobilephone_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutOwnernameR)
                    .WithMany(p => p.MutatieVestigingMutOwnernameR)
                    .HasForeignKey(d => d.MutOwnernameRid)
                    .HasConstraintName("fk_mutatiereden_mut_ownername_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutOwnertelephoneR)
                    .WithMany(p => p.MutatieVestigingMutOwnertelephoneR)
                    .HasForeignKey(d => d.MutOwnertelephoneRid)
                    .HasConstraintName("fk_mutatiereden_mut_ownertelephone_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutPriceofacquisitionR)
                    .WithMany(p => p.MutatieVestigingMutPriceofacquisitionR)
                    .HasForeignKey(d => d.MutPriceofacquisitionRid)
                    .HasConstraintName("fk_mutatiereden_mut_priceofacquisition_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutPropertyvaluationR)
                    .WithMany(p => p.MutatieVestigingMutPropertyvaluationR)
                    .HasForeignKey(d => d.MutPropertyvaluationRid)
                    .HasConstraintName("fk_mutatiereden_mut_propertyvaluation_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutRebuildingvalueR)
                    .WithMany(p => p.MutatieVestigingMutRebuildingvalueR)
                    .HasForeignKey(d => d.MutRebuildingvalueRid)
                    .HasConstraintName("fk_mutatiereden_mut_rebuildingvalue_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutRebuildingvaluesurveydateR)
                    .WithMany(p => p.MutatieVestigingMutRebuildingvaluesurveydateR)
                    .HasForeignKey(d => d.MutRebuildingvaluesurveydateRid)
                    .HasConstraintName("fk_mutatiereden_mut_rebuildingvaluesurveydate_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutRegistryreferenceR)
                    .WithMany(p => p.MutatieVestigingMutRegistryreferenceR)
                    .HasForeignKey(d => d.MutRegistryreferenceRid)
                    .HasConstraintName("fk_mutatiereden_mut_registryreference_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutRentalvalueR)
                    .WithMany(p => p.MutatieVestigingMutRentalvalueR)
                    .HasForeignKey(d => d.MutRentalvalueRid)
                    .HasConstraintName("fk_mutatiereden_mut_rentalvalue_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutRentalvaluesurveydateR)
                    .WithMany(p => p.MutatieVestigingMutRentalvaluesurveydateR)
                    .HasForeignKey(d => d.MutRentalvaluesurveydateRid)
                    .HasConstraintName("fk_mutatiereden_mut_rentalvaluesurveydate_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutResidualvalueR)
                    .WithMany(p => p.MutatieVestigingMutResidualvalueR)
                    .HasForeignKey(d => d.MutResidualvalueRid)
                    .HasConstraintName("fk_mutatiereden_mut_residualvalue_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutSurfaceAreaM2R)
                    .WithMany(p => p.MutatieVestigingMutSurfaceAreaM2R)
                    .HasForeignKey(d => d.MutSurfaceAreaM2Rid)
                    .HasConstraintName("fk_mutatiereden_mut_surface_area_m2_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutTotalcostofacquisitionR)
                    .WithMany(p => p.MutatieVestigingMutTotalcostofacquisitionR)
                    .HasForeignKey(d => d.MutTotalcostofacquisitionRid)
                    .HasConstraintName("fk_mutatiereden_mut_totalcostofacquisition_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutVolumeM3R)
                    .WithMany(p => p.MutatieVestigingMutVolumeM3R)
                    .HasForeignKey(d => d.MutVolumeM3Rid)
                    .HasConstraintName("fk_mutatiereden_mut_volume_m3_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutYearofacquisitionR)
                    .WithMany(p => p.MutatieVestigingMutYearofacquisitionR)
                    .HasForeignKey(d => d.MutYearofacquisitionRid)
                    .HasConstraintName("fk_mutatiereden_mut_yearofacquisition_rid_mutatie_vestiging");

                entity.HasOne(d => d.MutYearofconstructionR)
                    .WithMany(p => p.MutatieVestigingMutYearofconstructionR)
                    .HasForeignKey(d => d.MutYearofconstructionRid)
                    .HasConstraintName("fk_mutatiereden_mut_yearofconstruction_rid_mutatie_vestiging");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieVestiging)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_vestiging_parentid_mutatie_vestiging");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieVestiging)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_vestiging");
            });

            modelBuilder.Entity<MutatieVrij1object>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_vrij1object");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_vrij1object_importid");

                entity.HasIndex(e => e.MutConfiguratieid)
                    .HasName("idx_mutatie_vrij1object_mut_configuratieid");

                entity.HasIndex(e => e.MutConfiguratieidRid)
                    .HasName("idx_mutatie_vrij1object_mut_configuratieid_rid");

                entity.HasIndex(e => e.MutLokatieid)
                    .HasName("idx_mutatie_vrij1object_mut_lokatieid");

                entity.HasIndex(e => e.MutLokatieidRid)
                    .HasName("idx_mutatie_vrij1object_mut_lokatieid_rid");

                entity.HasIndex(e => e.MutPersoongroepid)
                    .HasName("idx_mutatie_vrij1object_mut_persoongroepid");

                entity.HasIndex(e => e.MutPersoongroepidRid)
                    .HasName("idx_mutatie_vrij1object_mut_persoongroepid_rid");

                entity.HasIndex(e => e.MutPersoonid)
                    .HasName("idx_mutatie_vrij1object_mut_persoonid");

                entity.HasIndex(e => e.MutPersoonidRid)
                    .HasName("idx_mutatie_vrij1object_mut_persoonid_rid");

                entity.HasIndex(e => e.MutVestigingid)
                    .HasName("idx_mutatie_vrij1object_mut_vestigingid");

                entity.HasIndex(e => e.MutVestigingidRid)
                    .HasName("idx_mutatie_vrij1object_mut_vestigingid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_vrij1object_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_vrij1object_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutConfiguratieid).HasColumnName("mut_configuratieid");

                entity.Property(e => e.MutConfiguratieidAct).HasColumnName("mut_configuratieid_act");

                entity.Property(e => e.MutConfiguratieidRid).HasColumnName("mut_configuratieid_rid");

                entity.Property(e => e.MutLokatieid).HasColumnName("mut_lokatieid");

                entity.Property(e => e.MutLokatieidAct).HasColumnName("mut_lokatieid_act");

                entity.Property(e => e.MutLokatieidRid).HasColumnName("mut_lokatieid_rid");

                entity.Property(e => e.MutPersoongroepid).HasColumnName("mut_persoongroepid");

                entity.Property(e => e.MutPersoongroepidAct).HasColumnName("mut_persoongroepid_act");

                entity.Property(e => e.MutPersoongroepidRid).HasColumnName("mut_persoongroepid_rid");

                entity.Property(e => e.MutPersoonid).HasColumnName("mut_persoonid");

                entity.Property(e => e.MutPersoonidAct).HasColumnName("mut_persoonid_act");

                entity.Property(e => e.MutPersoonidRid).HasColumnName("mut_persoonid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutVestigingid).HasColumnName("mut_vestigingid");

                entity.Property(e => e.MutVestigingidAct).HasColumnName("mut_vestigingid_act");

                entity.Property(e => e.MutVestigingidRid).HasColumnName("mut_vestigingid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutConfiguratie)
                    .WithMany(p => p.MutatieVrij1object)
                    .HasForeignKey(d => d.MutConfiguratieid)
                    .HasConstraintName("fk_configuratie_mut_configuratieid_mutatie_vrij1object");

                entity.HasOne(d => d.MutConfiguratieidR)
                    .WithMany(p => p.MutatieVrij1objectMutConfiguratieidR)
                    .HasForeignKey(d => d.MutConfiguratieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_configuratieid_rid_mutatie_vrij1object");

                entity.HasOne(d => d.MutLokatie)
                    .WithMany(p => p.MutatieVrij1object)
                    .HasForeignKey(d => d.MutLokatieid)
                    .HasConstraintName("fk_locatie_mut_lokatieid_mutatie_vrij1object");

                entity.HasOne(d => d.MutLokatieidR)
                    .WithMany(p => p.MutatieVrij1objectMutLokatieidR)
                    .HasForeignKey(d => d.MutLokatieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_lokatieid_rid_mutatie_vrij1object");

                entity.HasOne(d => d.MutPersoongroep)
                    .WithMany(p => p.MutatieVrij1object)
                    .HasForeignKey(d => d.MutPersoongroepid)
                    .HasConstraintName("fk_persoongroep_mut_persoongroepid_mutatie_vrij1object");

                entity.HasOne(d => d.MutPersoongroepidR)
                    .WithMany(p => p.MutatieVrij1objectMutPersoongroepidR)
                    .HasForeignKey(d => d.MutPersoongroepidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoongroepid_rid_mutatie_vrij1object");

                entity.HasOne(d => d.MutPersoon)
                    .WithMany(p => p.MutatieVrij1object)
                    .HasForeignKey(d => d.MutPersoonid)
                    .HasConstraintName("fk_persoon_mut_persoonid_mutatie_vrij1object");

                entity.HasOne(d => d.MutPersoonidR)
                    .WithMany(p => p.MutatieVrij1objectMutPersoonidR)
                    .HasForeignKey(d => d.MutPersoonidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoonid_rid_mutatie_vrij1object");

                entity.HasOne(d => d.MutVestiging)
                    .WithMany(p => p.MutatieVrij1object)
                    .HasForeignKey(d => d.MutVestigingid)
                    .HasConstraintName("fk_vestiging_mut_vestigingid_mutatie_vrij1object");

                entity.HasOne(d => d.MutVestigingidR)
                    .WithMany(p => p.MutatieVrij1objectMutVestigingidR)
                    .HasForeignKey(d => d.MutVestigingidRid)
                    .HasConstraintName("fk_mutatiereden_mut_vestigingid_rid_mutatie_vrij1object");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieVrij1object)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_vrij1object_parentid_mutatie_vrij1object");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieVrij1object)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_vrij1object");
            });

            modelBuilder.Entity<MutatieVrij2object>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_vrij2object");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_vrij2object_importid");

                entity.HasIndex(e => e.MutConfiguratieid)
                    .HasName("idx_mutatie_vrij2object_mut_configuratieid");

                entity.HasIndex(e => e.MutConfiguratieidRid)
                    .HasName("idx_mutatie_vrij2object_mut_configuratieid_rid");

                entity.HasIndex(e => e.MutLokatieid)
                    .HasName("idx_mutatie_vrij2object_mut_lokatieid");

                entity.HasIndex(e => e.MutLokatieidRid)
                    .HasName("idx_mutatie_vrij2object_mut_lokatieid_rid");

                entity.HasIndex(e => e.MutPersoongroepid)
                    .HasName("idx_mutatie_vrij2object_mut_persoongroepid");

                entity.HasIndex(e => e.MutPersoongroepidRid)
                    .HasName("idx_mutatie_vrij2object_mut_persoongroepid_rid");

                entity.HasIndex(e => e.MutPersoonid)
                    .HasName("idx_mutatie_vrij2object_mut_persoonid");

                entity.HasIndex(e => e.MutPersoonidRid)
                    .HasName("idx_mutatie_vrij2object_mut_persoonid_rid");

                entity.HasIndex(e => e.MutVestigingid)
                    .HasName("idx_mutatie_vrij2object_mut_vestigingid");

                entity.HasIndex(e => e.MutVestigingidRid)
                    .HasName("idx_mutatie_vrij2object_mut_vestigingid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_vrij2object_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_vrij2object_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutConfiguratieid).HasColumnName("mut_configuratieid");

                entity.Property(e => e.MutConfiguratieidAct).HasColumnName("mut_configuratieid_act");

                entity.Property(e => e.MutConfiguratieidRid).HasColumnName("mut_configuratieid_rid");

                entity.Property(e => e.MutLokatieid).HasColumnName("mut_lokatieid");

                entity.Property(e => e.MutLokatieidAct).HasColumnName("mut_lokatieid_act");

                entity.Property(e => e.MutLokatieidRid).HasColumnName("mut_lokatieid_rid");

                entity.Property(e => e.MutPersoongroepid).HasColumnName("mut_persoongroepid");

                entity.Property(e => e.MutPersoongroepidAct).HasColumnName("mut_persoongroepid_act");

                entity.Property(e => e.MutPersoongroepidRid).HasColumnName("mut_persoongroepid_rid");

                entity.Property(e => e.MutPersoonid).HasColumnName("mut_persoonid");

                entity.Property(e => e.MutPersoonidAct).HasColumnName("mut_persoonid_act");

                entity.Property(e => e.MutPersoonidRid).HasColumnName("mut_persoonid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutVestigingid).HasColumnName("mut_vestigingid");

                entity.Property(e => e.MutVestigingidAct).HasColumnName("mut_vestigingid_act");

                entity.Property(e => e.MutVestigingidRid).HasColumnName("mut_vestigingid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutConfiguratie)
                    .WithMany(p => p.MutatieVrij2object)
                    .HasForeignKey(d => d.MutConfiguratieid)
                    .HasConstraintName("fk_configuratie_mut_configuratieid_mutatie_vrij2object");

                entity.HasOne(d => d.MutConfiguratieidR)
                    .WithMany(p => p.MutatieVrij2objectMutConfiguratieidR)
                    .HasForeignKey(d => d.MutConfiguratieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_configuratieid_rid_mutatie_vrij2object");

                entity.HasOne(d => d.MutLokatie)
                    .WithMany(p => p.MutatieVrij2object)
                    .HasForeignKey(d => d.MutLokatieid)
                    .HasConstraintName("fk_locatie_mut_lokatieid_mutatie_vrij2object");

                entity.HasOne(d => d.MutLokatieidR)
                    .WithMany(p => p.MutatieVrij2objectMutLokatieidR)
                    .HasForeignKey(d => d.MutLokatieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_lokatieid_rid_mutatie_vrij2object");

                entity.HasOne(d => d.MutPersoongroep)
                    .WithMany(p => p.MutatieVrij2object)
                    .HasForeignKey(d => d.MutPersoongroepid)
                    .HasConstraintName("fk_persoongroep_mut_persoongroepid_mutatie_vrij2object");

                entity.HasOne(d => d.MutPersoongroepidR)
                    .WithMany(p => p.MutatieVrij2objectMutPersoongroepidR)
                    .HasForeignKey(d => d.MutPersoongroepidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoongroepid_rid_mutatie_vrij2object");

                entity.HasOne(d => d.MutPersoon)
                    .WithMany(p => p.MutatieVrij2object)
                    .HasForeignKey(d => d.MutPersoonid)
                    .HasConstraintName("fk_persoon_mut_persoonid_mutatie_vrij2object");

                entity.HasOne(d => d.MutPersoonidR)
                    .WithMany(p => p.MutatieVrij2objectMutPersoonidR)
                    .HasForeignKey(d => d.MutPersoonidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoonid_rid_mutatie_vrij2object");

                entity.HasOne(d => d.MutVestiging)
                    .WithMany(p => p.MutatieVrij2object)
                    .HasForeignKey(d => d.MutVestigingid)
                    .HasConstraintName("fk_vestiging_mut_vestigingid_mutatie_vrij2object");

                entity.HasOne(d => d.MutVestigingidR)
                    .WithMany(p => p.MutatieVrij2objectMutVestigingidR)
                    .HasForeignKey(d => d.MutVestigingidRid)
                    .HasConstraintName("fk_mutatiereden_mut_vestigingid_rid_mutatie_vrij2object");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieVrij2object)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_vrij2object_parentid_mutatie_vrij2object");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieVrij2object)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_vrij2object");
            });

            modelBuilder.Entity<MutatieVrij3object>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_vrij3object");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_vrij3object_importid");

                entity.HasIndex(e => e.MutConfiguratieid)
                    .HasName("idx_mutatie_vrij3object_mut_configuratieid");

                entity.HasIndex(e => e.MutConfiguratieidRid)
                    .HasName("idx_mutatie_vrij3object_mut_configuratieid_rid");

                entity.HasIndex(e => e.MutLokatieid)
                    .HasName("idx_mutatie_vrij3object_mut_lokatieid");

                entity.HasIndex(e => e.MutLokatieidRid)
                    .HasName("idx_mutatie_vrij3object_mut_lokatieid_rid");

                entity.HasIndex(e => e.MutPersoongroepid)
                    .HasName("idx_mutatie_vrij3object_mut_persoongroepid");

                entity.HasIndex(e => e.MutPersoongroepidRid)
                    .HasName("idx_mutatie_vrij3object_mut_persoongroepid_rid");

                entity.HasIndex(e => e.MutPersoonid)
                    .HasName("idx_mutatie_vrij3object_mut_persoonid");

                entity.HasIndex(e => e.MutPersoonidRid)
                    .HasName("idx_mutatie_vrij3object_mut_persoonid_rid");

                entity.HasIndex(e => e.MutVestigingid)
                    .HasName("idx_mutatie_vrij3object_mut_vestigingid");

                entity.HasIndex(e => e.MutVestigingidRid)
                    .HasName("idx_mutatie_vrij3object_mut_vestigingid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_vrij3object_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_vrij3object_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutConfiguratieid).HasColumnName("mut_configuratieid");

                entity.Property(e => e.MutConfiguratieidAct).HasColumnName("mut_configuratieid_act");

                entity.Property(e => e.MutConfiguratieidRid).HasColumnName("mut_configuratieid_rid");

                entity.Property(e => e.MutLokatieid).HasColumnName("mut_lokatieid");

                entity.Property(e => e.MutLokatieidAct).HasColumnName("mut_lokatieid_act");

                entity.Property(e => e.MutLokatieidRid).HasColumnName("mut_lokatieid_rid");

                entity.Property(e => e.MutPersoongroepid).HasColumnName("mut_persoongroepid");

                entity.Property(e => e.MutPersoongroepidAct).HasColumnName("mut_persoongroepid_act");

                entity.Property(e => e.MutPersoongroepidRid).HasColumnName("mut_persoongroepid_rid");

                entity.Property(e => e.MutPersoonid).HasColumnName("mut_persoonid");

                entity.Property(e => e.MutPersoonidAct).HasColumnName("mut_persoonid_act");

                entity.Property(e => e.MutPersoonidRid).HasColumnName("mut_persoonid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutVestigingid).HasColumnName("mut_vestigingid");

                entity.Property(e => e.MutVestigingidAct).HasColumnName("mut_vestigingid_act");

                entity.Property(e => e.MutVestigingidRid).HasColumnName("mut_vestigingid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutConfiguratie)
                    .WithMany(p => p.MutatieVrij3object)
                    .HasForeignKey(d => d.MutConfiguratieid)
                    .HasConstraintName("fk_configuratie_mut_configuratieid_mutatie_vrij3object");

                entity.HasOne(d => d.MutConfiguratieidR)
                    .WithMany(p => p.MutatieVrij3objectMutConfiguratieidR)
                    .HasForeignKey(d => d.MutConfiguratieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_configuratieid_rid_mutatie_vrij3object");

                entity.HasOne(d => d.MutLokatie)
                    .WithMany(p => p.MutatieVrij3object)
                    .HasForeignKey(d => d.MutLokatieid)
                    .HasConstraintName("fk_locatie_mut_lokatieid_mutatie_vrij3object");

                entity.HasOne(d => d.MutLokatieidR)
                    .WithMany(p => p.MutatieVrij3objectMutLokatieidR)
                    .HasForeignKey(d => d.MutLokatieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_lokatieid_rid_mutatie_vrij3object");

                entity.HasOne(d => d.MutPersoongroep)
                    .WithMany(p => p.MutatieVrij3object)
                    .HasForeignKey(d => d.MutPersoongroepid)
                    .HasConstraintName("fk_persoongroep_mut_persoongroepid_mutatie_vrij3object");

                entity.HasOne(d => d.MutPersoongroepidR)
                    .WithMany(p => p.MutatieVrij3objectMutPersoongroepidR)
                    .HasForeignKey(d => d.MutPersoongroepidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoongroepid_rid_mutatie_vrij3object");

                entity.HasOne(d => d.MutPersoon)
                    .WithMany(p => p.MutatieVrij3object)
                    .HasForeignKey(d => d.MutPersoonid)
                    .HasConstraintName("fk_persoon_mut_persoonid_mutatie_vrij3object");

                entity.HasOne(d => d.MutPersoonidR)
                    .WithMany(p => p.MutatieVrij3objectMutPersoonidR)
                    .HasForeignKey(d => d.MutPersoonidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoonid_rid_mutatie_vrij3object");

                entity.HasOne(d => d.MutVestiging)
                    .WithMany(p => p.MutatieVrij3object)
                    .HasForeignKey(d => d.MutVestigingid)
                    .HasConstraintName("fk_vestiging_mut_vestigingid_mutatie_vrij3object");

                entity.HasOne(d => d.MutVestigingidR)
                    .WithMany(p => p.MutatieVrij3objectMutVestigingidR)
                    .HasForeignKey(d => d.MutVestigingidRid)
                    .HasConstraintName("fk_mutatiereden_mut_vestigingid_rid_mutatie_vrij3object");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieVrij3object)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_vrij3object_parentid_mutatie_vrij3object");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieVrij3object)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_vrij3object");
            });

            modelBuilder.Entity<MutatieVrij4object>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_vrij4object");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_vrij4object_importid");

                entity.HasIndex(e => e.MutConfiguratieid)
                    .HasName("idx_mutatie_vrij4object_mut_configuratieid");

                entity.HasIndex(e => e.MutConfiguratieidRid)
                    .HasName("idx_mutatie_vrij4object_mut_configuratieid_rid");

                entity.HasIndex(e => e.MutLokatieid)
                    .HasName("idx_mutatie_vrij4object_mut_lokatieid");

                entity.HasIndex(e => e.MutLokatieidRid)
                    .HasName("idx_mutatie_vrij4object_mut_lokatieid_rid");

                entity.HasIndex(e => e.MutPersoongroepid)
                    .HasName("idx_mutatie_vrij4object_mut_persoongroepid");

                entity.HasIndex(e => e.MutPersoongroepidRid)
                    .HasName("idx_mutatie_vrij4object_mut_persoongroepid_rid");

                entity.HasIndex(e => e.MutPersoonid)
                    .HasName("idx_mutatie_vrij4object_mut_persoonid");

                entity.HasIndex(e => e.MutPersoonidRid)
                    .HasName("idx_mutatie_vrij4object_mut_persoonid_rid");

                entity.HasIndex(e => e.MutVestigingid)
                    .HasName("idx_mutatie_vrij4object_mut_vestigingid");

                entity.HasIndex(e => e.MutVestigingidRid)
                    .HasName("idx_mutatie_vrij4object_mut_vestigingid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_vrij4object_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_vrij4object_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutConfiguratieid).HasColumnName("mut_configuratieid");

                entity.Property(e => e.MutConfiguratieidAct).HasColumnName("mut_configuratieid_act");

                entity.Property(e => e.MutConfiguratieidRid).HasColumnName("mut_configuratieid_rid");

                entity.Property(e => e.MutLokatieid).HasColumnName("mut_lokatieid");

                entity.Property(e => e.MutLokatieidAct).HasColumnName("mut_lokatieid_act");

                entity.Property(e => e.MutLokatieidRid).HasColumnName("mut_lokatieid_rid");

                entity.Property(e => e.MutPersoongroepid).HasColumnName("mut_persoongroepid");

                entity.Property(e => e.MutPersoongroepidAct).HasColumnName("mut_persoongroepid_act");

                entity.Property(e => e.MutPersoongroepidRid).HasColumnName("mut_persoongroepid_rid");

                entity.Property(e => e.MutPersoonid).HasColumnName("mut_persoonid");

                entity.Property(e => e.MutPersoonidAct).HasColumnName("mut_persoonid_act");

                entity.Property(e => e.MutPersoonidRid).HasColumnName("mut_persoonid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutVestigingid).HasColumnName("mut_vestigingid");

                entity.Property(e => e.MutVestigingidAct).HasColumnName("mut_vestigingid_act");

                entity.Property(e => e.MutVestigingidRid).HasColumnName("mut_vestigingid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutConfiguratie)
                    .WithMany(p => p.MutatieVrij4object)
                    .HasForeignKey(d => d.MutConfiguratieid)
                    .HasConstraintName("fk_configuratie_mut_configuratieid_mutatie_vrij4object");

                entity.HasOne(d => d.MutConfiguratieidR)
                    .WithMany(p => p.MutatieVrij4objectMutConfiguratieidR)
                    .HasForeignKey(d => d.MutConfiguratieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_configuratieid_rid_mutatie_vrij4object");

                entity.HasOne(d => d.MutLokatie)
                    .WithMany(p => p.MutatieVrij4object)
                    .HasForeignKey(d => d.MutLokatieid)
                    .HasConstraintName("fk_locatie_mut_lokatieid_mutatie_vrij4object");

                entity.HasOne(d => d.MutLokatieidR)
                    .WithMany(p => p.MutatieVrij4objectMutLokatieidR)
                    .HasForeignKey(d => d.MutLokatieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_lokatieid_rid_mutatie_vrij4object");

                entity.HasOne(d => d.MutPersoongroep)
                    .WithMany(p => p.MutatieVrij4object)
                    .HasForeignKey(d => d.MutPersoongroepid)
                    .HasConstraintName("fk_persoongroep_mut_persoongroepid_mutatie_vrij4object");

                entity.HasOne(d => d.MutPersoongroepidR)
                    .WithMany(p => p.MutatieVrij4objectMutPersoongroepidR)
                    .HasForeignKey(d => d.MutPersoongroepidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoongroepid_rid_mutatie_vrij4object");

                entity.HasOne(d => d.MutPersoon)
                    .WithMany(p => p.MutatieVrij4object)
                    .HasForeignKey(d => d.MutPersoonid)
                    .HasConstraintName("fk_persoon_mut_persoonid_mutatie_vrij4object");

                entity.HasOne(d => d.MutPersoonidR)
                    .WithMany(p => p.MutatieVrij4objectMutPersoonidR)
                    .HasForeignKey(d => d.MutPersoonidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoonid_rid_mutatie_vrij4object");

                entity.HasOne(d => d.MutVestiging)
                    .WithMany(p => p.MutatieVrij4object)
                    .HasForeignKey(d => d.MutVestigingid)
                    .HasConstraintName("fk_vestiging_mut_vestigingid_mutatie_vrij4object");

                entity.HasOne(d => d.MutVestigingidR)
                    .WithMany(p => p.MutatieVrij4objectMutVestigingidR)
                    .HasForeignKey(d => d.MutVestigingidRid)
                    .HasConstraintName("fk_mutatiereden_mut_vestigingid_rid_mutatie_vrij4object");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieVrij4object)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_vrij4object_parentid_mutatie_vrij4object");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieVrij4object)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_vrij4object");
            });

            modelBuilder.Entity<MutatieVrij5object>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("mutatie_vrij5object");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_mutatie_vrij5object_importid");

                entity.HasIndex(e => e.MutConfiguratieid)
                    .HasName("idx_mutatie_vrij5object_mut_configuratieid");

                entity.HasIndex(e => e.MutConfiguratieidRid)
                    .HasName("idx_mutatie_vrij5object_mut_configuratieid_rid");

                entity.HasIndex(e => e.MutLokatieid)
                    .HasName("idx_mutatie_vrij5object_mut_lokatieid");

                entity.HasIndex(e => e.MutLokatieidRid)
                    .HasName("idx_mutatie_vrij5object_mut_lokatieid_rid");

                entity.HasIndex(e => e.MutPersoongroepid)
                    .HasName("idx_mutatie_vrij5object_mut_persoongroepid");

                entity.HasIndex(e => e.MutPersoongroepidRid)
                    .HasName("idx_mutatie_vrij5object_mut_persoongroepid_rid");

                entity.HasIndex(e => e.MutPersoonid)
                    .HasName("idx_mutatie_vrij5object_mut_persoonid");

                entity.HasIndex(e => e.MutPersoonidRid)
                    .HasName("idx_mutatie_vrij5object_mut_persoonid_rid");

                entity.HasIndex(e => e.MutVestigingid)
                    .HasName("idx_mutatie_vrij5object_mut_vestigingid");

                entity.HasIndex(e => e.MutVestigingidRid)
                    .HasName("idx_mutatie_vrij5object_mut_vestigingid_rid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_mutatie_vrij5object_parentid");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_mutatie_vrij5object_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.MutConfiguratieid).HasColumnName("mut_configuratieid");

                entity.Property(e => e.MutConfiguratieidAct).HasColumnName("mut_configuratieid_act");

                entity.Property(e => e.MutConfiguratieidRid).HasColumnName("mut_configuratieid_rid");

                entity.Property(e => e.MutLokatieid).HasColumnName("mut_lokatieid");

                entity.Property(e => e.MutLokatieidAct).HasColumnName("mut_lokatieid_act");

                entity.Property(e => e.MutLokatieidRid).HasColumnName("mut_lokatieid_rid");

                entity.Property(e => e.MutPersoongroepid).HasColumnName("mut_persoongroepid");

                entity.Property(e => e.MutPersoongroepidAct).HasColumnName("mut_persoongroepid_act");

                entity.Property(e => e.MutPersoongroepidRid).HasColumnName("mut_persoongroepid_rid");

                entity.Property(e => e.MutPersoonid).HasColumnName("mut_persoonid");

                entity.Property(e => e.MutPersoonidAct).HasColumnName("mut_persoonid_act");

                entity.Property(e => e.MutPersoonidRid).HasColumnName("mut_persoonid_rid");

                entity.Property(e => e.MutStatus).HasColumnName("mut_status");

                entity.Property(e => e.MutVestigingid).HasColumnName("mut_vestigingid");

                entity.Property(e => e.MutVestigingidAct).HasColumnName("mut_vestigingid_act");

                entity.Property(e => e.MutVestigingidRid).HasColumnName("mut_vestigingid_rid");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.MutConfiguratie)
                    .WithMany(p => p.MutatieVrij5object)
                    .HasForeignKey(d => d.MutConfiguratieid)
                    .HasConstraintName("fk_configuratie_mut_configuratieid_mutatie_vrij5object");

                entity.HasOne(d => d.MutConfiguratieidR)
                    .WithMany(p => p.MutatieVrij5objectMutConfiguratieidR)
                    .HasForeignKey(d => d.MutConfiguratieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_configuratieid_rid_mutatie_vrij5object");

                entity.HasOne(d => d.MutLokatie)
                    .WithMany(p => p.MutatieVrij5object)
                    .HasForeignKey(d => d.MutLokatieid)
                    .HasConstraintName("fk_locatie_mut_lokatieid_mutatie_vrij5object");

                entity.HasOne(d => d.MutLokatieidR)
                    .WithMany(p => p.MutatieVrij5objectMutLokatieidR)
                    .HasForeignKey(d => d.MutLokatieidRid)
                    .HasConstraintName("fk_mutatiereden_mut_lokatieid_rid_mutatie_vrij5object");

                entity.HasOne(d => d.MutPersoongroep)
                    .WithMany(p => p.MutatieVrij5object)
                    .HasForeignKey(d => d.MutPersoongroepid)
                    .HasConstraintName("fk_persoongroep_mut_persoongroepid_mutatie_vrij5object");

                entity.HasOne(d => d.MutPersoongroepidR)
                    .WithMany(p => p.MutatieVrij5objectMutPersoongroepidR)
                    .HasForeignKey(d => d.MutPersoongroepidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoongroepid_rid_mutatie_vrij5object");

                entity.HasOne(d => d.MutPersoon)
                    .WithMany(p => p.MutatieVrij5object)
                    .HasForeignKey(d => d.MutPersoonid)
                    .HasConstraintName("fk_persoon_mut_persoonid_mutatie_vrij5object");

                entity.HasOne(d => d.MutPersoonidR)
                    .WithMany(p => p.MutatieVrij5objectMutPersoonidR)
                    .HasForeignKey(d => d.MutPersoonidRid)
                    .HasConstraintName("fk_mutatiereden_mut_persoonid_rid_mutatie_vrij5object");

                entity.HasOne(d => d.MutVestiging)
                    .WithMany(p => p.MutatieVrij5object)
                    .HasForeignKey(d => d.MutVestigingid)
                    .HasConstraintName("fk_vestiging_mut_vestigingid_mutatie_vrij5object");

                entity.HasOne(d => d.MutVestigingidR)
                    .WithMany(p => p.MutatieVrij5objectMutVestigingidR)
                    .HasForeignKey(d => d.MutVestigingidRid)
                    .HasConstraintName("fk_mutatiereden_mut_vestigingid_rid_mutatie_vrij5object");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.MutatieVrij5object)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_vrij5object_parentid_mutatie_vrij5object");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.MutatieVrij5object)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_mutatie_vrij5object");
            });

            modelBuilder.Entity<Nationality>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("nationality");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_nationality_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_nationality_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_nationality_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Netwerkcomponent>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("netwerkcomponent");

                entity.HasIndex(e => e.Aanschafdatum)
                    .HasName("idx_netwerkcomponent_aanschafdatum");

                entity.HasIndex(e => e.Aanspreekpuntid)
                    .HasName("idx_netwerkcomponent_aanspreekpuntid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_netwerkcomponent_archiefredenid");

                entity.HasIndex(e => e.Artikelbestellinkid)
                    .HasName("idx_netwerkcomponent_artikelbestellinkid");

                entity.HasIndex(e => e.Artikelstatusid)
                    .HasName("idx_netwerkcomponent_artikelstatusid");

                entity.HasIndex(e => e.Attentieid)
                    .HasName("idx_netwerkcomponent_attentieid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_netwerkcomponent_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_netwerkcomponent_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_netwerkcomponent_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_netwerkcomponent_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_netwerkcomponent_attvrijeopzoek5");

                entity.HasIndex(e => e.Bestelaanvraagid)
                    .HasName("idx_netwerkcomponent_bestelaanvraagid");

                entity.HasIndex(e => e.Bestellingid)
                    .HasName("idx_netwerkcomponent_bestellingid");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_netwerkcomponent_budgethouderid");

                entity.HasIndex(e => e.Configuratieid)
                    .HasName("idx_netwerkcomponent_configuratieid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_netwerkcomponent_dataanmk");

                entity.HasIndex(e => e.Datumeersteonderhoud)
                    .HasName("idx_netwerkcomponent_datumeersteonderhoud");

                entity.HasIndex(e => e.Datumgeplandonderhoud)
                    .HasName("idx_netwerkcomponent_datumgeplandonderhoud");

                entity.HasIndex(e => e.Datumlaatsteonderhoud)
                    .HasName("idx_netwerkcomponent_datumlaatsteonderhoud");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_netwerkcomponent_datwijzig");

                entity.HasIndex(e => e.Garantiedatum)
                    .HasName("idx_netwerkcomponent_garantiedatum");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_netwerkcomponent_importid");

                entity.HasIndex(e => e.Installatiedoorid)
                    .HasName("idx_netwerkcomponent_installatiedoorid");

                entity.HasIndex(e => e.Leaseaanvangsdatum)
                    .HasName("idx_netwerkcomponent_leaseaanvangsdatum");

                entity.HasIndex(e => e.Leaseeinddatum)
                    .HasName("idx_netwerkcomponent_leaseeinddatum");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_netwerkcomponent_leverancierid");

                entity.HasIndex(e => e.Lokatieid)
                    .HasName("idx_netwerkcomponent_lokatieid");

                entity.HasIndex(e => e.Merkid)
                    .HasName("idx_netwerkcomponent_merkid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_netwerkcomponent_naam");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_netwerkcomponent_objectid");

                entity.HasIndex(e => e.Objecttypeid)
                    .HasName("idx_netwerkcomponent_objecttypeid");

                entity.HasIndex(e => e.OnderhoudDoorid)
                    .HasName("idx_netwerkcomponent_onderhoud_doorid");

                entity.HasIndex(e => e.Onderhoudslacontractid)
                    .HasName("idx_netwerkcomponent_onderhoudslacontractid");

                entity.HasIndex(e => e.Onderhoudsoortid)
                    .HasName("idx_netwerkcomponent_onderhoudsoortid");

                entity.HasIndex(e => e.Onderhoudsplanid)
                    .HasName("idx_netwerkcomponent_onderhoudsplanid");

                entity.HasIndex(e => e.Onderhoudtot)
                    .HasName("idx_netwerkcomponent_onderhoudtot");

                entity.HasIndex(e => e.Onderhoudvanaf)
                    .HasName("idx_netwerkcomponent_onderhoudvanaf");

                entity.HasIndex(e => e.Persoongroepid)
                    .HasName("idx_netwerkcomponent_persoongroepid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_netwerkcomponent_persoonid");

                entity.HasIndex(e => e.RefAanspreekpunt)
                    .HasName("idx_netwerkcomponent_ref_aanspreekpunt");

                entity.HasIndex(e => e.RefConfiguratie)
                    .HasName("idx_netwerkcomponent_ref_configuratie");

                entity.HasIndex(e => e.RefFinbudgethouder)
                    .HasName("idx_netwerkcomponent_ref_finbudgethouder");

                entity.HasIndex(e => e.RefKleur)
                    .HasName("idx_netwerkcomponent_ref_kleur");

                entity.HasIndex(e => e.RefLeverancier)
                    .HasName("idx_netwerkcomponent_ref_leverancier");

                entity.HasIndex(e => e.RefLokatie)
                    .HasName("idx_netwerkcomponent_ref_lokatie");

                entity.HasIndex(e => e.RefMerk)
                    .HasName("idx_netwerkcomponent_ref_merk");

                entity.HasIndex(e => e.RefOrdernumber)
                    .HasName("idx_netwerkcomponent_ref_ordernumber");

                entity.HasIndex(e => e.RefPersoon)
                    .HasName("idx_netwerkcomponent_ref_persoon");

                entity.HasIndex(e => e.RefPersoongroep)
                    .HasName("idx_netwerkcomponent_ref_persoongroep");

                entity.HasIndex(e => e.RefPlaats1)
                    .HasName("idx_netwerkcomponent_ref_plaats1");

                entity.HasIndex(e => e.RefSoort)
                    .HasName("idx_netwerkcomponent_ref_soort");

                entity.HasIndex(e => e.RefVestiging)
                    .HasName("idx_netwerkcomponent_ref_vestiging");

                entity.HasIndex(e => e.Reserveerbaaractiveerbaar)
                    .HasName("idx_netwerkcomponent_reserveerbaaractiveerbaar");

                entity.HasIndex(e => e.Reserveerbaarsecure)
                    .HasName("idx_netwerkcomponent_reserveerbaarsecure");

                entity.HasIndex(e => e.Reserveerbaarsshd)
                    .HasName("idx_netwerkcomponent_reserveerbaarsshd");

                entity.HasIndex(e => e.Reservzichtbaarsshd)
                    .HasName("idx_netwerkcomponent_reservzichtbaarsshd");

                entity.HasIndex(e => e.Servicewindowid)
                    .HasName("idx_netwerkcomponent_servicewindowid");

                entity.HasIndex(e => e.Sjabloonobjectid)
                    .HasName("idx_netwerkcomponent_sjabloonobjectid");

                entity.HasIndex(e => e.Soortid)
                    .HasName("idx_netwerkcomponent_soortid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_netwerkcomponent_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_netwerkcomponent_statusid");

                entity.HasIndex(e => e.Stdresvbehandelaarid)
                    .HasName("idx_netwerkcomponent_stdresvbehandelaarid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_netwerkcomponent_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_netwerkcomponent_uidwijzig");

                entity.HasIndex(e => e.Verzekerdatum)
                    .HasName("idx_netwerkcomponent_verzekerdatum");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_netwerkcomponent_vestigingid");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_netwerkcomponent_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_netwerkcomponent_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_netwerkcomponent_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_netwerkcomponent_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_netwerkcomponent_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_netwerkcomponent_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_netwerkcomponent_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aankoopbedrag)
                    .HasColumnName("aankoopbedrag")
                    .HasColumnType("money");

                entity.Property(e => e.Aanschafdatum)
                    .HasColumnName("aanschafdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Aanspreekpuntid).HasColumnName("aanspreekpuntid");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afschrijftermijn).HasColumnName("afschrijftermijn");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Artikelbestellinkid).HasColumnName("artikelbestellinkid");

                entity.Property(e => e.Artikelstatusid).HasColumnName("artikelstatusid");

                entity.Property(e => e.Artikelwordtobject).HasColumnName("artikelwordtobject");

                entity.Property(e => e.Attentieid).HasColumnName("attentieid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelaanvraagid).HasColumnName("bestelaanvraagid");

                entity.Property(e => e.Bestelbaarinssh).HasColumnName("bestelbaarinssh");

                entity.Property(e => e.Bestellingid).HasColumnName("bestellingid");

                entity.Property(e => e.Blocktime).HasColumnName("blocktime");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Configuratieid).HasColumnName("configuratieid");

                entity.Property(e => e.CostsHightariff)
                    .HasColumnName("costs_hightariff")
                    .HasColumnType("money");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumeersteonderhoud)
                    .HasColumnName("datumeersteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumgeplandonderhoud)
                    .HasColumnName("datumgeplandonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumlaatsteonderhoud)
                    .HasColumnName("datumlaatsteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diversenonderhoud)
                    .HasColumnName("diversenonderhoud")
                    .HasColumnType("ntext");

                entity.Property(e => e.Garantiedatum)
                    .HasColumnName("garantiedatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.Heeftonderhoudsplan).HasColumnName("heeftonderhoudsplan");

                entity.Property(e => e.Heeftvoorraad).HasColumnName("heeftvoorraad");

                entity.Property(e => e.Hostnaam)
                    .IsRequired()
                    .HasColumnName("hostnaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Huidigevoorraad).HasColumnName("huidigevoorraad");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Installatiedoorid).HasColumnName("installatiedoorid");

                entity.Property(e => e.Ipadres)
                    .IsRequired()
                    .HasColumnName("ipadres")
                    .HasMaxLength(40);

                entity.Property(e => e.Korteomschrijving)
                    .IsRequired()
                    .HasColumnName("korteomschrijving")
                    .HasMaxLength(40);

                entity.Property(e => e.Leaseaanvangsdatum)
                    .HasColumnName("leaseaanvangsdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leasecontractnummer)
                    .IsRequired()
                    .HasColumnName("leasecontractnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Leaseeinddatum)
                    .HasColumnName("leaseeinddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leaseinfo).HasColumnName("leaseinfo");

                entity.Property(e => e.Leaseperiode).HasColumnName("leaseperiode");

                entity.Property(e => e.Leaseprijs)
                    .HasColumnName("leaseprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Lokatieid).HasColumnName("lokatieid");

                entity.Property(e => e.Macadres)
                    .HasColumnName("macadres")
                    .HasMaxLength(30);

                entity.Property(e => e.Merkid).HasColumnName("merkid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(60);

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Objecttype)
                    .IsRequired()
                    .HasColumnName("objecttype")
                    .HasMaxLength(100);

                entity.Property(e => e.Objecttypeid).HasColumnName("objecttypeid");

                entity.Property(e => e.OnderhoudDoorid).HasColumnName("onderhoud_doorid");

                entity.Property(e => e.Onderhoudcontract).HasColumnName("onderhoudcontract");

                entity.Property(e => e.Onderhoudnummer)
                    .IsRequired()
                    .HasColumnName("onderhoudnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Onderhoudprijs)
                    .HasColumnName("onderhoudprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Onderhoudresponsietijd).HasColumnName("onderhoudresponsietijd");

                entity.Property(e => e.Onderhoudslacontractid).HasColumnName("onderhoudslacontractid");

                entity.Property(e => e.Onderhoudslagebruikt).HasColumnName("onderhoudslagebruikt");

                entity.Property(e => e.Onderhoudsoortid).HasColumnName("onderhoudsoortid");

                entity.Property(e => e.Onderhoudsplanid).HasColumnName("onderhoudsplanid");

                entity.Property(e => e.Onderhoudtot)
                    .HasColumnName("onderhoudtot")
                    .HasColumnType("datetime");

                entity.Property(e => e.Onderhoudvanaf)
                    .HasColumnName("onderhoudvanaf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Opmerking)
                    .IsRequired()
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.Ordernummer)
                    .IsRequired()
                    .HasColumnName("ordernummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Persoongroepid).HasColumnName("persoongroepid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Plaats).HasColumnName("plaats");

                entity.Property(e => e.Plaatskeuze).HasColumnName("plaatskeuze");

                entity.Property(e => e.RefAanspreekpunt)
                    .IsRequired()
                    .HasColumnName("ref_aanspreekpunt")
                    .HasMaxLength(109);

                entity.Property(e => e.RefConfiguratie)
                    .IsRequired()
                    .HasColumnName("ref_configuratie")
                    .HasMaxLength(30);

                entity.Property(e => e.RefFinbudgethouder)
                    .IsRequired()
                    .HasColumnName("ref_finbudgethouder")
                    .HasMaxLength(100);

                entity.Property(e => e.RefKleur).HasColumnName("ref_kleur");

                entity.Property(e => e.RefLeverancier)
                    .IsRequired()
                    .HasColumnName("ref_leverancier")
                    .HasMaxLength(60);

                entity.Property(e => e.RefLokatie)
                    .IsRequired()
                    .HasColumnName("ref_lokatie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefMerk)
                    .IsRequired()
                    .HasColumnName("ref_merk")
                    .HasMaxLength(100);

                entity.Property(e => e.RefOrdernumber)
                    .HasColumnName("ref_ordernumber")
                    .HasMaxLength(30);

                entity.Property(e => e.RefPersoon)
                    .IsRequired()
                    .HasColumnName("ref_persoon")
                    .HasMaxLength(109);

                entity.Property(e => e.RefPersoongroep)
                    .IsRequired()
                    .HasColumnName("ref_persoongroep")
                    .HasMaxLength(50);

                entity.Property(e => e.RefPlaats1)
                    .IsRequired()
                    .HasColumnName("ref_plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.RefSoort)
                    .IsRequired()
                    .HasColumnName("ref_soort")
                    .HasMaxLength(100);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.ReservableOfficehoursSsd).HasColumnName("reservable_officehours_ssd");

                entity.Property(e => e.Reservablewithlocation).HasColumnName("reservablewithlocation");

                entity.Property(e => e.Reserveerbaaractiveerbaar).HasColumnName("reserveerbaaractiveerbaar");

                entity.Property(e => e.Reserveerbaarkantooruren).HasColumnName("reserveerbaarkantooruren");

                entity.Property(e => e.Reserveerbaarsecure).HasColumnName("reserveerbaarsecure");

                entity.Property(e => e.Reserveerbaarsshd).HasColumnName("reserveerbaarsshd");

                entity.Property(e => e.Reservzichtbaarsshd).HasColumnName("reservzichtbaarsshd");

                entity.Property(e => e.Restwaarde)
                    .HasColumnName("restwaarde")
                    .HasColumnType("money");

                entity.Property(e => e.RmSpecification)
                    .IsRequired()
                    .HasColumnName("rm_specification")
                    .HasMaxLength(100);

                entity.Property(e => e.Serienummer)
                    .IsRequired()
                    .HasColumnName("serienummer")
                    .HasMaxLength(100);

                entity.Property(e => e.ServicewindowOption).HasColumnName("servicewindow_option");

                entity.Property(e => e.Servicewindowid).HasColumnName("servicewindowid");

                entity.Property(e => e.Sjabloonobjectid).HasColumnName("sjabloonobjectid");

                entity.Property(e => e.Soortid).HasColumnName("soortid");

                entity.Property(e => e.Specificatie)
                    .IsRequired()
                    .HasColumnName("specificatie")
                    .HasMaxLength(60);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Stdresvbehandelaarid).HasColumnName("stdresvbehandelaarid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veiligvoorraad).HasColumnName("veiligvoorraad");

                entity.Property(e => e.Verhuurborg)
                    .HasColumnName("verhuurborg")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijs)
                    .HasColumnName("verhuurprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijssysteem).HasColumnName("verhuurprijssysteem");

                entity.Property(e => e.Verhuurtekst)
                    .HasColumnName("verhuurtekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.Verkoopprijs)
                    .HasColumnName("verkoopprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verzekerdatum)
                    .HasColumnName("verzekerdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Vnc).HasColumnName("vnc");

                entity.Property(e => e.Vnchostnaam)
                    .HasColumnName("vnchostnaam")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Wburl)
                    .IsRequired()
                    .HasColumnName("wburl")
                    .HasMaxLength(1024);

                entity.Property(e => e.Webbrowser).HasColumnName("webbrowser");

                entity.HasOne(d => d.Aanspreekpunt)
                    .WithMany(p => p.NetwerkcomponentAanspreekpunt)
                    .HasForeignKey(d => d.Aanspreekpuntid)
                    .HasConstraintName("fk_actiedoor_aanspreekpuntid_netwerkcomponent");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_netwerkcomponent");

                entity.HasOne(d => d.Artikelbestellink)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Artikelbestellinkid)
                    .HasConstraintName("fk_artikel_bestel_link_artikelbestellinkid_netwerkcomponent");

                entity.HasOne(d => d.Artikelstatus)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Artikelstatusid)
                    .HasConstraintName("fk_artikelstatus_artikelstatusid_netwerkcomponent");

                entity.HasOne(d => d.Attentie)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Attentieid)
                    .HasConstraintName("fk_attentie_attentieid_netwerkcomponent");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.NetwerkcomponentAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_netwerkcomponent");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.NetwerkcomponentAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_netwerkcomponent");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.NetwerkcomponentAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_netwerkcomponent");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.NetwerkcomponentAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_netwerkcomponent");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.NetwerkcomponentAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_netwerkcomponent");

                entity.HasOne(d => d.Bestelaanvraag)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Bestelaanvraagid)
                    .HasConstraintName("fk_bestelaanvraag_bestelaanvraagid_netwerkcomponent");

                entity.HasOne(d => d.Bestelling)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Bestellingid)
                    .HasConstraintName("fk_bestellingen_bestellingid_netwerkcomponent");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_netwerkcomponent");

                entity.HasOne(d => d.Configuratie)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Configuratieid)
                    .HasConstraintName("fk_configuratie_configuratieid_netwerkcomponent");

                entity.HasOne(d => d.Installatiedoor)
                    .WithMany(p => p.NetwerkcomponentInstallatiedoor)
                    .HasForeignKey(d => d.Installatiedoorid)
                    .HasConstraintName("fk_actiedoor_installatiedoorid_netwerkcomponent");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.NetwerkcomponentLeverancier)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_netwerkcomponent");

                entity.HasOne(d => d.Lokatie)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Lokatieid)
                    .HasConstraintName("fk_locatie_lokatieid_netwerkcomponent");

                entity.HasOne(d => d.Merk)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Merkid)
                    .HasConstraintName("fk_objectmerk_merkid_netwerkcomponent");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_netwerkcomponent");

                entity.HasOne(d => d.ObjecttypeNavigation)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Objecttypeid)
                    .HasConstraintName("fk_objecttype_objecttypeid_netwerkcomponent");

                entity.HasOne(d => d.OnderhoudDoor)
                    .WithMany(p => p.NetwerkcomponentOnderhoudDoor)
                    .HasForeignKey(d => d.OnderhoudDoorid)
                    .HasConstraintName("fk_leverancier_onderhoud_doorid_netwerkcomponent");

                entity.HasOne(d => d.Onderhoudslacontract)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Onderhoudslacontractid)
                    .HasConstraintName("fk_dnocontract_onderhoudslacontractid_netwerkcomponent");

                entity.HasOne(d => d.Onderhoudsoort)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Onderhoudsoortid)
                    .HasConstraintName("fk_slacontractsoort_onderhoudsoortid_netwerkcomponent");

                entity.HasOne(d => d.Onderhoudsplan)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Onderhoudsplanid)
                    .HasConstraintName("fk_onderhoudsplan_onderhoudsplanid_netwerkcomponent");

                entity.HasOne(d => d.Persoongroep)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Persoongroepid)
                    .HasConstraintName("fk_persoongroep_persoongroepid_netwerkcomponent");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_netwerkcomponent");

                entity.HasOne(d => d.Servicewindow)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Servicewindowid)
                    .HasConstraintName("fk_servicewindow_servicewindowid_netwerkcomponent");

                entity.HasOne(d => d.Sjabloonobject)
                    .WithMany(p => p.InverseSjabloonobject)
                    .HasForeignKey(d => d.Sjabloonobjectid)
                    .HasConstraintName("fk_netwerkcomponent_sjabloonobjectid_netwerkcomponent");

                entity.HasOne(d => d.Soort)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Soortid)
                    .HasConstraintName("fk_objectsoort_soortid_netwerkcomponent");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_objectstatus_statusid_netwerkcomponent");

                entity.HasOne(d => d.Stdresvbehandelaar)
                    .WithMany(p => p.NetwerkcomponentStdresvbehandelaar)
                    .HasForeignKey(d => d.Stdresvbehandelaarid)
                    .HasConstraintName("fk_actiedoor_stdresvbehandelaarid_netwerkcomponent");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.NetwerkcomponentUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_netwerkcomponent");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.NetwerkcomponentUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_netwerkcomponent");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.Netwerkcomponent)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_netwerkcomponent");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.NetwerkcomponentVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_netwerkcomponent");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.NetwerkcomponentVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_netwerkcomponent");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.NetwerkcomponentVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_netwerkcomponent");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.NetwerkcomponentVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_netwerkcomponent");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.NetwerkcomponentVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_netwerkcomponent");
            });

            modelBuilder.Entity<NetwerkcomponentDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("netwerkcomponent__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_netwerkcomponent__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_netwerkcomponent__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_netwerkcomponent__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_netwerkcomponent__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_netwerkcomponent__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_netwerkcomponent__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.NetwerkcomponentDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_netwerkcomponent_kaartid_netwerkcomponent__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.NetwerkcomponentDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_netwerkcomponent__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.NetwerkcomponentDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_netwerkcomponent__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.NetwerkcomponentDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_netwerkcomponent__documenten");
            });

            modelBuilder.Entity<NetwerkcomponentEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("netwerkcomponent__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_netwerkcomponent__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_netwerkcomponent__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_netwerkcomponent__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.NetwerkcomponentEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_netwerkcomponent__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.NetwerkcomponentEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_netwerkcomponent_kaartid_netwerkcomponent__emailberichten");
            });

            modelBuilder.Entity<NetwerkcomponentLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("netwerkcomponent__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_netwerkcomponent__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_netwerkcomponent__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_netwerkcomponent__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_netwerkcomponent__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_netwerkcomponent__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_netwerkcomponent__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.NetwerkcomponentLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_netwerkcomponent_kaartid_netwerkcomponent__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.NetwerkcomponentLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_netwerkcomponent__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.NetwerkcomponentLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_netwerkcomponent__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.NetwerkcomponentLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_netwerkcomponent__logboek");
            });

            modelBuilder.Entity<NetwerkcomponentOptionalgrid>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("netwerkcomponent__optionalgrid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_netwerkcomponent__optionalgrid_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_netwerkcomponent__optionalgrid_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_netwerkcomponent__optionalgrid_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_netwerkcomponent__optionalgrid_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_netwerkcomponent__optionalgrid_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_netwerkcomponent__optionalgrid_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_netwerkcomponent__optionalgrid_parentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_netwerkcomponent__optionalgrid_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_netwerkcomponent__optionalgrid_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_netwerkcomponent__optionalgrid_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_netwerkcomponent__optionalgrid_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_netwerkcomponent__optionalgrid_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_netwerkcomponent__optionalgrid_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_netwerkcomponent__optionalgrid_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.NetwerkcomponentOptionalgridAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_netwerkcomponent__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.NetwerkcomponentOptionalgridAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_netwerkcomponent__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.NetwerkcomponentOptionalgridAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_netwerkcomponent__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.NetwerkcomponentOptionalgridAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_netwerkcomponent__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.NetwerkcomponentOptionalgridAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_netwerkcomponent__optionalgrid");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.NetwerkcomponentOptionalgrid)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_netwerkcomponent_parentid_netwerkcomponent__optionalgrid");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.NetwerkcomponentOptionalgridUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_netwerkcomponent__optionalgrid");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.NetwerkcomponentOptionalgridUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_netwerkcomponent__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.NetwerkcomponentOptionalgridVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_netwerkcomponent__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.NetwerkcomponentOptionalgridVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_netwerkcomponent__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.NetwerkcomponentOptionalgridVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_netwerkcomponent__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.NetwerkcomponentOptionalgridVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_netwerkcomponent__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.NetwerkcomponentOptionalgridVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_netwerkcomponent__optionalgrid");
            });

            modelBuilder.Entity<Nummers>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("nummers");

                entity.HasIndex(e => e.Code)
                    .HasName("uidx_nummers_code")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasColumnName("code")
                    .HasMaxLength(16);

                entity.Property(e => e.Controlenummer).HasColumnName("controlenummer");

                entity.Property(e => e.Nummer).HasColumnName("nummer");
            });

            modelBuilder.Entity<ObjConfLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("obj_conf_link");

                entity.HasIndex(e => e.Configuratieid)
                    .HasName("idx_obj_conf_link_configuratieid");

                entity.HasIndex(e => e.Groepid)
                    .HasName("idx_obj_conf_link_groepid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_obj_conf_link_importid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_obj_conf_link_objectid");

                entity.HasIndex(e => e.RefObjectnaam)
                    .HasName("idx_obj_conf_link_ref_objectnaam");

                entity.HasIndex(e => e.RefPersoongroepid)
                    .HasName("idx_obj_conf_link_ref_persoongroepid");

                entity.HasIndex(e => e.RefPersoonid)
                    .HasName("idx_obj_conf_link_ref_persoonid");

                entity.HasIndex(e => new { e.Objectid, e.Configuratieid })
                    .HasName("uidx_obj_conf_link_objectid_configuratieid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Configuratieid).HasColumnName("configuratieid");

                entity.Property(e => e.Groepid).HasColumnName("groepid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Isfileserver).HasColumnName("isfileserver");

                entity.Property(e => e.Isvoorraadlink).HasColumnName("isvoorraadlink");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.RefObjectnaam)
                    .IsRequired()
                    .HasColumnName("ref_objectnaam")
                    .HasMaxLength(60);

                entity.Property(e => e.RefPersoongroepid).HasColumnName("ref_persoongroepid");

                entity.Property(e => e.RefPersoonid).HasColumnName("ref_persoonid");

                entity.HasOne(d => d.Configuratie)
                    .WithMany(p => p.ObjConfLink)
                    .HasForeignKey(d => d.Configuratieid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_configuratie_configuratieid_obj_conf_link");

                entity.HasOne(d => d.Groep)
                    .WithMany(p => p.ObjConfLinkGroep)
                    .HasForeignKey(d => d.Groepid)
                    .HasConstraintName("fk_persoongroep_groepid_obj_conf_link");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.ObjConfLink)
                    .HasForeignKey(d => d.Objectid)
                    .HasConstraintName("fk_object_objectid_obj_conf_link");

                entity.HasOne(d => d.RefPersoongroep)
                    .WithMany(p => p.ObjConfLinkRefPersoongroep)
                    .HasForeignKey(d => d.RefPersoongroepid)
                    .HasConstraintName("fk_persoongroep_ref_persoongroepid_obj_conf_link");

                entity.HasOne(d => d.RefPersoon)
                    .WithMany(p => p.ObjConfLink)
                    .HasForeignKey(d => d.RefPersoonid)
                    .HasConstraintName("fk_persoon_ref_persoonid_obj_conf_link");
            });

            modelBuilder.Entity<Object>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("object");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_object_importid");

                entity.HasIndex(e => e.RefAankoopbedrag)
                    .HasName("idx_object_ref_aankoopbedrag");

                entity.HasIndex(e => e.RefAanschafdatum)
                    .HasName("idx_object_ref_aanschafdatum");

                entity.HasIndex(e => e.RefAanspreekpuntid)
                    .HasName("idx_object_ref_aanspreekpuntid");

                entity.HasIndex(e => e.RefArchiefredenid)
                    .HasName("idx_object_ref_archiefredenid");

                entity.HasIndex(e => e.RefArtikelstatus)
                    .HasName("idx_object_ref_artikelstatus");

                entity.HasIndex(e => e.RefArtikelstatusid)
                    .HasName("idx_object_ref_artikelstatusid");

                entity.HasIndex(e => e.RefArtikelwordtobject)
                    .HasName("idx_object_ref_artikelwordtobject");

                entity.HasIndex(e => e.RefAttentieid)
                    .HasName("idx_object_ref_attentieid");

                entity.HasIndex(e => e.RefBudgethouderid)
                    .HasName("idx_object_ref_budgethouderid");

                entity.HasIndex(e => e.RefConfignaam)
                    .HasName("idx_object_ref_confignaam");

                entity.HasIndex(e => e.RefConfiguratieid)
                    .HasName("idx_object_ref_configuratieid");

                entity.HasIndex(e => e.RefGebruiker)
                    .HasName("idx_object_ref_gebruiker");

                entity.HasIndex(e => e.RefGroepid)
                    .HasName("idx_object_ref_groepid");

                entity.HasIndex(e => e.RefHostnaam)
                    .HasName("idx_object_ref_hostnaam");

                entity.HasIndex(e => e.RefHuidigevoorraad)
                    .HasName("idx_object_ref_huidigevoorraad");

                entity.HasIndex(e => e.RefIpadres)
                    .HasName("idx_object_ref_ipadres");

                entity.HasIndex(e => e.RefKleur)
                    .HasName("idx_object_ref_kleur");

                entity.HasIndex(e => e.RefKorteomschrijving)
                    .HasName("idx_object_ref_korteomschrijving");

                entity.HasIndex(e => e.RefLeaseaanvangsdatum)
                    .HasName("idx_object_ref_leaseaanvangsdatum");

                entity.HasIndex(e => e.RefLeasecontractnummer)
                    .HasName("idx_object_ref_leasecontractnummer");

                entity.HasIndex(e => e.RefLeaseeinddatum)
                    .HasName("idx_object_ref_leaseeinddatum");

                entity.HasIndex(e => e.RefLeaseperiode)
                    .HasName("idx_object_ref_leaseperiode");

                entity.HasIndex(e => e.RefLeaseprijs)
                    .HasName("idx_object_ref_leaseprijs");

                entity.HasIndex(e => e.RefLeverancier)
                    .HasName("idx_object_ref_leverancier");

                entity.HasIndex(e => e.RefLeverancierid)
                    .HasName("idx_object_ref_leverancierid");

                entity.HasIndex(e => e.RefLicentiesoortid)
                    .HasName("idx_object_ref_licentiesoortid");

                entity.HasIndex(e => e.RefLokatie)
                    .HasName("idx_object_ref_lokatie");

                entity.HasIndex(e => e.RefLokatieid)
                    .HasName("idx_object_ref_lokatieid");

                entity.HasIndex(e => e.RefMerk)
                    .HasName("idx_object_ref_merk");

                entity.HasIndex(e => e.RefMerkid)
                    .HasName("idx_object_ref_merkid");

                entity.HasIndex(e => e.RefNaam)
                    .HasName("uidx_object_ref_naam")
                    .IsUnique();

                entity.HasIndex(e => e.RefObjectplaats)
                    .HasName("idx_object_ref_objectplaats");

                entity.HasIndex(e => e.RefOrdernummer)
                    .HasName("idx_object_ref_ordernummer");

                entity.HasIndex(e => e.RefPersoon)
                    .HasName("idx_object_ref_persoon");

                entity.HasIndex(e => e.RefPersoongroep)
                    .HasName("idx_object_ref_persoongroep");

                entity.HasIndex(e => e.RefPersoongroepid)
                    .HasName("idx_object_ref_persoongroepid");

                entity.HasIndex(e => e.RefPersoonid)
                    .HasName("idx_object_ref_persoonid");

                entity.HasIndex(e => e.RefPlaats)
                    .HasName("idx_object_ref_plaats");

                entity.HasIndex(e => e.RefPlaatskeuze)
                    .HasName("idx_object_ref_plaatskeuze");

                entity.HasIndex(e => e.RefRestwaarde)
                    .HasName("idx_object_ref_restwaarde");

                entity.HasIndex(e => e.RefSerienummer)
                    .HasName("idx_object_ref_serienummer");

                entity.HasIndex(e => e.RefServicewindowid)
                    .HasName("idx_object_ref_servicewindowid");

                entity.HasIndex(e => e.RefSoort)
                    .HasName("idx_object_ref_soort");

                entity.HasIndex(e => e.RefSoortid)
                    .HasName("idx_object_ref_soortid");

                entity.HasIndex(e => e.RefSpecificatie)
                    .HasName("idx_object_ref_specificatie");

                entity.HasIndex(e => e.RefStatus)
                    .HasName("idx_object_ref_status");

                entity.HasIndex(e => e.RefStdresvbehandelaarid)
                    .HasName("idx_object_ref_stdresvbehandelaarid");

                entity.HasIndex(e => e.RefType)
                    .HasName("idx_object_ref_type");

                entity.HasIndex(e => e.RefTypeid)
                    .HasName("idx_object_ref_typeid");

                entity.HasIndex(e => e.RefVeiligvoorraad)
                    .HasName("idx_object_ref_veiligvoorraad");

                entity.HasIndex(e => e.RefVerhuurborg)
                    .HasName("idx_object_ref_verhuurborg");

                entity.HasIndex(e => e.RefVerhuurprijs)
                    .HasName("idx_object_ref_verhuurprijs");

                entity.HasIndex(e => e.RefVerhuurprijssysteem)
                    .HasName("idx_object_ref_verhuurprijssysteem");

                entity.HasIndex(e => e.RefVestiging)
                    .HasName("idx_object_ref_vestiging");

                entity.HasIndex(e => e.RefVestigingid)
                    .HasName("idx_object_ref_vestigingid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_object_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_object_statusid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_object_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_object_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.RefAankoopbedrag)
                    .HasColumnName("ref_aankoopbedrag")
                    .HasColumnType("money");

                entity.Property(e => e.RefAanschafdatum)
                    .HasColumnName("ref_aanschafdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefAanspreekpuntid).HasColumnName("ref_aanspreekpuntid");

                entity.Property(e => e.RefArchiefredenid).HasColumnName("ref_archiefredenid");

                entity.Property(e => e.RefArtikelstatus)
                    .IsRequired()
                    .HasColumnName("ref_artikelstatus")
                    .HasMaxLength(100);

                entity.Property(e => e.RefArtikelstatusid).HasColumnName("ref_artikelstatusid");

                entity.Property(e => e.RefArtikelwordtobject).HasColumnName("ref_artikelwordtobject");

                entity.Property(e => e.RefAttentieid).HasColumnName("ref_attentieid");

                entity.Property(e => e.RefBestelbaarinssh).HasColumnName("ref_bestelbaarinssh");

                entity.Property(e => e.RefBlocktime).HasColumnName("ref_blocktime");

                entity.Property(e => e.RefBudgethouderid).HasColumnName("ref_budgethouderid");

                entity.Property(e => e.RefConfignaam)
                    .IsRequired()
                    .HasColumnName("ref_confignaam")
                    .HasMaxLength(30);

                entity.Property(e => e.RefConfiguratieid).HasColumnName("ref_configuratieid");

                entity.Property(e => e.RefCostsHightariff)
                    .HasColumnName("ref_costs_hightariff")
                    .HasColumnType("money");

                entity.Property(e => e.RefGebruiker)
                    .IsRequired()
                    .HasColumnName("ref_gebruiker")
                    .HasMaxLength(109);

                entity.Property(e => e.RefGroepid).HasColumnName("ref_groepid");

                entity.Property(e => e.RefHeeftattentie).HasColumnName("ref_heeftattentie");

                entity.Property(e => e.RefHeeftvoorraad).HasColumnName("ref_heeftvoorraad");

                entity.Property(e => e.RefHostnaam)
                    .IsRequired()
                    .HasColumnName("ref_hostnaam")
                    .HasMaxLength(50);

                entity.Property(e => e.RefHuidigevoorraad).HasColumnName("ref_huidigevoorraad");

                entity.Property(e => e.RefIpadres)
                    .IsRequired()
                    .HasColumnName("ref_ipadres")
                    .HasMaxLength(50);

                entity.Property(e => e.RefKleur).HasColumnName("ref_kleur");

                entity.Property(e => e.RefKorteomschrijving)
                    .IsRequired()
                    .HasColumnName("ref_korteomschrijving")
                    .HasMaxLength(40);

                entity.Property(e => e.RefLeaseaanvangsdatum)
                    .HasColumnName("ref_leaseaanvangsdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefLeasecontractnummer)
                    .IsRequired()
                    .HasColumnName("ref_leasecontractnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.RefLeaseeinddatum)
                    .HasColumnName("ref_leaseeinddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefLeaseinfo).HasColumnName("ref_leaseinfo");

                entity.Property(e => e.RefLeaseperiode).HasColumnName("ref_leaseperiode");

                entity.Property(e => e.RefLeaseprijs)
                    .HasColumnName("ref_leaseprijs")
                    .HasColumnType("money");

                entity.Property(e => e.RefLeverancier)
                    .IsRequired()
                    .HasColumnName("ref_leverancier")
                    .HasMaxLength(60);

                entity.Property(e => e.RefLeverancierid).HasColumnName("ref_leverancierid");

                entity.Property(e => e.RefLicentiesoortid).HasColumnName("ref_licentiesoortid");

                entity.Property(e => e.RefLokatie)
                    .IsRequired()
                    .HasColumnName("ref_lokatie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefLokatieid).HasColumnName("ref_lokatieid");

                entity.Property(e => e.RefMerk)
                    .IsRequired()
                    .HasColumnName("ref_merk")
                    .HasMaxLength(100);

                entity.Property(e => e.RefMerkid).HasColumnName("ref_merkid");

                entity.Property(e => e.RefNaam)
                    .IsRequired()
                    .HasColumnName("ref_naam")
                    .HasMaxLength(60);

                entity.Property(e => e.RefObjectplaats).HasColumnName("ref_objectplaats");

                entity.Property(e => e.RefOpmerking)
                    .IsRequired()
                    .HasColumnName("ref_opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.RefOrdernummer)
                    .IsRequired()
                    .HasColumnName("ref_ordernummer")
                    .HasMaxLength(30);

                entity.Property(e => e.RefPersoon)
                    .IsRequired()
                    .HasColumnName("ref_persoon")
                    .HasMaxLength(109);

                entity.Property(e => e.RefPersoongroep)
                    .IsRequired()
                    .HasColumnName("ref_persoongroep")
                    .HasMaxLength(50);

                entity.Property(e => e.RefPersoongroepid).HasColumnName("ref_persoongroepid");

                entity.Property(e => e.RefPersoonid).HasColumnName("ref_persoonid");

                entity.Property(e => e.RefPlaats)
                    .IsRequired()
                    .HasColumnName("ref_plaats")
                    .HasMaxLength(30);

                entity.Property(e => e.RefPlaatskeuze).HasColumnName("ref_plaatskeuze");

                entity.Property(e => e.RefReservableOfficehoursSsd).HasColumnName("ref_reservable_officehours_ssd");

                entity.Property(e => e.RefReservablewithlocation).HasColumnName("ref_reservablewithlocation");

                entity.Property(e => e.RefReserveerbaaractiveerbaar).HasColumnName("ref_reserveerbaaractiveerbaar");

                entity.Property(e => e.RefReserveerbaarkantooruren).HasColumnName("ref_reserveerbaarkantooruren");

                entity.Property(e => e.RefReserveerbaarsecure).HasColumnName("ref_reserveerbaarsecure");

                entity.Property(e => e.RefReserveerbaarsshd).HasColumnName("ref_reserveerbaarsshd");

                entity.Property(e => e.RefReservzichtbaarsshd).HasColumnName("ref_reservzichtbaarsshd");

                entity.Property(e => e.RefRestwaarde)
                    .HasColumnName("ref_restwaarde")
                    .HasColumnType("money");

                entity.Property(e => e.RefRmSpecification)
                    .IsRequired()
                    .HasColumnName("ref_rm_specification")
                    .HasMaxLength(100);

                entity.Property(e => e.RefSerienummer)
                    .IsRequired()
                    .HasColumnName("ref_serienummer")
                    .HasMaxLength(100);

                entity.Property(e => e.RefServicewindowOption).HasColumnName("ref_servicewindow_option");

                entity.Property(e => e.RefServicewindowid).HasColumnName("ref_servicewindowid");

                entity.Property(e => e.RefSoort)
                    .IsRequired()
                    .HasColumnName("ref_soort")
                    .HasMaxLength(100);

                entity.Property(e => e.RefSoortid).HasColumnName("ref_soortid");

                entity.Property(e => e.RefSpecificatie)
                    .IsRequired()
                    .HasColumnName("ref_specificatie")
                    .HasMaxLength(60);

                entity.Property(e => e.RefStatus).HasColumnName("ref_status");

                entity.Property(e => e.RefStdresvbehandelaarid).HasColumnName("ref_stdresvbehandelaarid");

                entity.Property(e => e.RefType)
                    .IsRequired()
                    .HasColumnName("ref_type")
                    .HasMaxLength(100);

                entity.Property(e => e.RefTypeid).HasColumnName("ref_typeid");

                entity.Property(e => e.RefVeiligvoorraad).HasColumnName("ref_veiligvoorraad");

                entity.Property(e => e.RefVerhuurborg)
                    .HasColumnName("ref_verhuurborg")
                    .HasColumnType("money");

                entity.Property(e => e.RefVerhuurprijs)
                    .HasColumnName("ref_verhuurprijs")
                    .HasColumnType("money");

                entity.Property(e => e.RefVerhuurprijssysteem).HasColumnName("ref_verhuurprijssysteem");

                entity.Property(e => e.RefVerhuurtekst)
                    .HasColumnName("ref_verhuurtekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.RefVerkoopprijs)
                    .HasColumnName("ref_verkoopprijs")
                    .HasColumnType("money");

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.RefVestigingid).HasColumnName("ref_vestigingid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasColumnName("type")
                    .HasMaxLength(20);

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.RefAanspreekpunt)
                    .WithMany(p => p.ObjectRefAanspreekpunt)
                    .HasForeignKey(d => d.RefAanspreekpuntid)
                    .HasConstraintName("fk_actiedoor_ref_aanspreekpuntid_object");

                entity.HasOne(d => d.RefArchiefreden)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.RefArchiefredenid)
                    .HasConstraintName("fk_archiefreden_ref_archiefredenid_object");

                entity.HasOne(d => d.RefArtikelstatusNavigation)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.RefArtikelstatusid)
                    .HasConstraintName("fk_artikelstatus_ref_artikelstatusid_object");

                entity.HasOne(d => d.RefAttentie)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.RefAttentieid)
                    .HasConstraintName("fk_attentie_ref_attentieid_object");

                entity.HasOne(d => d.RefBudgethouder)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.RefBudgethouderid)
                    .HasConstraintName("fk_budgethouder_ref_budgethouderid_object");

                entity.HasOne(d => d.RefConfiguratie)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.RefConfiguratieid)
                    .HasConstraintName("fk_configuratie_ref_configuratieid_object");

                entity.HasOne(d => d.RefGroep)
                    .WithMany(p => p.ObjectRefGroep)
                    .HasForeignKey(d => d.RefGroepid)
                    .HasConstraintName("fk_persoongroep_ref_groepid_object");

                entity.HasOne(d => d.RefLeverancierNavigation)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.RefLeverancierid)
                    .HasConstraintName("fk_leverancier_ref_leverancierid_object");

                entity.HasOne(d => d.RefLicentiesoort)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.RefLicentiesoortid)
                    .HasConstraintName("fk_licentiesoort_ref_licentiesoortid_object");

                entity.HasOne(d => d.RefLokatieNavigation)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.RefLokatieid)
                    .HasConstraintName("fk_locatie_ref_lokatieid_object");

                entity.HasOne(d => d.RefMerkNavigation)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.RefMerkid)
                    .HasConstraintName("fk_objectmerk_ref_merkid_object");

                entity.HasOne(d => d.RefPersoongroepNavigation)
                    .WithMany(p => p.ObjectRefPersoongroepNavigation)
                    .HasForeignKey(d => d.RefPersoongroepid)
                    .HasConstraintName("fk_persoongroep_ref_persoongroepid_object");

                entity.HasOne(d => d.RefPersoonNavigation)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.RefPersoonid)
                    .HasConstraintName("fk_persoon_ref_persoonid_object");

                entity.HasOne(d => d.RefServicewindow)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.RefServicewindowid)
                    .HasConstraintName("fk_servicewindow_ref_servicewindowid_object");

                entity.HasOne(d => d.RefSoortNavigation)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.RefSoortid)
                    .HasConstraintName("fk_objectsoort_ref_soortid_object");

                entity.HasOne(d => d.RefStdresvbehandelaar)
                    .WithMany(p => p.ObjectRefStdresvbehandelaar)
                    .HasForeignKey(d => d.RefStdresvbehandelaarid)
                    .HasConstraintName("fk_actiedoor_ref_stdresvbehandelaarid_object");

                entity.HasOne(d => d.RefTypeNavigation)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.RefTypeid)
                    .HasConstraintName("fk_objecttype_ref_typeid_object");

                entity.HasOne(d => d.RefVestigingNavigation)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.RefVestigingid)
                    .HasConstraintName("fk_vestiging_ref_vestigingid_object");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_objectstatus_statusid_object");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ObjectUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_object");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ObjectUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_object");
            });

            modelBuilder.Entity<Objectmerk>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("objectmerk");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_objectmerk_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_objectmerk_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_objectmerk_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasColumnName("code")
                    .HasMaxLength(8);

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ObjectObjectLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("object_object_link");

                entity.HasIndex(e => e.Childid)
                    .HasName("idx_object_object_link_childid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_object_object_link_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_object_object_link_parentid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Childid).HasColumnName("childid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.HasOne(d => d.Child)
                    .WithMany(p => p.ObjectObjectLinkChild)
                    .HasForeignKey(d => d.Childid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_childid_object_object_link");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.ObjectObjectLinkParent)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_parentid_object_object_link");
            });

            modelBuilder.Entity<ObjectPicture>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("object__picture");

                entity.HasIndex(e => e.Cardid)
                    .HasName("idx_object__picture_cardid");

                entity.HasIndex(e => e.Pictureid)
                    .HasName("idx_object__picture_pictureid");

                entity.HasIndex(e => new { e.Pictureid, e.Cardid })
                    .HasName("uidx_object__picture_pictureid_cardid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cardid).HasColumnName("cardid");

                entity.Property(e => e.Isfavourite).HasColumnName("isfavourite");

                entity.Property(e => e.Pictureid).HasColumnName("pictureid");

                entity.Property(e => e.Rank).HasColumnName("rank");

                entity.HasOne(d => d.Card)
                    .WithMany(p => p.ObjectPicture)
                    .HasForeignKey(d => d.Cardid)
                    .HasConstraintName("fk_object_cardid_object__picture");

                entity.HasOne(d => d.Picture)
                    .WithMany(p => p.ObjectPicture)
                    .HasForeignKey(d => d.Pictureid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_picture_pictureid_object__picture");
            });

            modelBuilder.Entity<Objectsoort>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("objectsoort");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_objectsoort_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_objectsoort_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_objectsoort_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasColumnName("code")
                    .HasMaxLength(8);

                entity.Property(e => e.Icon)
                    .HasColumnName("icon")
                    .HasMaxLength(30);

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Nummerbegin).HasColumnName("nummerbegin");

                entity.Property(e => e.Nummerminlengte).HasColumnName("nummerminlengte");

                entity.Property(e => e.Nummerprefix)
                    .IsRequired()
                    .HasColumnName("nummerprefix")
                    .HasMaxLength(10);

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.Volgnummer).HasColumnName("volgnummer");
            });

            modelBuilder.Entity<Objectstatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("objectstatus");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_objectstatus_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_objectstatus_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_objectstatus_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Objecttype>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("objecttype");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_objecttype_archief");

                entity.HasIndex(e => e.Merkid)
                    .HasName("idx_objecttype_merkid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_objecttype_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_objecttype_rang");

                entity.HasIndex(e => e.Soortid)
                    .HasName("idx_objecttype_soortid");

                entity.HasIndex(e => new { e.Naam, e.Soortid, e.Merkid, e.Code })
                    .HasName("uidx_objecttype_naam_soortid_merkid_code")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasColumnName("code")
                    .HasMaxLength(8);

                entity.Property(e => e.Merkid).HasColumnName("merkid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.Soortid).HasColumnName("soortid");

                entity.HasOne(d => d.Merk)
                    .WithMany(p => p.Objecttype)
                    .HasForeignKey(d => d.Merkid)
                    .HasConstraintName("fk_objectmerk_merkid_objecttype");

                entity.HasOne(d => d.Soort)
                    .WithMany(p => p.Objecttype)
                    .HasForeignKey(d => d.Soortid)
                    .HasConstraintName("fk_objectsoort_soortid_objecttype");
            });

            modelBuilder.Entity<ObjIncidentLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("obj_incident_link");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_obj_incident_link_importid");

                entity.HasIndex(e => e.Incidentid)
                    .HasName("idx_obj_incident_link_incidentid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_obj_incident_link_objectid");

                entity.HasIndex(e => new { e.Objectid, e.Incidentid })
                    .HasName("uidx_obj_incident_link_objectid_incidentid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Incidentid).HasColumnName("incidentid");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.HasOne(d => d.Incident)
                    .WithMany(p => p.ObjIncidentLink)
                    .HasForeignKey(d => d.Incidentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_incident_incidentid_obj_incident_link");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.ObjIncidentLink)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_obj_incident_link");
            });

            modelBuilder.Entity<ObjPersoongroepLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("obj_persoongroep_link");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_obj_persoongroep_link_importid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_obj_persoongroep_link_objectid");

                entity.HasIndex(e => e.Persoongroepid)
                    .HasName("idx_obj_persoongroep_link_persoongroepid");

                entity.HasIndex(e => new { e.Objectid, e.Persoongroepid })
                    .HasName("uidx_obj_persoongroep_link_objectid_persoongroepid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Persoongroepid).HasColumnName("persoongroepid");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.ObjPersoongroepLink)
                    .HasForeignKey(d => d.Objectid)
                    .HasConstraintName("fk_object_objectid_obj_persoongroep_link");

                entity.HasOne(d => d.Persoongroep)
                    .WithMany(p => p.ObjPersoongroepLink)
                    .HasForeignKey(d => d.Persoongroepid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_persoongroep_persoongroepid_obj_persoongroep_link");
            });

            modelBuilder.Entity<ObjPersoonLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("obj_persoon_link");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_obj_persoon_link_importid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_obj_persoon_link_objectid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_obj_persoon_link_persoonid");

                entity.HasIndex(e => new { e.Objectid, e.Persoonid })
                    .HasName("uidx_obj_persoon_link_objectid_persoonid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.ObjPersoonLink)
                    .HasForeignKey(d => d.Objectid)
                    .HasConstraintName("fk_object_objectid_obj_persoon_link");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ObjPersoonLink)
                    .HasForeignKey(d => d.Persoonid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_persoon_persoonid_obj_persoon_link");
            });

            modelBuilder.Entity<ObjProblemLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("obj_problem_link");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_obj_problem_link_importid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_obj_problem_link_objectid");

                entity.HasIndex(e => e.Problemid)
                    .HasName("idx_obj_problem_link_problemid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Problemid).HasColumnName("problemid");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.ObjProblemLink)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_obj_problem_link");

                entity.HasOne(d => d.Problem)
                    .WithMany(p => p.ObjProblemLink)
                    .HasForeignKey(d => d.Problemid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_probleem_problemid_obj_problem_link");
            });

            modelBuilder.Entity<ObjVestigingLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("obj_vestiging_link");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_obj_vestiging_link_importid");

                entity.HasIndex(e => e.Locatieid)
                    .HasName("idx_obj_vestiging_link_locatieid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_obj_vestiging_link_objectid");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_obj_vestiging_link_vestigingid");

                entity.HasIndex(e => new { e.Objectid, e.Vestigingid })
                    .HasName("uidx_obj_vestiging_link_objectid_vestigingid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Locatieid).HasColumnName("locatieid");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.HasOne(d => d.Locatie)
                    .WithMany(p => p.ObjVestigingLink)
                    .HasForeignKey(d => d.Locatieid)
                    .HasConstraintName("fk_locatie_locatieid_obj_vestiging_link");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.ObjVestigingLink)
                    .HasForeignKey(d => d.Objectid)
                    .HasConstraintName("fk_object_objectid_obj_vestiging_link");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.ObjVestigingLink)
                    .HasForeignKey(d => d.Vestigingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_vestiging_vestigingid_obj_vestiging_link");
            });

            modelBuilder.Entity<OmActiviteit>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_activiteit");

                entity.HasIndex(e => e.Afwijkingredenid)
                    .HasName("idx_om_activiteit_afwijkingredenid");

                entity.HasIndex(e => e.Appointmentid)
                    .HasName("idx_om_activiteit_appointmentid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_om_activiteit_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_om_activiteit_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_om_activiteit_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_om_activiteit_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_om_activiteit_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_om_activiteit_attvrijeopzoek5");

                entity.HasIndex(e => e.Behandelaarid)
                    .HasName("idx_om_activiteit_behandelaarid");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_om_activiteit_budgethouderid");

                entity.HasIndex(e => e.Categorieid)
                    .HasName("idx_om_activiteit_categorieid");

                entity.HasIndex(e => e.Datumafgemeld)
                    .HasName("idx_om_activiteit_datumafgemeld");

                entity.HasIndex(e => e.Einddatumgepland)
                    .HasName("idx_om_activiteit_einddatumgepland");

                entity.HasIndex(e => e.Groeperingid)
                    .HasName("idx_om_activiteit_groeperingid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_om_activiteit_importid");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_om_activiteit_operatorgroupid");

                entity.HasIndex(e => e.Redenoverslaanid)
                    .HasName("idx_om_activiteit_redenoverslaanid");

                entity.HasIndex(e => e.Reeksid)
                    .HasName("idx_om_activiteit_reeksid");

                entity.HasIndex(e => e.Schemaid)
                    .HasName("idx_om_activiteit_schemaid");

                entity.HasIndex(e => e.Soortid)
                    .HasName("idx_om_activiteit_soortid");

                entity.HasIndex(e => e.Startdatumgepland)
                    .HasName("idx_om_activiteit_startdatumgepland");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_om_activiteit_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_om_activiteit_statusid");

                entity.HasIndex(e => e.Subcategorieid)
                    .HasName("idx_om_activiteit_subcategorieid");

                entity.HasIndex(e => e.Supplierid)
                    .HasName("idx_om_activiteit_supplierid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_om_activiteit_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_om_activiteit_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_om_activiteit_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_om_activiteit_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_om_activiteit_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_om_activiteit_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_om_activiteit_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Actie)
                    .HasColumnName("actie")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afgemeld).HasColumnName("afgemeld");

                entity.Property(e => e.Afwijkinggeconstateerd).HasColumnName("afwijkinggeconstateerd");

                entity.Property(e => e.Afwijkingredenid).HasColumnName("afwijkingredenid");

                entity.Property(e => e.Appointmentid).HasColumnName("appointmentid");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Behandelaarid).HasColumnName("behandelaarid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestedetijd).HasColumnName("bestedetijd");

                entity.Property(e => e.Bestedetijdgepland).HasColumnName("bestedetijdgepland");

                entity.Property(e => e.Bestedetijdmemo)
                    .HasColumnName("bestedetijdmemo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Categorieid).HasColumnName("categorieid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumafgemeld)
                    .HasColumnName("datumafgemeld")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Einddatumgepland)
                    .HasColumnName("einddatumgepland")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gerealiseerdekosten)
                    .HasColumnName("gerealiseerdekosten")
                    .HasColumnType("money");

                entity.Property(e => e.Groeperingid).HasColumnName("groeperingid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Kostengepland)
                    .HasColumnName("kostengepland")
                    .HasColumnType("money");

                entity.Property(e => e.Kostenmemo)
                    .HasColumnName("kostenmemo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(80);

                entity.Property(e => e.Nogteverwachtenbestedetijd).HasColumnName("nogteverwachtenbestedetijd");

                entity.Property(e => e.Nogteverwachtenkosten)
                    .HasColumnName("nogteverwachtenkosten")
                    .HasColumnType("money");

                entity.Property(e => e.Nummer)
                    .IsRequired()
                    .HasColumnName("nummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Overgeslagen).HasColumnName("overgeslagen");

                entity.Property(e => e.Redenoverslaanid).HasColumnName("redenoverslaanid");

                entity.Property(e => e.Reeksid).HasColumnName("reeksid");

                entity.Property(e => e.RefBehandelaarnaam)
                    .IsRequired()
                    .HasColumnName("ref_behandelaarnaam")
                    .HasMaxLength(109);

                entity.Property(e => e.RefBestedetijdsgat).HasColumnName("ref_bestedetijdsgat");

                entity.Property(e => e.RefBestedetijdsverschil).HasColumnName("ref_bestedetijdsverschil");

                entity.Property(e => e.RefCategorienaam)
                    .IsRequired()
                    .HasColumnName("ref_categorienaam")
                    .HasMaxLength(30);

                entity.Property(e => e.RefGroeperingnaam)
                    .IsRequired()
                    .HasColumnName("ref_groeperingnaam")
                    .HasMaxLength(80);

                entity.Property(e => e.RefKostengat)
                    .HasColumnName("ref_kostengat")
                    .HasColumnType("money");

                entity.Property(e => e.RefKostenverschil)
                    .HasColumnName("ref_kostenverschil")
                    .HasColumnType("money");

                entity.Property(e => e.RefProgresstrail)
                    .HasColumnName("ref_progresstrail")
                    .HasColumnType("ntext");

                entity.Property(e => e.RefSchemanaam)
                    .IsRequired()
                    .HasColumnName("ref_schemanaam")
                    .HasMaxLength(80);

                entity.Property(e => e.RefSeriesname)
                    .IsRequired()
                    .HasColumnName("ref_seriesname")
                    .HasMaxLength(80);

                entity.Property(e => e.RefSeriesnumber)
                    .IsRequired()
                    .HasColumnName("ref_seriesnumber")
                    .HasMaxLength(30);

                entity.Property(e => e.RefStatusnaam)
                    .IsRequired()
                    .HasColumnName("ref_statusnaam")
                    .HasMaxLength(100);

                entity.Property(e => e.RefSubcategorienaam)
                    .IsRequired()
                    .HasColumnName("ref_subcategorienaam")
                    .HasMaxLength(30);

                entity.Property(e => e.Schemaid).HasColumnName("schemaid");

                entity.Property(e => e.Soortid).HasColumnName("soortid");

                entity.Property(e => e.Startdatumgepland)
                    .HasColumnName("startdatumgepland")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Subcategorieid).HasColumnName("subcategorieid");

                entity.Property(e => e.Supplierid).HasColumnName("supplierid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Verzoek)
                    .HasColumnName("verzoek")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Afwijkingreden)
                    .WithMany(p => p.OmActiviteit)
                    .HasForeignKey(d => d.Afwijkingredenid)
                    .HasConstraintName("fk_om_afwijkingreden_afwijkingredenid_om_activiteit");

                entity.HasOne(d => d.Appointment)
                    .WithMany(p => p.OmActiviteit)
                    .HasForeignKey(d => d.Appointmentid)
                    .HasConstraintName("fk_appointment_appointmentid_om_activiteit");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.OmActiviteit)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_om_activiteit");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.OmActiviteitAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_om_activiteit");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.OmActiviteitAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_om_activiteit");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.OmActiviteitAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_om_activiteit");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.OmActiviteitAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_om_activiteit");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.OmActiviteitAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_om_activiteit");

                entity.HasOne(d => d.Behandelaar)
                    .WithMany(p => p.OmActiviteitBehandelaar)
                    .HasForeignKey(d => d.Behandelaarid)
                    .HasConstraintName("fk_actiedoor_behandelaarid_om_activiteit");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.OmActiviteit)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_om_activiteit");

                entity.HasOne(d => d.Categorie)
                    .WithMany(p => p.OmActiviteitCategorie)
                    .HasForeignKey(d => d.Categorieid)
                    .HasConstraintName("fk_classificatie_categorieid_om_activiteit");

                entity.HasOne(d => d.Groepering)
                    .WithMany(p => p.OmActiviteit)
                    .HasForeignKey(d => d.Groeperingid)
                    .HasConstraintName("fk_om_groepering_groeperingid_om_activiteit");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.OmActiviteitOperatorgroup)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_om_activiteit");

                entity.HasOne(d => d.Redenoverslaan)
                    .WithMany(p => p.OmActiviteit)
                    .HasForeignKey(d => d.Redenoverslaanid)
                    .HasConstraintName("fk_om_redenoverslaan_redenoverslaanid_om_activiteit");

                entity.HasOne(d => d.Reeks)
                    .WithMany(p => p.OmActiviteit)
                    .HasForeignKey(d => d.Reeksid)
                    .HasConstraintName("fk_om_reeks_reeksid_om_activiteit");

                entity.HasOne(d => d.Schema)
                    .WithMany(p => p.OmActiviteit)
                    .HasForeignKey(d => d.Schemaid)
                    .HasConstraintName("fk_om_schema_schemaid_om_activiteit");

                entity.HasOne(d => d.Soort)
                    .WithMany(p => p.OmActiviteit)
                    .HasForeignKey(d => d.Soortid)
                    .HasConstraintName("fk_om_soort_soortid_om_activiteit");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.OmActiviteit)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_om_activiteit_status_statusid_om_activiteit");

                entity.HasOne(d => d.Subcategorie)
                    .WithMany(p => p.OmActiviteitSubcategorie)
                    .HasForeignKey(d => d.Subcategorieid)
                    .HasConstraintName("fk_classificatie_subcategorieid_om_activiteit");

                entity.HasOne(d => d.Supplier)
                    .WithMany(p => p.OmActiviteit)
                    .HasForeignKey(d => d.Supplierid)
                    .HasConstraintName("fk_leverancier_supplierid_om_activiteit");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OmActiviteitUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_om_activiteit");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OmActiviteitUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_om_activiteit");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.OmActiviteitVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_om_activiteit");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.OmActiviteitVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_om_activiteit");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.OmActiviteitVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_om_activiteit");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.OmActiviteitVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_om_activiteit");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.OmActiviteitVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_om_activiteit");
            });

            modelBuilder.Entity<OmActiviteitDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_activiteit__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_om_activiteit__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_om_activiteit__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_om_activiteit__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_om_activiteit__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.OmActiviteitDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_om_activiteit_kaartid_om_activiteit__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.OmActiviteitDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_om_activiteit__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OmActiviteitDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_om_activiteit__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OmActiviteitDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_om_activiteit__documenten");
            });

            modelBuilder.Entity<OmActiviteitEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_activiteit__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_om_activiteit__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_om_activiteit__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.OmActiviteitEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_om_activiteit__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.OmActiviteitEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_om_activiteit_kaartid_om_activiteit__emailberichten");
            });

            modelBuilder.Entity<OmActiviteitIncidentLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_activiteit_incident_link");

                entity.HasIndex(e => e.Incidentid)
                    .HasName("idx_om_activiteit_incident_link_incidentid");

                entity.HasIndex(e => e.OmActiviteitid)
                    .HasName("idx_om_activiteit_incident_link_om_activiteitid");

                entity.HasIndex(e => new { e.OmActiviteitid, e.Incidentid })
                    .HasName("uidx_om_activiteit_incident_link_om_activiteitid_incidentid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Incidentid).HasColumnName("incidentid");

                entity.Property(e => e.OmActiviteitid).HasColumnName("om_activiteitid");

                entity.HasOne(d => d.Incident)
                    .WithMany(p => p.OmActiviteitIncidentLink)
                    .HasForeignKey(d => d.Incidentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_incident_incidentid_om_activiteit_incident_link");

                entity.HasOne(d => d.OmActiviteit)
                    .WithMany(p => p.OmActiviteitIncidentLink)
                    .HasForeignKey(d => d.OmActiviteitid)
                    .HasConstraintName("fk_om_activiteit_om_activiteitid_om_activiteit_incident_link");
            });

            modelBuilder.Entity<OmActiviteitLocatieLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_activiteit_locatie_link");

                entity.HasIndex(e => e.Locatieid)
                    .HasName("idx_om_activiteit_locatie_link_locatieid");

                entity.HasIndex(e => e.OmActiviteitid)
                    .HasName("idx_om_activiteit_locatie_link_om_activiteitid");

                entity.HasIndex(e => new { e.OmActiviteitid, e.Locatieid })
                    .HasName("uidx_om_activiteit_locatie_link_om_activiteitid_locatieid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Locatieid).HasColumnName("locatieid");

                entity.Property(e => e.OmActiviteitid).HasColumnName("om_activiteitid");

                entity.HasOne(d => d.Locatie)
                    .WithMany(p => p.OmActiviteitLocatieLink)
                    .HasForeignKey(d => d.Locatieid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_locatie_locatieid_om_activiteit_locatie_link");

                entity.HasOne(d => d.OmActiviteit)
                    .WithMany(p => p.OmActiviteitLocatieLink)
                    .HasForeignKey(d => d.OmActiviteitid)
                    .HasConstraintName("fk_om_activiteit_om_activiteitid_om_activiteit_locatie_link");
            });

            modelBuilder.Entity<OmActiviteitLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_activiteit__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_om_activiteit__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_om_activiteit__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_om_activiteit__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_om_activiteit__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.OmActiviteitLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_om_activiteit_kaartid_om_activiteit__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.OmActiviteitLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_om_activiteit__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OmActiviteitLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_om_activiteit__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OmActiviteitLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_om_activiteit__logboek");
            });

            modelBuilder.Entity<OmActiviteitMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_activiteit__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_om_activiteit__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_om_activiteit__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_om_activiteit__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_om_activiteit__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_om_activiteit__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_om_activiteit__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_om_activiteit__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_om_activiteit__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_om_activiteit__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.OmActiviteitMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_om_activiteit__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.OmActiviteitMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_om_activiteit_parentid_om_activiteit__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.OmActiviteitMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_om_activiteit__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OmActiviteitMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_om_activiteit__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OmActiviteitMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_om_activiteit__memo_history");
            });

            modelBuilder.Entity<OmActiviteitObjectLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_activiteit_object_link");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_om_activiteit_object_link_objectid");

                entity.HasIndex(e => e.OmActiviteitid)
                    .HasName("idx_om_activiteit_object_link_om_activiteitid");

                entity.HasIndex(e => new { e.OmActiviteitid, e.Objectid })
                    .HasName("uidx_om_activiteit_object_link_om_activiteitid_objectid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.OmActiviteitid).HasColumnName("om_activiteitid");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.OmActiviteitObjectLink)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_om_activiteit_object_link");

                entity.HasOne(d => d.OmActiviteit)
                    .WithMany(p => p.OmActiviteitObjectLink)
                    .HasForeignKey(d => d.OmActiviteitid)
                    .HasConstraintName("fk_om_activiteit_om_activiteitid_om_activiteit_object_link");
            });

            modelBuilder.Entity<OmActiviteitStatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_activiteit_status");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_om_activiteit_status_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_om_activiteit_status_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_om_activiteit_status_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<OmActiviteitVestigingLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_activiteit_vestiging_link");

                entity.HasIndex(e => e.OmActiviteitid)
                    .HasName("idx_om_activiteit_vestiging_link_om_activiteitid");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_om_activiteit_vestiging_link_vestigingid");

                entity.HasIndex(e => new { e.OmActiviteitid, e.Vestigingid })
                    .HasName("uidx_om_activiteit_vestiging_link_om_activiteitid_vestigingid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.OmActiviteitid).HasColumnName("om_activiteitid");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.HasOne(d => d.OmActiviteit)
                    .WithMany(p => p.OmActiviteitVestigingLink)
                    .HasForeignKey(d => d.OmActiviteitid)
                    .HasConstraintName("fk_om_activiteit_om_activiteitid_om_activiteit_vestiging_link");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.OmActiviteitVestigingLink)
                    .HasForeignKey(d => d.Vestigingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_vestiging_vestigingid_om_activiteit_vestiging_link");
            });

            modelBuilder.Entity<OmAfwijkingreden>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_afwijkingreden");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_om_afwijkingreden_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_om_afwijkingreden_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_om_afwijkingreden_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<OmGroepering>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_groepering");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_om_groepering_archiefredenid");

                entity.HasIndex(e => e.Schemaid)
                    .HasName("idx_om_groepering_schemaid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_om_groepering_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_om_groepering_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_om_groepering_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(80);

                entity.Property(e => e.Schemaid).HasColumnName("schemaid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.OmGroepering)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_om_groepering");

                entity.HasOne(d => d.Schema)
                    .WithMany(p => p.OmGroepering)
                    .HasForeignKey(d => d.Schemaid)
                    .HasConstraintName("fk_om_schema_schemaid_om_groepering");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OmGroeperingUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_om_groepering");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OmGroeperingUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_om_groepering");
            });

            modelBuilder.Entity<OmRedenoverslaan>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_redenoverslaan");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_om_redenoverslaan_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_om_redenoverslaan_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_om_redenoverslaan_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<OmReeks>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_reeks");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_om_reeks_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_om_reeks_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_om_reeks_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_om_reeks_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_om_reeks_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_om_reeks_attvrijeopzoek5");

                entity.HasIndex(e => e.Beheerderid)
                    .HasName("idx_om_reeks_beheerderid");

                entity.HasIndex(e => e.Groeperingid)
                    .HasName("idx_om_reeks_groeperingid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_om_reeks_importid");

                entity.HasIndex(e => e.Planningid)
                    .HasName("idx_om_reeks_planningid");

                entity.HasIndex(e => e.Rappeldatum)
                    .HasName("idx_om_reeks_rappeldatum");

                entity.HasIndex(e => e.Schemaid)
                    .HasName("idx_om_reeks_schemaid");

                entity.HasIndex(e => e.Standaardbehandelaarid)
                    .HasName("idx_om_reeks_standaardbehandelaarid");

                entity.HasIndex(e => e.Standaardbudgethouderid)
                    .HasName("idx_om_reeks_standaardbudgethouderid");

                entity.HasIndex(e => e.Standaardcategorieid)
                    .HasName("idx_om_reeks_standaardcategorieid");

                entity.HasIndex(e => e.Standaardoperatorgroupid)
                    .HasName("idx_om_reeks_standaardoperatorgroupid");

                entity.HasIndex(e => e.Standaardsoortid)
                    .HasName("idx_om_reeks_standaardsoortid");

                entity.HasIndex(e => e.Standaardstatusid)
                    .HasName("idx_om_reeks_standaardstatusid");

                entity.HasIndex(e => e.Standaardsubcategorieid)
                    .HasName("idx_om_reeks_standaardsubcategorieid");

                entity.HasIndex(e => e.Standaardsupplierid)
                    .HasName("idx_om_reeks_standaardsupplierid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_om_reeks_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_om_reeks_statusid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_om_reeks_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_om_reeks_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_om_reeks_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_om_reeks_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_om_reeks_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_om_reeks_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_om_reeks_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Actie)
                    .HasColumnName("actie")
                    .HasColumnType("ntext");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Beheerderid).HasColumnName("beheerderid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestedetijdgepland).HasColumnName("bestedetijdgepland");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Groeperingid).HasColumnName("groeperingid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Kostengepland)
                    .HasColumnName("kostengepland")
                    .HasColumnType("money");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(80);

                entity.Property(e => e.Nummer)
                    .IsRequired()
                    .HasColumnName("nummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Opmerkingen)
                    .HasColumnName("opmerkingen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Planningid).HasColumnName("planningid");

                entity.Property(e => e.Rappeldatum)
                    .HasColumnName("rappeldatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefActiBehandelaarnaam)
                    .IsRequired()
                    .HasColumnName("ref_acti_behandelaarnaam")
                    .HasMaxLength(109);

                entity.Property(e => e.RefActiCategorienaam)
                    .IsRequired()
                    .HasColumnName("ref_acti_categorienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.RefActiSoortnaam)
                    .IsRequired()
                    .HasColumnName("ref_acti_soortnaam")
                    .HasMaxLength(100);

                entity.Property(e => e.RefActiStatusnaam)
                    .IsRequired()
                    .HasColumnName("ref_acti_statusnaam")
                    .HasMaxLength(100);

                entity.Property(e => e.RefActiSubcategorienaam)
                    .IsRequired()
                    .HasColumnName("ref_acti_subcategorienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.RefBeheerdernaam)
                    .IsRequired()
                    .HasColumnName("ref_beheerdernaam")
                    .HasMaxLength(109);

                entity.Property(e => e.RefGroeperingnaam)
                    .IsRequired()
                    .HasColumnName("ref_groeperingnaam")
                    .HasMaxLength(80);

                entity.Property(e => e.RefSchemanaam)
                    .IsRequired()
                    .HasColumnName("ref_schemanaam")
                    .HasMaxLength(80);

                entity.Property(e => e.RefStatusnaam)
                    .IsRequired()
                    .HasColumnName("ref_statusnaam")
                    .HasMaxLength(100);

                entity.Property(e => e.Schemaid).HasColumnName("schemaid");

                entity.Property(e => e.Standaardaantekeningen)
                    .HasColumnName("standaardaantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Standaardbehandelaarid).HasColumnName("standaardbehandelaarid");

                entity.Property(e => e.Standaardbestedetijdgepland).HasColumnName("standaardbestedetijdgepland");

                entity.Property(e => e.Standaardbudgethouderid).HasColumnName("standaardbudgethouderid");

                entity.Property(e => e.Standaardcategorieid).HasColumnName("standaardcategorieid");

                entity.Property(e => e.Standaardkostengepland)
                    .HasColumnName("standaardkostengepland")
                    .HasColumnType("money");

                entity.Property(e => e.Standaardoperatorgroupid).HasColumnName("standaardoperatorgroupid");

                entity.Property(e => e.Standaardsoortid).HasColumnName("standaardsoortid");

                entity.Property(e => e.Standaardstatusid).HasColumnName("standaardstatusid");

                entity.Property(e => e.Standaardsubcategorieid).HasColumnName("standaardsubcategorieid");

                entity.Property(e => e.Standaardsupplierid).HasColumnName("standaardsupplierid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Verzoek)
                    .HasColumnName("verzoek")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.OmReeks)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_om_reeks");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.OmReeksAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_om_reeks");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.OmReeksAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_om_reeks");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.OmReeksAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_om_reeks");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.OmReeksAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_om_reeks");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.OmReeksAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_om_reeks");

                entity.HasOne(d => d.Beheerder)
                    .WithMany(p => p.OmReeksBeheerder)
                    .HasForeignKey(d => d.Beheerderid)
                    .HasConstraintName("fk_actiedoor_beheerderid_om_reeks");

                entity.HasOne(d => d.Groepering)
                    .WithMany(p => p.OmReeks)
                    .HasForeignKey(d => d.Groeperingid)
                    .HasConstraintName("fk_om_groepering_groeperingid_om_reeks");

                entity.HasOne(d => d.Planning)
                    .WithMany(p => p.OmReeks)
                    .HasForeignKey(d => d.Planningid)
                    .HasConstraintName("fk_planning_planningid_om_reeks");

                entity.HasOne(d => d.Schema)
                    .WithMany(p => p.OmReeks)
                    .HasForeignKey(d => d.Schemaid)
                    .HasConstraintName("fk_om_schema_schemaid_om_reeks");

                entity.HasOne(d => d.Standaardbehandelaar)
                    .WithMany(p => p.OmReeksStandaardbehandelaar)
                    .HasForeignKey(d => d.Standaardbehandelaarid)
                    .HasConstraintName("fk_actiedoor_standaardbehandelaarid_om_reeks");

                entity.HasOne(d => d.Standaardbudgethouder)
                    .WithMany(p => p.OmReeks)
                    .HasForeignKey(d => d.Standaardbudgethouderid)
                    .HasConstraintName("fk_budgethouder_standaardbudgethouderid_om_reeks");

                entity.HasOne(d => d.Standaardcategorie)
                    .WithMany(p => p.OmReeksStandaardcategorie)
                    .HasForeignKey(d => d.Standaardcategorieid)
                    .HasConstraintName("fk_classificatie_standaardcategorieid_om_reeks");

                entity.HasOne(d => d.Standaardoperatorgroup)
                    .WithMany(p => p.OmReeksStandaardoperatorgroup)
                    .HasForeignKey(d => d.Standaardoperatorgroupid)
                    .HasConstraintName("fk_actiedoor_standaardoperatorgroupid_om_reeks");

                entity.HasOne(d => d.Standaardsoort)
                    .WithMany(p => p.OmReeks)
                    .HasForeignKey(d => d.Standaardsoortid)
                    .HasConstraintName("fk_om_soort_standaardsoortid_om_reeks");

                entity.HasOne(d => d.Standaardstatus)
                    .WithMany(p => p.OmReeks)
                    .HasForeignKey(d => d.Standaardstatusid)
                    .HasConstraintName("fk_om_activiteit_status_standaardstatusid_om_reeks");

                entity.HasOne(d => d.Standaardsubcategorie)
                    .WithMany(p => p.OmReeksStandaardsubcategorie)
                    .HasForeignKey(d => d.Standaardsubcategorieid)
                    .HasConstraintName("fk_classificatie_standaardsubcategorieid_om_reeks");

                entity.HasOne(d => d.Standaardsupplier)
                    .WithMany(p => p.OmReeks)
                    .HasForeignKey(d => d.Standaardsupplierid)
                    .HasConstraintName("fk_leverancier_standaardsupplierid_om_reeks");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.OmReeks)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_om_status_statusid_om_reeks");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OmReeksUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_om_reeks");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OmReeksUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_om_reeks");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.OmReeksVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_om_reeks");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.OmReeksVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_om_reeks");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.OmReeksVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_om_reeks");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.OmReeksVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_om_reeks");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.OmReeksVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_om_reeks");
            });

            modelBuilder.Entity<OmReeksDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_reeks__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_om_reeks__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_om_reeks__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_om_reeks__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_om_reeks__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.OmReeksDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_om_reeks_kaartid_om_reeks__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.OmReeksDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_om_reeks__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OmReeksDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_om_reeks__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OmReeksDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_om_reeks__documenten");
            });

            modelBuilder.Entity<OmReeksEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_reeks__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_om_reeks__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_om_reeks__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.OmReeksEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_om_reeks__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.OmReeksEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_om_reeks_kaartid_om_reeks__emailberichten");
            });

            modelBuilder.Entity<OmReeksLocatieLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_reeks_locatie_link");

                entity.HasIndex(e => e.Locatieid)
                    .HasName("idx_om_reeks_locatie_link_locatieid");

                entity.HasIndex(e => e.OmReeksid)
                    .HasName("idx_om_reeks_locatie_link_om_reeksid");

                entity.HasIndex(e => new { e.OmReeksid, e.Locatieid })
                    .HasName("uidx_om_reeks_locatie_link_om_reeksid_locatieid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Locatieid).HasColumnName("locatieid");

                entity.Property(e => e.OmReeksid).HasColumnName("om_reeksid");

                entity.HasOne(d => d.Locatie)
                    .WithMany(p => p.OmReeksLocatieLink)
                    .HasForeignKey(d => d.Locatieid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_locatie_locatieid_om_reeks_locatie_link");

                entity.HasOne(d => d.OmReeks)
                    .WithMany(p => p.OmReeksLocatieLink)
                    .HasForeignKey(d => d.OmReeksid)
                    .HasConstraintName("fk_om_reeks_om_reeksid_om_reeks_locatie_link");
            });

            modelBuilder.Entity<OmReeksLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_reeks__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_om_reeks__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_om_reeks__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_om_reeks__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_om_reeks__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.OmReeksLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_om_reeks_kaartid_om_reeks__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.OmReeksLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_om_reeks__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OmReeksLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_om_reeks__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OmReeksLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_om_reeks__logboek");
            });

            modelBuilder.Entity<OmReeksMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_reeks__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_om_reeks__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_om_reeks__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_om_reeks__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_om_reeks__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_om_reeks__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_om_reeks__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_om_reeks__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_om_reeks__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_om_reeks__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.OmReeksMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_om_reeks__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.OmReeksMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_om_reeks_parentid_om_reeks__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.OmReeksMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_om_reeks__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OmReeksMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_om_reeks__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OmReeksMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_om_reeks__memo_history");
            });

            modelBuilder.Entity<OmReeksObjectLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_reeks_object_link");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_om_reeks_object_link_objectid");

                entity.HasIndex(e => e.OmReeksid)
                    .HasName("idx_om_reeks_object_link_om_reeksid");

                entity.HasIndex(e => new { e.OmReeksid, e.Objectid })
                    .HasName("uidx_om_reeks_object_link_om_reeksid_objectid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.OmReeksid).HasColumnName("om_reeksid");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.OmReeksObjectLink)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_om_reeks_object_link");

                entity.HasOne(d => d.OmReeks)
                    .WithMany(p => p.OmReeksObjectLink)
                    .HasForeignKey(d => d.OmReeksid)
                    .HasConstraintName("fk_om_reeks_om_reeksid_om_reeks_object_link");
            });

            modelBuilder.Entity<OmReeksVestigingLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_reeks_vestiging_link");

                entity.HasIndex(e => e.OmReeksid)
                    .HasName("idx_om_reeks_vestiging_link_om_reeksid");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_om_reeks_vestiging_link_vestigingid");

                entity.HasIndex(e => new { e.OmReeksid, e.Vestigingid })
                    .HasName("uidx_om_reeks_vestiging_link_om_reeksid_vestigingid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.OmReeksid).HasColumnName("om_reeksid");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.HasOne(d => d.OmReeks)
                    .WithMany(p => p.OmReeksVestigingLink)
                    .HasForeignKey(d => d.OmReeksid)
                    .HasConstraintName("fk_om_reeks_om_reeksid_om_reeks_vestiging_link");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.OmReeksVestigingLink)
                    .HasForeignKey(d => d.Vestigingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_vestiging_vestigingid_om_reeks_vestiging_link");
            });

            modelBuilder.Entity<OmSchema>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_schema");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_om_schema_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_om_schema_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_om_schema_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_om_schema_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_om_schema_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_om_schema_attvrijeopzoek5");

                entity.HasIndex(e => e.Beheerderid)
                    .HasName("idx_om_schema_beheerderid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_om_schema_importid");

                entity.HasIndex(e => e.Soortid)
                    .HasName("idx_om_schema_soortid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_om_schema_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_om_schema_statusid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_om_schema_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_om_schema_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_om_schema_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_om_schema_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_om_schema_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_om_schema_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_om_schema_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Beheerderid).HasColumnName("beheerderid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(80);

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.RefBeheerdernaam)
                    .IsRequired()
                    .HasColumnName("ref_beheerdernaam")
                    .HasMaxLength(109);

                entity.Property(e => e.RefSoortnaam)
                    .IsRequired()
                    .HasColumnName("ref_soortnaam")
                    .HasMaxLength(100);

                entity.Property(e => e.RefStatusnaam)
                    .IsRequired()
                    .HasColumnName("ref_statusnaam")
                    .HasMaxLength(100);

                entity.Property(e => e.Soortid).HasColumnName("soortid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.OmSchema)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_om_schema");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.OmSchemaAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_om_schema");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.OmSchemaAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_om_schema");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.OmSchemaAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_om_schema");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.OmSchemaAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_om_schema");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.OmSchemaAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_om_schema");

                entity.HasOne(d => d.Beheerder)
                    .WithMany(p => p.OmSchema)
                    .HasForeignKey(d => d.Beheerderid)
                    .HasConstraintName("fk_actiedoor_beheerderid_om_schema");

                entity.HasOne(d => d.Soort)
                    .WithMany(p => p.OmSchema)
                    .HasForeignKey(d => d.Soortid)
                    .HasConstraintName("fk_om_soort_soortid_om_schema");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.OmSchema)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_om_status_statusid_om_schema");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OmSchemaUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_om_schema");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OmSchemaUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_om_schema");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.OmSchemaVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_om_schema");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.OmSchemaVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_om_schema");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.OmSchemaVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_om_schema");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.OmSchemaVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_om_schema");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.OmSchemaVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_om_schema");
            });

            modelBuilder.Entity<OmSchemaDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_schema__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_om_schema__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_om_schema__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_om_schema__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_om_schema__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.OmSchemaDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_om_schema_kaartid_om_schema__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.OmSchemaDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_om_schema__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OmSchemaDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_om_schema__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OmSchemaDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_om_schema__documenten");
            });

            modelBuilder.Entity<OmSchemaEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_schema__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_om_schema__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_om_schema__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.OmSchemaEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_om_schema__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.OmSchemaEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_om_schema_kaartid_om_schema__emailberichten");
            });

            modelBuilder.Entity<OmSchemaLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_schema__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_om_schema__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_om_schema__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_om_schema__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_om_schema__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.OmSchemaLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_om_schema_kaartid_om_schema__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.OmSchemaLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_om_schema__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OmSchemaLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_om_schema__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OmSchemaLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_om_schema__logboek");
            });

            modelBuilder.Entity<OmSchemaMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_schema__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_om_schema__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_om_schema__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_om_schema__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_om_schema__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_om_schema__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_om_schema__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_om_schema__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_om_schema__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_om_schema__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.OmSchemaMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_om_schema__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.OmSchemaMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_om_schema_parentid_om_schema__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.OmSchemaMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_om_schema__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OmSchemaMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_om_schema__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OmSchemaMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_om_schema__memo_history");
            });

            modelBuilder.Entity<OmSoort>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_soort");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_om_soort_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_om_soort_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_om_soort_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<OmStatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("om_status");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_om_status_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_om_status_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_om_status_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Onderhoudsplan>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("onderhoudsplan");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_onderhoudsplan_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_onderhoudsplan_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_onderhoudsplan_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantal).HasColumnName("aantal");

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.Type).HasColumnName("type");
            });

            modelBuilder.Entity<Operatorfilter>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("operatorfilter");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_operatorfilter_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_operatorfilter_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_operatorfilter_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Active).HasColumnName("active");

                entity.Property(e => e.Allowshowallgroups).HasColumnName("allowshowallgroups");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("ntext");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(100);

                entity.Property(e => e.Shownooperator).HasColumnName("shownooperator");

                entity.Property(e => e.Showothergroups).HasColumnName("showothergroups");

                entity.Property(e => e.Showotheroperatorsingroups).HasColumnName("showotheroperatorsingroups");

                entity.Property(e => e.Showowngroups).HasColumnName("showowngroups");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Userscope).HasColumnName("userscope");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OperatorfilterUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_operatorfilter");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OperatorfilterUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_operatorfilter");
            });

            modelBuilder.Entity<Operatorfiltercache>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("operatorfiltercache");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_operatorfiltercache_operatorid");

                entity.HasIndex(e => e.Userid)
                    .HasName("idx_operatorfiltercache_userid");

                entity.HasIndex(e => new { e.Userid, e.Operatorid })
                    .HasName("idx_operatorfiltercache_userid_operatorid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Userid).HasColumnName("userid");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.Operatorfiltercache)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_operatorfiltercache");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Operatorfiltercache)
                    .HasForeignKey(d => d.Userid)
                    .HasConstraintName("fk_gebruiker_userid_operatorfiltercache");
            });

            modelBuilder.Entity<OperatorfilterGroup>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("operatorfilter_group");

                entity.HasIndex(e => e.Groupid)
                    .HasName("idx_operatorfilter_group_groupid");

                entity.HasIndex(e => e.Operatorfilterid)
                    .HasName("idx_operatorfilter_group_operatorfilterid");

                entity.HasIndex(e => new { e.Operatorfilterid, e.Groupid })
                    .HasName("uidx_operatorfilter_group_operatorfilterid_groupid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Groupid).HasColumnName("groupid");

                entity.Property(e => e.Operatorfilterid).HasColumnName("operatorfilterid");

                entity.HasOne(d => d.Group)
                    .WithMany(p => p.OperatorfilterGroup)
                    .HasForeignKey(d => d.Groupid)
                    .HasConstraintName("fk_actiedoor_groupid_operatorfilter_group");

                entity.HasOne(d => d.Operatorfilter)
                    .WithMany(p => p.OperatorfilterGroup)
                    .HasForeignKey(d => d.Operatorfilterid)
                    .HasConstraintName("fk_operatorfilter_operatorfilterid_operatorfilter_group");
            });

            modelBuilder.Entity<OperatorfilterOperator>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("operatorfilter_operator");

                entity.HasIndex(e => e.Operatorfilterid)
                    .HasName("idx_operatorfilter_operator_operatorfilterid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_operatorfilter_operator_operatorid");

                entity.HasIndex(e => new { e.Operatorfilterid, e.Operatorid })
                    .HasName("uidx_operatorfilter_operator_operatorfilterid_operatorid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Operatorfilterid).HasColumnName("operatorfilterid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.HasOne(d => d.Operatorfilter)
                    .WithMany(p => p.OperatorfilterOperator)
                    .HasForeignKey(d => d.Operatorfilterid)
                    .HasConstraintName("fk_operatorfilter_operatorfilterid_operatorfilter_operator");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.OperatorfilterOperator)
                    .HasForeignKey(d => d.Operatorid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_actiedoor_operatorid_operatorfilter_operator");
            });

            modelBuilder.Entity<OperatorPermissiongroup>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("operator_permissiongroup");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_operator_permissiongroup_importid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_operator_permissiongroup_operatorid");

                entity.HasIndex(e => e.Permissiongroupid)
                    .HasName("idx_operator_permissiongroup_permissiongroupid");

                entity.HasIndex(e => new { e.Operatorid, e.Permissiongroupid })
                    .HasName("uidx_operator_permissiongroup_operatorid_permissiongroupid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Permissiongroupid).HasColumnName("permissiongroupid");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.OperatorPermissiongroup)
                    .HasForeignKey(d => d.Operatorid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_actiedoor_operatorid_operator_permissiongroup");

                entity.HasOne(d => d.Permissiongroup)
                    .WithMany(p => p.OperatorPermissiongroup)
                    .HasForeignKey(d => d.Permissiongroupid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_gebruiker_permissiongroupid_operator_permissiongroup");
            });

            modelBuilder.Entity<Oplossingen>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("oplossingen");

                entity.HasIndex(e => e.Actiedoorlijn1id)
                    .HasName("idx_oplossingen_actiedoorlijn1id");

                entity.HasIndex(e => e.Actiedoorlijn2id)
                    .HasName("idx_oplossingen_actiedoorlijn2id");

                entity.HasIndex(e => e.Afhandelingstatusid)
                    .HasName("idx_oplossingen_afhandelingstatusid");

                entity.HasIndex(e => e.Categoryid)
                    .HasName("idx_oplossingen_categoryid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_oplossingen_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_oplossingen_datwijzig");

                entity.HasIndex(e => e.Doorlooptijdlijn1id)
                    .HasName("idx_oplossingen_doorlooptijdlijn1id");

                entity.HasIndex(e => e.Doorlooptijdlijn2id)
                    .HasName("idx_oplossingen_doorlooptijdlijn2id");

                entity.HasIndex(e => e.Firstlinesupplierid)
                    .HasName("idx_oplossingen_firstlinesupplierid");

                entity.HasIndex(e => e.Impactid)
                    .HasName("idx_oplossingen_impactid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_oplossingen_importid");

                entity.HasIndex(e => e.Oplosmethodeid)
                    .HasName("idx_oplossingen_oplosmethodeid");

                entity.HasIndex(e => e.Priorityid)
                    .HasName("idx_oplossingen_priorityid");

                entity.HasIndex(e => e.Probleemid)
                    .HasName("idx_oplossingen_probleemid");

                entity.HasIndex(e => e.Secondlinesupplierid)
                    .HasName("idx_oplossingen_secondlinesupplierid");

                entity.HasIndex(e => e.Soortbinnenkomstid)
                    .HasName("idx_oplossingen_soortbinnenkomstid");

                entity.HasIndex(e => e.Soortmeldingid)
                    .HasName("idx_oplossingen_soortmeldingid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_oplossingen_status");

                entity.HasIndex(e => e.Subcategoryid)
                    .HasName("idx_oplossingen_subcategoryid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_oplossingen_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_oplossingen_uidwijzig");

                entity.HasIndex(e => e.Urgencyid)
                    .HasName("idx_oplossingen_urgencyid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actie)
                    .HasColumnName("actie")
                    .HasColumnType("ntext");

                entity.Property(e => e.Actiedoorlijn1id).HasColumnName("actiedoorlijn1id");

                entity.Property(e => e.Actiedoorlijn2id).HasColumnName("actiedoorlijn2id");

                entity.Property(e => e.Afgemeld).HasColumnName("afgemeld");

                entity.Property(e => e.Afhandelingstatusid).HasColumnName("afhandelingstatusid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Categoryid).HasColumnName("categoryid");

                entity.Property(e => e.Currentoperatorline1).HasColumnName("currentoperatorline1");

                entity.Property(e => e.Currentoperatorline2).HasColumnName("currentoperatorline2");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Doorlooptijdlijn1id).HasColumnName("doorlooptijdlijn1id");

                entity.Property(e => e.Doorlooptijdlijn2id).HasColumnName("doorlooptijdlijn2id");

                entity.Property(e => e.Firstlinesupplierid).HasColumnName("firstlinesupplierid");

                entity.Property(e => e.Gereed).HasColumnName("gereed");

                entity.Property(e => e.Impactid).HasColumnName("impactid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Korteomschrijving)
                    .IsRequired()
                    .HasColumnName("korteomschrijving")
                    .HasMaxLength(80);

                entity.Property(e => e.Onkosten)
                    .HasColumnName("onkosten")
                    .HasColumnType("money");

                entity.Property(e => e.Oplosmethodeid).HasColumnName("oplosmethodeid");

                entity.Property(e => e.Priorityid).HasColumnName("priorityid");

                entity.Property(e => e.Probleemid).HasColumnName("probleemid");

                entity.Property(e => e.Secondlinesupplierid).HasColumnName("secondlinesupplierid");

                entity.Property(e => e.Soortbinnenkomstid).HasColumnName("soortbinnenkomstid");

                entity.Property(e => e.Soortmeldingid).HasColumnName("soortmeldingid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Subcategoryid).HasColumnName("subcategoryid");

                entity.Property(e => e.Tijdbesteed).HasColumnName("tijdbesteed");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Urgencyid).HasColumnName("urgencyid");

                entity.Property(e => e.Verzoek)
                    .HasColumnName("verzoek")
                    .HasColumnType("ntext");

                entity.HasOne(d => d.Actiedoorlijn1)
                    .WithMany(p => p.OplossingenActiedoorlijn1)
                    .HasForeignKey(d => d.Actiedoorlijn1id)
                    .HasConstraintName("fk_actiedoor_actiedoorlijn1id_oplossingen");

                entity.HasOne(d => d.Actiedoorlijn2)
                    .WithMany(p => p.OplossingenActiedoorlijn2)
                    .HasForeignKey(d => d.Actiedoorlijn2id)
                    .HasConstraintName("fk_actiedoor_actiedoorlijn2id_oplossingen");

                entity.HasOne(d => d.Afhandelingstatus)
                    .WithMany(p => p.Oplossingen)
                    .HasForeignKey(d => d.Afhandelingstatusid)
                    .HasConstraintName("fk_afhandelingstatus_afhandelingstatusid_oplossingen");

                entity.HasOne(d => d.Category)
                    .WithMany(p => p.OplossingenCategory)
                    .HasForeignKey(d => d.Categoryid)
                    .HasConstraintName("fk_classificatie_categoryid_oplossingen");

                entity.HasOne(d => d.Doorlooptijdlijn1)
                    .WithMany(p => p.OplossingenDoorlooptijdlijn1)
                    .HasForeignKey(d => d.Doorlooptijdlijn1id)
                    .HasConstraintName("fk_doorlooptijd_doorlooptijdlijn1id_oplossingen");

                entity.HasOne(d => d.Doorlooptijdlijn2)
                    .WithMany(p => p.OplossingenDoorlooptijdlijn2)
                    .HasForeignKey(d => d.Doorlooptijdlijn2id)
                    .HasConstraintName("fk_doorlooptijd_doorlooptijdlijn2id_oplossingen");

                entity.HasOne(d => d.Firstlinesupplier)
                    .WithMany(p => p.OplossingenFirstlinesupplier)
                    .HasForeignKey(d => d.Firstlinesupplierid)
                    .HasConstraintName("fk_leverancier_firstlinesupplierid_oplossingen");

                entity.HasOne(d => d.Impact)
                    .WithMany(p => p.Oplossingen)
                    .HasForeignKey(d => d.Impactid)
                    .HasConstraintName("fk_impact_impactid_oplossingen");

                entity.HasOne(d => d.Oplosmethode)
                    .WithMany(p => p.Oplossingen)
                    .HasForeignKey(d => d.Oplosmethodeid)
                    .HasConstraintName("fk_oplossingsmethode_oplosmethodeid_oplossingen");

                entity.HasOne(d => d.Priority)
                    .WithMany(p => p.Oplossingen)
                    .HasForeignKey(d => d.Priorityid)
                    .HasConstraintName("fk_priority_priorityid_oplossingen");

                entity.HasOne(d => d.Probleem)
                    .WithMany(p => p.Oplossingen)
                    .HasForeignKey(d => d.Probleemid)
                    .HasConstraintName("fk_probleem_probleemid_oplossingen");

                entity.HasOne(d => d.Secondlinesupplier)
                    .WithMany(p => p.OplossingenSecondlinesupplier)
                    .HasForeignKey(d => d.Secondlinesupplierid)
                    .HasConstraintName("fk_leverancier_secondlinesupplierid_oplossingen");

                entity.HasOne(d => d.Soortbinnenkomst)
                    .WithMany(p => p.Oplossingen)
                    .HasForeignKey(d => d.Soortbinnenkomstid)
                    .HasConstraintName("fk_soortbinnenkomst_soortbinnenkomstid_oplossingen");

                entity.HasOne(d => d.Soortmelding)
                    .WithMany(p => p.Oplossingen)
                    .HasForeignKey(d => d.Soortmeldingid)
                    .HasConstraintName("fk_soortmelding_soortmeldingid_oplossingen");

                entity.HasOne(d => d.Subcategory)
                    .WithMany(p => p.OplossingenSubcategory)
                    .HasForeignKey(d => d.Subcategoryid)
                    .HasConstraintName("fk_classificatie_subcategoryid_oplossingen");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OplossingenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_oplossingen");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OplossingenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_oplossingen");

                entity.HasOne(d => d.Urgency)
                    .WithMany(p => p.Oplossingen)
                    .HasForeignKey(d => d.Urgencyid)
                    .HasConstraintName("fk_urgency_urgencyid_oplossingen");
            });

            modelBuilder.Entity<OplossingenDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("oplossingen__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_oplossingen__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_oplossingen__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_oplossingen__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_oplossingen__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.OplossingenDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_oplossingen_kaartid_oplossingen__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.OplossingenDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_oplossingen__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OplossingenDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_oplossingen__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OplossingenDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_oplossingen__documenten");
            });

            modelBuilder.Entity<OplossingenEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("oplossingen__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_oplossingen__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_oplossingen__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.OplossingenEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_oplossingen__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.OplossingenEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_oplossingen_kaartid_oplossingen__emailberichten");
            });

            modelBuilder.Entity<OplossingenLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("oplossingen__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_oplossingen__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_oplossingen__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_oplossingen__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_oplossingen__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.OplossingenLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_oplossingen_kaartid_oplossingen__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.OplossingenLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_oplossingen__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.OplossingenLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_oplossingen__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.OplossingenLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_oplossingen__logboek");
            });

            modelBuilder.Entity<Oplossingsmethode>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("oplossingsmethode");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_oplossingsmethode_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_oplossingsmethode_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_oplossingsmethode_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Opslagmedium>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("opslagmedium");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_opslagmedium_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_opslagmedium_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_opslagmedium_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Orderrequeststatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("orderrequeststatus");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_orderrequeststatus_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_orderrequeststatus_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_orderrequeststatus_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Patch>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("patch");

                entity.HasIndex(e => e.Einddatum)
                    .HasName("idx_patch_einddatum");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_patch_leverancierid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_patch_objectid");

                entity.HasIndex(e => e.Startdatum)
                    .HasName("idx_patch_startdatum");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasColumnName("code")
                    .HasMaxLength(30);

                entity.Property(e => e.Einddatum)
                    .HasColumnName("einddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kosten)
                    .HasColumnName("kosten")
                    .HasColumnType("money");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Startdatum)
                    .HasColumnName("startdatum")
                    .HasColumnType("datetime");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.Patch)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_patch");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Patch)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_software_objectid_patch");
            });

            modelBuilder.Entity<Persoon>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("persoon");

                entity.HasIndex(e => e.Afdelingid)
                    .HasName("idx_persoon_afdelingid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_persoon_archiefredenid");

                entity.HasIndex(e => e.Attentieid)
                    .HasName("idx_persoon_attentieid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_persoon_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_persoon_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_persoon_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_persoon_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_persoon_attvrijeopzoek5");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_persoon_budgethouderid");

                entity.HasIndex(e => e.CollectiveAgreementId)
                    .HasName("idx_persoon_collective_agreement_id");

                entity.HasIndex(e => e.ContractTypeId)
                    .HasName("idx_persoon_contract_type_id");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_persoon_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_persoon_datwijzig");

                entity.HasIndex(e => e.Extraapersoonid)
                    .HasName("idx_persoon_extraapersoonid");

                entity.HasIndex(e => e.Extrabpersoonid)
                    .HasName("idx_persoon_extrabpersoonid");

                entity.HasIndex(e => e.Geboortedatum)
                    .HasName("idx_persoon_geboortedatum");

                entity.HasIndex(e => e.HighestEducationId)
                    .HasName("idx_persoon_highest_education_id");

                entity.HasIndex(e => e.IdIssueCountryId)
                    .HasName("idx_persoon_id_issue_country_id");

                entity.HasIndex(e => e.IdTypeId)
                    .HasName("idx_persoon_id_type_id");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_persoon_importid");

                entity.HasIndex(e => e.Landid)
                    .HasName("idx_persoon_landid");

                entity.HasIndex(e => e.LanguageId)
                    .HasName("idx_persoon_language_id");

                entity.HasIndex(e => e.Loginnaamnetwerk)
                    .HasName("idx_persoon_loginnaamnetwerk");

                entity.HasIndex(e => e.Lokatieid)
                    .HasName("idx_persoon_lokatieid");

                entity.HasIndex(e => e.Managerid)
                    .HasName("idx_persoon_managerid");

                entity.HasIndex(e => e.NationalityId)
                    .HasName("idx_persoon_nationality_id");

                entity.HasIndex(e => e.OriginCountryId)
                    .HasName("idx_persoon_origin_country_id");

                entity.HasIndex(e => e.Personeelsnr)
                    .HasName("idx_persoon_personeelsnr");

                entity.HasIndex(e => e.RefAanhefformeel)
                    .HasName("idx_persoon_ref_aanhefformeel");

                entity.HasIndex(e => e.RefAanhefinformeel)
                    .HasName("idx_persoon_ref_aanhefinformeel");

                entity.HasIndex(e => e.RefAfdeling)
                    .HasName("idx_persoon_ref_afdeling");

                entity.HasIndex(e => e.RefBudgethouder)
                    .HasName("idx_persoon_ref_budgethouder");

                entity.HasIndex(e => e.RefDebnummer)
                    .HasName("idx_persoon_ref_debnummer");

                entity.HasIndex(e => e.RefDynanaam)
                    .HasName("idx_persoon_ref_dynanaam");

                entity.HasIndex(e => e.RefKleur)
                    .HasName("idx_persoon_ref_kleur");

                entity.HasIndex(e => e.RefLocatie)
                    .HasName("idx_persoon_ref_locatie");

                entity.HasIndex(e => e.RefPlaats1)
                    .HasName("idx_persoon_ref_plaats1");

                entity.HasIndex(e => e.RefVestiging)
                    .HasName("idx_persoon_ref_vestiging");

                entity.HasIndex(e => e.SalaryScaleId)
                    .HasName("idx_persoon_salary_scale_id");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_persoon_status");

                entity.HasIndex(e => e.TravelAllowanceTypeId)
                    .HasName("idx_persoon_travel_allowance_type_id");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_persoon_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_persoon_uidwijzig");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_persoon_vestigingid");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_persoon_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_persoon_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_persoon_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_persoon_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_persoon_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_persoon_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_persoon_vrijeopzoek5");

                entity.HasIndex(e => new { e.Achternaam, e.Unid })
                    .HasName("uidx_persoon_achternaam_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.Huisnummer, e.Unid })
                    .HasName("uidx_persoon_huisnummer_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.Personeelsnr, e.Unid })
                    .HasName("uidx_persoon_personeelsnr_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.Plaats, e.Unid })
                    .HasName("uidx_persoon_plaats_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.Postcode, e.Unid })
                    .HasName("uidx_persoon_postcode_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.RefDynanaam, e.Unid })
                    .HasName("uidx_persoon_ref_dynanaam_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.Straat, e.Unid })
                    .HasName("uidx_persoon_straat_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.Voorletters, e.Unid })
                    .HasName("uidx_persoon_voorletters_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.Voornaam, e.Unid })
                    .HasName("uidx_persoon_voornaam_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.Postcode, e.Huisnummer, e.Unid })
                    .HasName("uidx_persoon_postcode_huisnummer_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.RefDynanaam, e.Status, e.Unid })
                    .HasName("uidx_persoon_ref_dynanaam_status_unid")
                    .IsUnique();

                entity.HasIndex(e => new { e.Tasloginnaam, e.Status, e.Unid })
                    .HasName("uidx_persoon_tasloginnaam_status_unid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Achternaam)
                    .IsRequired()
                    .HasColumnName("achternaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Adresmemo)
                    .HasColumnName("adresmemo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afdelingbekijken).HasColumnName("afdelingbekijken");

                entity.Property(e => e.Afdelingid).HasColumnName("afdelingid");

                entity.Property(e => e.Afdelingvrijenaam)
                    .HasColumnName("afdelingvrijenaam")
                    .HasMaxLength(60);

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attentieid).HasColumnName("attentieid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.BankAccount)
                    .IsRequired()
                    .HasColumnName("bank_account")
                    .HasMaxLength(34);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.BirthPlace)
                    .IsRequired()
                    .HasColumnName("birth_place")
                    .HasMaxLength(30);

                entity.Property(e => e.Budgethouderbekijken).HasColumnName("budgethouderbekijken");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.CollectiveAgreementId).HasColumnName("collective_agreement_id");

                entity.Property(e => e.ContractExpiryDate)
                    .HasColumnName("contract_expiry_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ContractHours).HasColumnName("contract_hours");

                entity.Property(e => e.ContractStartDate)
                    .HasColumnName("contract_start_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ContractTypeId).HasColumnName("contract_type_id");

                entity.Property(e => e.County)
                    .IsRequired()
                    .HasColumnName("county")
                    .HasMaxLength(50);

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diversen)
                    .HasColumnName("diversen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dochtervestigingbekijken).HasColumnName("dochtervestigingbekijken");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasColumnName("email")
                    .HasMaxLength(100);

                entity.Property(e => e.EmergencyContactName)
                    .IsRequired()
                    .HasColumnName("emergency_contact_name")
                    .HasMaxLength(100);

                entity.Property(e => e.EmergencyContactPhone)
                    .IsRequired()
                    .HasColumnName("emergency_contact_phone")
                    .HasMaxLength(25);

                entity.Property(e => e.EmergencyContactRelation)
                    .IsRequired()
                    .HasColumnName("emergency_contact_relation")
                    .HasMaxLength(50);

                entity.Property(e => e.EndProbationPeriod)
                    .HasColumnName("end_probation_period")
                    .HasColumnType("datetime");

                entity.Property(e => e.ExpenseAllowance)
                    .IsRequired()
                    .HasColumnName("expense_allowance")
                    .HasMaxLength(50);

                entity.Property(e => e.Externtoegevoegd).HasColumnName("externtoegevoegd");

                entity.Property(e => e.Extraapersoonid).HasColumnName("extraapersoonid");

                entity.Property(e => e.Extrabpersoonid).HasColumnName("extrabpersoonid");

                entity.Property(e => e.Fax)
                    .IsRequired()
                    .HasColumnName("fax")
                    .HasMaxLength(25);

                entity.Property(e => e.Functie)
                    .IsRequired()
                    .HasColumnName("functie")
                    .HasMaxLength(100);

                entity.Property(e => e.Geboortedatum)
                    .HasColumnName("geboortedatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Geslacht).HasColumnName("geslacht");

                entity.Property(e => e.GrossSalary)
                    .HasColumnName("gross_salary")
                    .HasColumnType("money");

                entity.Property(e => e.HasLeaseCar).HasColumnName("has_lease_car");

                entity.Property(e => e.HasTravelAllowance).HasColumnName("has_travel_allowance");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.HighestEducationId).HasColumnName("highest_education_id");

                entity.Property(e => e.HireDate)
                    .HasColumnName("hire_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.HotelAllowance)
                    .IsRequired()
                    .HasColumnName("hotel_allowance")
                    .HasMaxLength(50);

                entity.Property(e => e.Huisnummer)
                    .IsRequired()
                    .HasColumnName("huisnummer")
                    .HasMaxLength(50);

                entity.Property(e => e.IdExpiryDate)
                    .HasColumnName("id_expiry_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdIssueCountryId).HasColumnName("id_issue_country_id");

                entity.Property(e => e.IdIssueDate)
                    .HasColumnName("id_issue_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdIssuePlace)
                    .IsRequired()
                    .HasColumnName("id_issue_place")
                    .HasMaxLength(30);

                entity.Property(e => e.IdNumber)
                    .IsRequired()
                    .HasColumnName("id_number")
                    .HasMaxLength(50);

                entity.Property(e => e.IdTypeId).HasColumnName("id_type_id");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Ismanager).HasColumnName("ismanager");

                entity.Property(e => e.Kamer)
                    .IsRequired()
                    .HasColumnName("kamer")
                    .HasMaxLength(40);

                entity.Property(e => e.Landid).HasColumnName("landid");

                entity.Property(e => e.LanguageId).HasColumnName("language_id");

                entity.Property(e => e.LeaseCarBudget)
                    .HasColumnName("lease_car_budget")
                    .HasColumnType("money");

                entity.Property(e => e.Loginnaammainframe)
                    .IsRequired()
                    .HasColumnName("loginnaammainframe")
                    .HasMaxLength(100);

                entity.Property(e => e.Loginnaamnetwerk)
                    .IsRequired()
                    .HasColumnName("loginnaamnetwerk")
                    .HasMaxLength(100);

                entity.Property(e => e.Lokatieid).HasColumnName("lokatieid");

                entity.Property(e => e.MaidenName)
                    .IsRequired()
                    .HasColumnName("maiden_name")
                    .HasMaxLength(100);

                entity.Property(e => e.Managerid).HasColumnName("managerid");

                entity.Property(e => e.MayAuthorizeAll).HasColumnName("may_authorize_all");

                entity.Property(e => e.MayAuthorizeBudgetholder).HasColumnName("may_authorize_budgetholder");

                entity.Property(e => e.MayAuthorizeDepartment).HasColumnName("may_authorize_department");

                entity.Property(e => e.MayAuthorizeSite).HasColumnName("may_authorize_site");

                entity.Property(e => e.MayAuthorizeSubsidiarySites).HasColumnName("may_authorize_subsidiary_sites");

                entity.Property(e => e.Mobiel)
                    .IsRequired()
                    .HasColumnName("mobiel")
                    .HasMaxLength(25);

                entity.Property(e => e.NationalityId).HasColumnName("nationality_id");

                entity.Property(e => e.Opmerking)
                    .IsRequired()
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.OriginCountryId).HasColumnName("origin_country_id");

                entity.Property(e => e.OtherBenefits)
                    .IsRequired()
                    .HasColumnName("other_benefits")
                    .HasMaxLength(50);

                entity.Property(e => e.PensionRegistrationNumber)
                    .IsRequired()
                    .HasColumnName("pension_registration_number")
                    .HasMaxLength(50);

                entity.Property(e => e.Personeeli)
                    .IsRequired()
                    .HasColumnName("personeeli")
                    .HasMaxLength(250);

                entity.Property(e => e.Personeelsnr)
                    .IsRequired()
                    .HasColumnName("personeelsnr")
                    .HasMaxLength(20);

                entity.Property(e => e.Plaats)
                    .IsRequired()
                    .HasColumnName("plaats")
                    .HasMaxLength(30);

                entity.Property(e => e.Postcode)
                    .IsRequired()
                    .HasColumnName("postcode")
                    .HasMaxLength(15);

                entity.Property(e => e.Priveemail)
                    .IsRequired()
                    .HasColumnName("priveemail")
                    .HasMaxLength(100);

                entity.Property(e => e.Privefax)
                    .IsRequired()
                    .HasColumnName("privefax")
                    .HasMaxLength(25);

                entity.Property(e => e.Privemobieltel)
                    .IsRequired()
                    .HasColumnName("privemobieltel")
                    .HasMaxLength(25);

                entity.Property(e => e.Privetel1)
                    .IsRequired()
                    .HasColumnName("privetel1")
                    .HasMaxLength(25);

                entity.Property(e => e.Privetel2)
                    .IsRequired()
                    .HasColumnName("privetel2")
                    .HasMaxLength(25);

                entity.Property(e => e.RefAanhefformeel)
                    .IsRequired()
                    .HasColumnName("ref_aanhefformeel")
                    .HasMaxLength(100);

                entity.Property(e => e.RefAanhefinformeel)
                    .IsRequired()
                    .HasColumnName("ref_aanhefinformeel")
                    .HasMaxLength(100);

                entity.Property(e => e.RefAfdeling)
                    .IsRequired()
                    .HasColumnName("ref_afdeling")
                    .HasMaxLength(100);

                entity.Property(e => e.RefBudgethouder)
                    .IsRequired()
                    .HasColumnName("ref_budgethouder")
                    .HasMaxLength(100);

                entity.Property(e => e.RefDebnummer)
                    .IsRequired()
                    .HasColumnName("ref_debnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.RefDynanaam)
                    .IsRequired()
                    .HasColumnName("ref_dynanaam")
                    .HasMaxLength(109);

                entity.Property(e => e.RefKleur).HasColumnName("ref_kleur");

                entity.Property(e => e.RefLocatie)
                    .IsRequired()
                    .HasColumnName("ref_locatie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefPlaats1)
                    .IsRequired()
                    .HasColumnName("ref_plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.RepresentationAllowance)
                    .IsRequired()
                    .HasColumnName("representation_allowance")
                    .HasMaxLength(50);

                entity.Property(e => e.SalaryScaleId).HasColumnName("salary_scale_id");

                entity.Property(e => e.ServiceDate)
                    .HasColumnName("service_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.SocialSecurityNumber)
                    .IsRequired()
                    .HasColumnName("social_security_number")
                    .HasMaxLength(60);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Straat)
                    .IsRequired()
                    .HasColumnName("straat")
                    .HasMaxLength(50);

                entity.Property(e => e.Tasloginnaam)
                    .IsRequired()
                    .HasColumnName("tasloginnaam")
                    .HasMaxLength(100);

                entity.Property(e => e.Taspasshash)
                    .HasColumnName("taspasshash")
                    .HasMaxLength(200);

                entity.Property(e => e.Tasstatus).HasColumnName("tasstatus");

                entity.Property(e => e.Telefoon)
                    .IsRequired()
                    .HasColumnName("telefoon")
                    .HasMaxLength(25);

                entity.Property(e => e.Titel)
                    .IsRequired()
                    .HasColumnName("titel")
                    .HasMaxLength(35);

                entity.Property(e => e.TravelAllowance)
                    .HasColumnName("travel_allowance")
                    .HasColumnType("money");

                entity.Property(e => e.TravelAllowanceTypeId).HasColumnName("travel_allowance_type_id");

                entity.Property(e => e.Tussenvoegsel)
                    .IsRequired()
                    .HasColumnName("tussenvoegsel")
                    .HasMaxLength(10);

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.VacationDays).HasColumnName("vacation_days");

                entity.Property(e => e.Vestigingbekijken).HasColumnName("vestigingbekijken");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Voorletters)
                    .IsRequired()
                    .HasColumnName("voorletters")
                    .HasMaxLength(10);

                entity.Property(e => e.Voornaam)
                    .IsRequired()
                    .HasColumnName("voornaam")
                    .HasMaxLength(30);

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.WorkDistance).HasColumnName("work_distance");

                entity.HasOne(d => d.Afdeling)
                    .WithMany(p => p.Persoon)
                    .HasForeignKey(d => d.Afdelingid)
                    .HasConstraintName("fk_afdeling_afdelingid_persoon");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Persoon)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_persoon");

                entity.HasOne(d => d.Attentie)
                    .WithMany(p => p.Persoon)
                    .HasForeignKey(d => d.Attentieid)
                    .HasConstraintName("fk_attentie_attentieid_persoon");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.PersoonAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_persoon");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.PersoonAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_persoon");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.PersoonAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_persoon");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.PersoonAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_persoon");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.PersoonAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_persoon");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Persoon)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_persoon");

                entity.HasOne(d => d.CollectiveAgreement)
                    .WithMany(p => p.Persoon)
                    .HasForeignKey(d => d.CollectiveAgreementId)
                    .HasConstraintName("fk_collectiveagreement_collective_agreement_id_persoon");

                entity.HasOne(d => d.ContractType)
                    .WithMany(p => p.Persoon)
                    .HasForeignKey(d => d.ContractTypeId)
                    .HasConstraintName("fk_contracttype_contract_type_id_persoon");

                entity.HasOne(d => d.Extraapersoon)
                    .WithMany(p => p.Persoon)
                    .HasForeignKey(d => d.Extraapersoonid)
                    .HasConstraintName("fk_extraapersoon_extraapersoonid_persoon");

                entity.HasOne(d => d.Extrabpersoon)
                    .WithMany(p => p.Persoon)
                    .HasForeignKey(d => d.Extrabpersoonid)
                    .HasConstraintName("fk_extrabpersoon_extrabpersoonid_persoon");

                entity.HasOne(d => d.HighestEducation)
                    .WithMany(p => p.Persoon)
                    .HasForeignKey(d => d.HighestEducationId)
                    .HasConstraintName("fk_highesteducation_highest_education_id_persoon");

                entity.HasOne(d => d.IdIssueCountry)
                    .WithMany(p => p.PersoonIdIssueCountry)
                    .HasForeignKey(d => d.IdIssueCountryId)
                    .HasConstraintName("fk_land_id_issue_country_id_persoon");

                entity.HasOne(d => d.IdType)
                    .WithMany(p => p.Persoon)
                    .HasForeignKey(d => d.IdTypeId)
                    .HasConstraintName("fk_idtype_id_type_id_persoon");

                entity.HasOne(d => d.Land)
                    .WithMany(p => p.PersoonLand)
                    .HasForeignKey(d => d.Landid)
                    .HasConstraintName("fk_land_landid_persoon");

                entity.HasOne(d => d.Language)
                    .WithMany(p => p.Persoon)
                    .HasForeignKey(d => d.LanguageId)
                    .HasConstraintName("fk_kennistaal_language_id_persoon");

                entity.HasOne(d => d.Lokatie)
                    .WithMany(p => p.Persoon)
                    .HasForeignKey(d => d.Lokatieid)
                    .HasConstraintName("fk_locatie_lokatieid_persoon");

                entity.HasOne(d => d.Manager)
                    .WithMany(p => p.InverseManager)
                    .HasForeignKey(d => d.Managerid)
                    .HasConstraintName("fk_persoon_managerid_persoon");

                entity.HasOne(d => d.Nationality)
                    .WithMany(p => p.Persoon)
                    .HasForeignKey(d => d.NationalityId)
                    .HasConstraintName("fk_nationality_nationality_id_persoon");

                entity.HasOne(d => d.OriginCountry)
                    .WithMany(p => p.PersoonOriginCountry)
                    .HasForeignKey(d => d.OriginCountryId)
                    .HasConstraintName("fk_land_origin_country_id_persoon");

                entity.HasOne(d => d.SalaryScale)
                    .WithMany(p => p.Persoon)
                    .HasForeignKey(d => d.SalaryScaleId)
                    .HasConstraintName("fk_salaryscale_salary_scale_id_persoon");

                entity.HasOne(d => d.TravelAllowanceType)
                    .WithMany(p => p.Persoon)
                    .HasForeignKey(d => d.TravelAllowanceTypeId)
                    .HasConstraintName("fk_travelallowancetype_travel_allowance_type_id_persoon");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.PersoonUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_persoon");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.PersoonUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_persoon");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.Persoon)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_persoon");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.PersoonVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_persoon");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.PersoonVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_persoon");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.PersoonVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_persoon");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.PersoonVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_persoon");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.PersoonVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_persoon");
            });

            modelBuilder.Entity<PersoonDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("persoon__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_persoon__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_persoon__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_persoon__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_persoon__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_persoon__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_persoon__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.PersoonDocumentenKaart)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_persoon_kaartid_persoon__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.PersoonDocumentenPersoon)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_persoon__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.PersoonDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_persoon__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.PersoonDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_persoon__documenten");
            });

            modelBuilder.Entity<PersoonEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("persoon__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_persoon__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_persoon__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_persoon__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.PersoonEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_persoon__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.PersoonEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_persoon_kaartid_persoon__emailberichten");
            });

            modelBuilder.Entity<Persoongroep>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("persoongroep");

                entity.HasIndex(e => e.Aanspreekpersoonid)
                    .HasName("idx_persoongroep_aanspreekpersoonid");

                entity.HasIndex(e => e.Afdelingid)
                    .HasName("idx_persoongroep_afdelingid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_persoongroep_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_persoongroep_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_persoongroep_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_persoongroep_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_persoongroep_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_persoongroep_attvrijeopzoek5");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_persoongroep_budgethouderid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_persoongroep_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_persoongroep_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_persoongroep_importid");

                entity.HasIndex(e => e.Lokatieid)
                    .HasName("idx_persoongroep_lokatieid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_persoongroep_naam");

                entity.HasIndex(e => e.RefAfdeling)
                    .HasName("idx_persoongroep_ref_afdeling");

                entity.HasIndex(e => e.RefBudgethouder)
                    .HasName("idx_persoongroep_ref_budgethouder");

                entity.HasIndex(e => e.RefPlaats1)
                    .HasName("idx_persoongroep_ref_plaats1");

                entity.HasIndex(e => e.RefVestiging)
                    .HasName("idx_persoongroep_ref_vestiging");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_persoongroep_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_persoongroep_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_persoongroep_uidwijzig");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_persoongroep_vestigingid");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_persoongroep_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_persoongroep_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_persoongroep_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_persoongroep_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_persoongroep_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_persoongroep_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_persoongroep_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aanspreekpersoonid).HasColumnName("aanspreekpersoonid");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afdelingid).HasColumnName("afdelingid");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diversen)
                    .HasColumnName("diversen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasColumnName("email")
                    .HasMaxLength(100);

                entity.Property(e => e.Fax)
                    .IsRequired()
                    .HasColumnName("fax")
                    .HasMaxLength(25);

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Lokatieid).HasColumnName("lokatieid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(50);

                entity.Property(e => e.Personeeli)
                    .IsRequired()
                    .HasColumnName("personeeli")
                    .HasMaxLength(50);

                entity.Property(e => e.RefAfdeling)
                    .IsRequired()
                    .HasColumnName("ref_afdeling")
                    .HasMaxLength(100);

                entity.Property(e => e.RefBudgethouder)
                    .IsRequired()
                    .HasColumnName("ref_budgethouder")
                    .HasMaxLength(100);

                entity.Property(e => e.RefPlaats1)
                    .IsRequired()
                    .HasColumnName("ref_plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Telefoon)
                    .IsRequired()
                    .HasColumnName("telefoon")
                    .HasMaxLength(25);

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Aanspreekpersoon)
                    .WithMany(p => p.Persoongroep)
                    .HasForeignKey(d => d.Aanspreekpersoonid)
                    .HasConstraintName("fk_persoon_aanspreekpersoonid_persoongroep");

                entity.HasOne(d => d.Afdeling)
                    .WithMany(p => p.Persoongroep)
                    .HasForeignKey(d => d.Afdelingid)
                    .HasConstraintName("fk_afdeling_afdelingid_persoongroep");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Persoongroep)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_persoongroep");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.PersoongroepAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_persoongroep");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.PersoongroepAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_persoongroep");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.PersoongroepAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_persoongroep");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.PersoongroepAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_persoongroep");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.PersoongroepAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_persoongroep");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Persoongroep)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_persoongroep");

                entity.HasOne(d => d.Lokatie)
                    .WithMany(p => p.Persoongroep)
                    .HasForeignKey(d => d.Lokatieid)
                    .HasConstraintName("fk_locatie_lokatieid_persoongroep");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.PersoongroepUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_persoongroep");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.PersoongroepUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_persoongroep");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.Persoongroep)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_persoongroep");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.PersoongroepVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_persoongroep");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.PersoongroepVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_persoongroep");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.PersoongroepVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_persoongroep");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.PersoongroepVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_persoongroep");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.PersoongroepVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_persoongroep");
            });

            modelBuilder.Entity<PersoongroepDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("persoongroep__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_persoongroep__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_persoongroep__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_persoongroep__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_persoongroep__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_persoongroep__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_persoongroep__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.PersoongroepDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_persoongroep_kaartid_persoongroep__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.PersoongroepDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_persoon_persoonid_persoongroep__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.PersoongroepDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_persoongroep__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.PersoongroepDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_persoongroep__documenten");
            });

            modelBuilder.Entity<PersoongroepEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("persoongroep__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_persoongroep__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_persoongroep__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_persoongroep__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.PersoongroepEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_persoongroep__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.PersoongroepEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_persoongroep_kaartid_persoongroep__emailberichten");
            });

            modelBuilder.Entity<PersoongroepLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("persoongroep__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_persoongroep__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_persoongroep__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_persoongroep__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_persoongroep__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_persoongroep__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_persoongroep__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.PersoongroepLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_persoongroep_kaartid_persoongroep__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.PersoongroepLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_persoongroep__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.PersoongroepLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_persoongroep__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.PersoongroepLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_persoongroep__logboek");
            });

            modelBuilder.Entity<PersoongroepMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("persoongroep__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_persoongroep__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_persoongroep__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_persoongroep__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_persoongroep__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_persoongroep__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_persoongroep__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_persoongroep__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_persoongroep__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_persoongroep__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.PersoongroepMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_persoongroep__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.PersoongroepMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_persoongroep_parentid_persoongroep__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.PersoongroepMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_persoongroep__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.PersoongroepMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_persoongroep__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.PersoongroepMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_persoongroep__memo_history");
            });

            modelBuilder.Entity<PersoonIncidentLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("persoon_incident_link");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_persoon_incident_link_importid");

                entity.HasIndex(e => e.Incidentid)
                    .HasName("idx_persoon_incident_link_incidentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_persoon_incident_link_persoonid");

                entity.HasIndex(e => new { e.Persoonid, e.Incidentid })
                    .HasName("uidx_persoon_incident_link_persoonid_incidentid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Incidentid).HasColumnName("incidentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.HasOne(d => d.Incident)
                    .WithMany(p => p.PersoonIncidentLink)
                    .HasForeignKey(d => d.Incidentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_incident_incidentid_persoon_incident_link");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.PersoonIncidentLink)
                    .HasForeignKey(d => d.Persoonid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_persoon_persoonid_persoon_incident_link");
            });

            modelBuilder.Entity<Persoonlink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("persoonlink");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_persoonlink_importid");

                entity.HasIndex(e => e.Persoongroepid)
                    .HasName("idx_persoonlink_persoongroepid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_persoonlink_persoonid");

                entity.HasIndex(e => new { e.Persoongroepid, e.Persoonid })
                    .HasName("uidx_persoonlink_persoongroepid_persoonid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Persoongroepid).HasColumnName("persoongroepid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.HasOne(d => d.Persoongroep)
                    .WithMany(p => p.Persoonlink)
                    .HasForeignKey(d => d.Persoongroepid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_persoongroep_persoongroepid_persoonlink");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Persoonlink)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_persoonlink");
            });

            modelBuilder.Entity<PersoonLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("persoon__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_persoon__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_persoon__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_persoon__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_persoon__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_persoon__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_persoon__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.PersoonLogboekKaart)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_persoon_kaartid_persoon__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.PersoonLogboekPersoon)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_persoon__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.PersoonLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_persoon__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.PersoonLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_persoon__logboek");
            });

            modelBuilder.Entity<PersoonMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("persoon__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_persoon__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_persoon__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_persoon__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_persoon__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_persoon__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_persoon__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_persoon__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_persoon__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_persoon__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.PersoonMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_persoon__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.PersoonMemoHistoryParent)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_persoon_parentid_persoon__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.PersoonMemoHistoryPersoon)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_persoon__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.PersoonMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_persoon__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.PersoonMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_persoon__memo_history");
            });

            modelBuilder.Entity<PersoonOptionalgrid>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("persoon__optionalgrid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_persoon__optionalgrid_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_persoon__optionalgrid_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_persoon__optionalgrid_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_persoon__optionalgrid_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_persoon__optionalgrid_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_persoon__optionalgrid_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_persoon__optionalgrid_parentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_persoon__optionalgrid_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_persoon__optionalgrid_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_persoon__optionalgrid_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_persoon__optionalgrid_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_persoon__optionalgrid_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_persoon__optionalgrid_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_persoon__optionalgrid_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.PersoonOptionalgridAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_persoon__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.PersoonOptionalgridAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_persoon__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.PersoonOptionalgridAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_persoon__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.PersoonOptionalgridAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_persoon__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.PersoonOptionalgridAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_persoon__optionalgrid");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.PersoonOptionalgrid)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_persoon_parentid_persoon__optionalgrid");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.PersoonOptionalgridUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_persoon__optionalgrid");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.PersoonOptionalgridUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_persoon__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.PersoonOptionalgridVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_persoon__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.PersoonOptionalgridVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_persoon__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.PersoonOptionalgridVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_persoon__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.PersoonOptionalgridVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_persoon__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.PersoonOptionalgridVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_persoon__optionalgrid");
            });

            modelBuilder.Entity<PersoonPicture>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("persoon__picture");

                entity.HasIndex(e => e.Cardid)
                    .HasName("idx_persoon__picture_cardid");

                entity.HasIndex(e => e.Pictureid)
                    .HasName("idx_persoon__picture_pictureid");

                entity.HasIndex(e => new { e.Pictureid, e.Cardid })
                    .HasName("uidx_persoon__picture_pictureid_cardid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cardid).HasColumnName("cardid");

                entity.Property(e => e.Isfavourite).HasColumnName("isfavourite");

                entity.Property(e => e.Pictureid).HasColumnName("pictureid");

                entity.Property(e => e.Rank).HasColumnName("rank");

                entity.HasOne(d => d.Card)
                    .WithMany(p => p.PersoonPicture)
                    .HasForeignKey(d => d.Cardid)
                    .HasConstraintName("fk_persoon_cardid_persoon__picture");

                entity.HasOne(d => d.Picture)
                    .WithMany(p => p.PersoonPicture)
                    .HasForeignKey(d => d.Pictureid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_picture_pictureid_persoon__picture");
            });

            modelBuilder.Entity<Picture>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("picture");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_picture_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_picture_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_picture_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_picture_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_picture_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_picture_importid");

                entity.HasIndex(e => e.Sourceid)
                    .HasName("idx_picture_sourceid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_picture_status");

                entity.HasIndex(e => e.Typeid)
                    .HasName("idx_picture_typeid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_picture_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_picture_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_picture_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_picture_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_picture_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_picture_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_picture_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Checksum)
                    .IsRequired()
                    .HasColumnName("checksum")
                    .HasMaxLength(256);

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("ntext");

                entity.Property(e => e.Height).HasColumnName("height");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importkey)
                    .HasColumnName("importkey")
                    .HasMaxLength(250);

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Mimetype)
                    .IsRequired()
                    .HasColumnName("mimetype")
                    .HasMaxLength(256);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(50);

                entity.Property(e => e.Picture1)
                    .HasColumnName("picture")
                    .HasColumnType("image");

                entity.Property(e => e.Sourceid).HasColumnName("sourceid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Thumbnail)
                    .HasColumnName("thumbnail")
                    .HasColumnType("image");

                entity.Property(e => e.ThumbnailAutogenerated).HasColumnName("thumbnail_autogenerated");

                entity.Property(e => e.ThumbnailHeight).HasColumnName("thumbnail_height");

                entity.Property(e => e.ThumbnailMimetype)
                    .IsRequired()
                    .HasColumnName("thumbnail_mimetype")
                    .HasMaxLength(256);

                entity.Property(e => e.ThumbnailWidth).HasColumnName("thumbnail_width");

                entity.Property(e => e.Typeid).HasColumnName("typeid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Width).HasColumnName("width");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.PictureAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_picture");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.PictureAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_picture");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.PictureAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_picture");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.PictureAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_picture");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.PictureAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_picture");

                entity.HasOne(d => d.Source)
                    .WithMany(p => p.Picture)
                    .HasForeignKey(d => d.Sourceid)
                    .HasConstraintName("fk_picturesource_sourceid_picture");

                entity.HasOne(d => d.Type)
                    .WithMany(p => p.Picture)
                    .HasForeignKey(d => d.Typeid)
                    .HasConstraintName("fk_picturetype_typeid_picture");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.PictureUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_picture");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.PictureUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_picture");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.PictureVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_picture");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.PictureVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_picture");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.PictureVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_picture");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.PictureVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_picture");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.PictureVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_picture");
            });

            modelBuilder.Entity<Picturesource>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("picturesource");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_picturesource_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_picturesource_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_picturesource_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Picturetype>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("picturetype");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_picturetype_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_picturetype_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_picturetype_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Planboardgroupstate>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("planboardgroupstate");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_planboardgroupstate_operatorgroupid");

                entity.HasIndex(e => e.Userid)
                    .HasName("idx_planboardgroupstate_userid");

                entity.HasIndex(e => new { e.Operatorgroupid, e.Userid })
                    .HasName("uidx_planboardgroupstate_operatorgroupid_userid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Rank).HasColumnName("rank");

                entity.Property(e => e.Userid).HasColumnName("userid");

                entity.Property(e => e.Visible).HasColumnName("visible");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.Planboardgroupstate)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_planboardgroupstate");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Planboardgroupstate)
                    .HasForeignKey(d => d.Userid)
                    .HasConstraintName("fk_gebruiker_userid_planboardgroupstate");
            });

            modelBuilder.Entity<Planning>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("planning");

                entity.HasIndex(e => e.Einddatum)
                    .HasName("idx_planning_einddatum");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_planning_importid");

                entity.HasIndex(e => e.Ingeplandtotdatum)
                    .HasName("idx_planning_ingeplandtotdatum");

                entity.HasIndex(e => e.Startdatum)
                    .HasName("idx_planning_startdatum");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_planning_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_planning_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantalherhalingen).HasColumnName("aantalherhalingen");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Einddatum)
                    .HasColumnName("einddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Eindtype).HasColumnName("eindtype");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Ingeplandtotdatum)
                    .HasColumnName("ingeplandtotdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Startdatum)
                    .HasColumnName("startdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.PlanningUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_planning");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.PlanningUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_planning");
            });

            modelBuilder.Entity<PlanningMultidate>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("planning_multidate");

                entity.HasIndex(e => e.Date)
                    .HasName("idx_planning_multidate_date");

                entity.HasIndex(e => e.Planningid)
                    .HasName("idx_planning_multidate_planningid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Date)
                    .HasColumnName("date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Planningid).HasColumnName("planningid");

                entity.HasOne(d => d.Planning)
                    .WithMany(p => p.PlanningMultidate)
                    .HasForeignKey(d => d.Planningid)
                    .HasConstraintName("fk_planning_planningid_planning_multidate");
            });

            modelBuilder.Entity<Poort>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("poort");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_poort_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_poort_datwijzig");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_poort_naam");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_poort_objectid");

                entity.HasIndex(e => e.RefObject)
                    .HasName("idx_poort_ref_object");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_poort_status");

                entity.HasIndex(e => e.Typeid)
                    .HasName("idx_poort_typeid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_poort_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_poort_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(30);

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.RefObject)
                    .IsRequired()
                    .HasColumnName("ref_object")
                    .HasMaxLength(60);

                entity.Property(e => e.Richting).HasColumnName("richting");

                entity.Property(e => e.Soort).HasColumnName("soort");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Typeid).HasColumnName("typeid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Poort)
                    .HasForeignKey(d => d.Objectid)
                    .HasConstraintName("fk_object_objectid_poort");

                entity.HasOne(d => d.Type)
                    .WithMany(p => p.Poort)
                    .HasForeignKey(d => d.Typeid)
                    .HasConstraintName("fk_poorttype_typeid_poort");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.PoortUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_poort");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.PoortUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_poort");
            });

            modelBuilder.Entity<PoortDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("poort__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_poort__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_poort__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_poort__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_poort__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_poort__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_poort__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.PoortDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_poort_kaartid_poort__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.PoortDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_poort__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.PoortDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_poort__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.PoortDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_poort__documenten");
            });

            modelBuilder.Entity<PoortEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("poort__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_poort__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_poort__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_poort__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.PoortEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_poort__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.PoortEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_poort_kaartid_poort__emailberichten");
            });

            modelBuilder.Entity<PoortLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("poort__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_poort__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_poort__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_poort__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_poort__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_poort__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_poort__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.PoortLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_poort_kaartid_poort__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.PoortLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_poort__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.PoortLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_poort__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.PoortLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_poort__logboek");
            });

            modelBuilder.Entity<Poorttype>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("poorttype");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_poorttype_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_poorttype_naam");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(30);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Priority>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("priority");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_priority_archief");

                entity.HasIndex(e => e.Line1durationid)
                    .HasName("idx_priority_line1durationid");

                entity.HasIndex(e => e.Line2durationid)
                    .HasName("idx_priority_line2durationid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_priority_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_priority_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Line1durationid).HasColumnName("line1durationid");

                entity.Property(e => e.Line2durationid).HasColumnName("line2durationid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.HasOne(d => d.Line1duration)
                    .WithMany(p => p.PriorityLine1duration)
                    .HasForeignKey(d => d.Line1durationid)
                    .HasConstraintName("fk_doorlooptijd_line1durationid_priority");

                entity.HasOne(d => d.Line2duration)
                    .WithMany(p => p.PriorityLine2duration)
                    .HasForeignKey(d => d.Line2durationid)
                    .HasConstraintName("fk_doorlooptijd_line2durationid_priority");
            });

            modelBuilder.Entity<Prioritylink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("prioritylink");

                entity.HasIndex(e => e.Impactid)
                    .HasName("idx_prioritylink_impactid");

                entity.HasIndex(e => e.Priorityid)
                    .HasName("idx_prioritylink_priorityid");

                entity.HasIndex(e => e.Urgencyid)
                    .HasName("idx_prioritylink_urgencyid");

                entity.HasIndex(e => new { e.Impactid, e.Urgencyid })
                    .HasName("uidx_prioritylink_impactid_urgencyid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Impactid).HasColumnName("impactid");

                entity.Property(e => e.Priorityid).HasColumnName("priorityid");

                entity.Property(e => e.Urgencyid).HasColumnName("urgencyid");

                entity.HasOne(d => d.Impact)
                    .WithMany(p => p.Prioritylink)
                    .HasForeignKey(d => d.Impactid)
                    .HasConstraintName("fk_impact_impactid_prioritylink");

                entity.HasOne(d => d.Priority)
                    .WithMany(p => p.Prioritylink)
                    .HasForeignKey(d => d.Priorityid)
                    .HasConstraintName("fk_priority_priorityid_prioritylink");

                entity.HasOne(d => d.Urgency)
                    .WithMany(p => p.Prioritylink)
                    .HasForeignKey(d => d.Urgencyid)
                    .HasConstraintName("fk_urgency_urgencyid_prioritylink");
            });

            modelBuilder.Entity<Probleem>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("probleem");

                entity.HasIndex(e => e.Aanmaakdatum)
                    .HasName("idx_probleem_aanmaakdatum");

                entity.HasIndex(e => e.Aanmaakdatumbf)
                    .HasName("idx_probleem_aanmaakdatumbf");

                entity.HasIndex(e => e.Actiedoorbfid)
                    .HasName("idx_probleem_actiedoorbfid");

                entity.HasIndex(e => e.Actiedoorid)
                    .HasName("idx_probleem_actiedoorid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_probleem_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_probleem_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_probleem_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_probleem_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_probleem_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_probleem_attvrijeopzoek5");

                entity.HasIndex(e => e.Beheerderbfid)
                    .HasName("idx_probleem_beheerderbfid");

                entity.HasIndex(e => e.Categorieid)
                    .HasName("idx_probleem_categorieid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_probleem_dataanmk");

                entity.HasIndex(e => e.Datumafgemeld)
                    .HasName("idx_probleem_datumafgemeld");

                entity.HasIndex(e => e.Datumafgemeldbf)
                    .HasName("idx_probleem_datumafgemeldbf");

                entity.HasIndex(e => e.Datumgereed)
                    .HasName("idx_probleem_datumgereed");

                entity.HasIndex(e => e.Datumgereedbf)
                    .HasName("idx_probleem_datumgereedbf");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_probleem_datwijzig");

                entity.HasIndex(e => e.Domeinid)
                    .HasName("idx_probleem_domeinid");

                entity.HasIndex(e => e.Domeinprobleemid)
                    .HasName("idx_probleem_domeinprobleemid");

                entity.HasIndex(e => e.Doorlooptijdbfid)
                    .HasName("idx_probleem_doorlooptijdbfid");

                entity.HasIndex(e => e.Doorlooptijdid)
                    .HasName("idx_probleem_doorlooptijdid");

                entity.HasIndex(e => e.Impactbfid)
                    .HasName("idx_probleem_impactbfid");

                entity.HasIndex(e => e.Impactid)
                    .HasName("idx_probleem_impactid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_probleem_importid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_probleem_naam");

                entity.HasIndex(e => e.Oorzaakid)
                    .HasName("idx_probleem_oorzaakid");

                entity.HasIndex(e => e.Operatorgroupbfid)
                    .HasName("idx_probleem_operatorgroupbfid");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_probleem_operatorgroupid");

                entity.HasIndex(e => e.Priorityid)
                    .HasName("idx_probleem_priorityid");

                entity.HasIndex(e => e.Probleemid)
                    .HasName("idx_probleem_probleemid");

                entity.HasIndex(e => e.RefBehandelaar)
                    .HasName("idx_probleem_ref_behandelaar");

                entity.HasIndex(e => e.RefBehandelaarbf)
                    .HasName("idx_probleem_ref_behandelaarbf");

                entity.HasIndex(e => e.RefBeheerder)
                    .HasName("idx_probleem_ref_beheerder");

                entity.HasIndex(e => e.RefBeheerderbf)
                    .HasName("idx_probleem_ref_beheerderbf");

                entity.HasIndex(e => e.RefBestedetijdsgat)
                    .HasName("idx_probleem_ref_bestedetijdsgat");

                entity.HasIndex(e => e.RefBestedetijdverschil)
                    .HasName("idx_probleem_ref_bestedetijdverschil");

                entity.HasIndex(e => e.RefCategorie)
                    .HasName("idx_probleem_ref_categorie");

                entity.HasIndex(e => e.RefDomein)
                    .HasName("idx_probleem_ref_domein");

                entity.HasIndex(e => e.RefEinddatum)
                    .HasName("idx_probleem_ref_einddatum");

                entity.HasIndex(e => e.RefHoofdprobleem)
                    .HasName("idx_probleem_ref_hoofdprobleem");

                entity.HasIndex(e => e.RefImpact)
                    .HasName("idx_probleem_ref_impact");

                entity.HasIndex(e => e.RefImpactbf)
                    .HasName("idx_probleem_ref_impactbf");

                entity.HasIndex(e => e.RefKostengat)
                    .HasName("idx_probleem_ref_kostengat");

                entity.HasIndex(e => e.RefKostenverschil)
                    .HasName("idx_probleem_ref_kostenverschil");

                entity.HasIndex(e => e.RefOorzaak)
                    .HasName("idx_probleem_ref_oorzaak");

                entity.HasIndex(e => e.RefSpecificatie)
                    .HasName("idx_probleem_ref_specificatie");

                entity.HasIndex(e => e.RefStatus)
                    .HasName("idx_probleem_ref_status");

                entity.HasIndex(e => e.RefStatusbf)
                    .HasName("idx_probleem_ref_statusbf");

                entity.HasIndex(e => e.RefTelefoon)
                    .HasName("idx_probleem_ref_telefoon");

                entity.HasIndex(e => e.RefcombiAanmaakdatum)
                    .HasName("idx_probleem_refcombi_aanmaakdatum");

                entity.HasIndex(e => e.RefcombiDatumafgemeld)
                    .HasName("idx_probleem_refcombi_datumafgemeld");

                entity.HasIndex(e => e.RefcombiDatumgereed)
                    .HasName("idx_probleem_refcombi_datumgereed");

                entity.HasIndex(e => e.RefcombiDoorlooptijdid)
                    .HasName("idx_probleem_refcombi_doorlooptijdid");

                entity.HasIndex(e => e.RefcombiStreefdatum)
                    .HasName("idx_probleem_refcombi_streefdatum");

                entity.HasIndex(e => e.Specificatieid)
                    .HasName("idx_probleem_specificatieid");

                entity.HasIndex(e => e.Specificatieprobleemid)
                    .HasName("idx_probleem_specificatieprobleemid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_probleem_status");

                entity.HasIndex(e => e.Statusbfid)
                    .HasName("idx_probleem_statusbfid");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_probleem_statusid");

                entity.HasIndex(e => e.Streefdatum)
                    .HasName("idx_probleem_streefdatum");

                entity.HasIndex(e => e.Streefdatumbf)
                    .HasName("idx_probleem_streefdatumbf");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_probleem_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_probleem_uidwijzig");

                entity.HasIndex(e => e.Urgencyid)
                    .HasName("idx_probleem_urgencyid");

                entity.HasIndex(e => e.Verantwoordelijkeid)
                    .HasName("idx_probleem_verantwoordelijkeid");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_probleem_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_probleem_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_probleem_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_probleem_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_probleem_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_probleem_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_probleem_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aanmaakdatum)
                    .HasColumnName("aanmaakdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Aanmaakdatumbf)
                    .HasColumnName("aanmaakdatumbf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Actie)
                    .HasColumnName("actie")
                    .HasColumnType("ntext");

                entity.Property(e => e.Actiedoorbfid).HasColumnName("actiedoorbfid");

                entity.Property(e => e.Actiedoorid).HasColumnName("actiedoorid");

                entity.Property(e => e.Afgemeld).HasColumnName("afgemeld");

                entity.Property(e => e.Afgemeldbf).HasColumnName("afgemeldbf");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Beheerderbfid).HasColumnName("beheerderbfid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestedetijdmemo)
                    .HasColumnName("bestedetijdmemo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Categorieid).HasColumnName("categorieid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumafgemeld)
                    .HasColumnName("datumafgemeld")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumafgemeldbf)
                    .HasColumnName("datumafgemeldbf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumgereed)
                    .HasColumnName("datumgereed")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumgereedbf)
                    .HasColumnName("datumgereedbf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Deelprobleemvolgnummer).HasColumnName("deelprobleemvolgnummer");

                entity.Property(e => e.Domeinid).HasColumnName("domeinid");

                entity.Property(e => e.Domeinprobleemid).HasColumnName("domeinprobleemid");

                entity.Property(e => e.Doorlooptijdbfid).HasColumnName("doorlooptijdbfid");

                entity.Property(e => e.Doorlooptijdid).HasColumnName("doorlooptijdid");

                entity.Property(e => e.Gereed).HasColumnName("gereed");

                entity.Property(e => e.Gereedbf).HasColumnName("gereedbf");

                entity.Property(e => e.Impactbfid).HasColumnName("impactbfid");

                entity.Property(e => e.Impactid).HasColumnName("impactid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Korteomschrijving)
                    .IsRequired()
                    .HasColumnName("korteomschrijving")
                    .HasMaxLength(80);

                entity.Property(e => e.Korteomschrijvingbf)
                    .IsRequired()
                    .HasColumnName("korteomschrijvingbf")
                    .HasMaxLength(80);

                entity.Property(e => e.Kostenbegroot)
                    .HasColumnName("kostenbegroot")
                    .HasColumnType("money");

                entity.Property(e => e.Kostenmemo)
                    .HasColumnName("kostenmemo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Kostenverwacht)
                    .HasColumnName("kostenverwacht")
                    .HasColumnType("money");

                entity.Property(e => e.Minutendoorlooptijd).HasColumnName("minutendoorlooptijd");

                entity.Property(e => e.Minutendoorlooptijdbf).HasColumnName("minutendoorlooptijdbf");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(30);

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Onkosten)
                    .HasColumnName("onkosten")
                    .HasColumnType("money");

                entity.Property(e => e.Onkostenbf)
                    .HasColumnName("onkostenbf")
                    .HasColumnType("money");

                entity.Property(e => e.Oorzaakid).HasColumnName("oorzaakid");

                entity.Property(e => e.Operatorgroupbfid).HasColumnName("operatorgroupbfid");

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Oplossing)
                    .HasColumnName("oplossing")
                    .HasColumnType("ntext");

                entity.Property(e => e.Priorityid).HasColumnName("priorityid");

                entity.Property(e => e.Probleemid).HasColumnName("probleemid");

                entity.Property(e => e.RefBehandelaar)
                    .IsRequired()
                    .HasColumnName("ref_behandelaar")
                    .HasMaxLength(109);

                entity.Property(e => e.RefBehandelaarbf)
                    .IsRequired()
                    .HasColumnName("ref_behandelaarbf")
                    .HasMaxLength(109);

                entity.Property(e => e.RefBeheerder)
                    .IsRequired()
                    .HasColumnName("ref_beheerder")
                    .HasMaxLength(109);

                entity.Property(e => e.RefBeheerderbf)
                    .IsRequired()
                    .HasColumnName("ref_beheerderbf")
                    .HasMaxLength(109);

                entity.Property(e => e.RefBestedetijdsgat).HasColumnName("ref_bestedetijdsgat");

                entity.Property(e => e.RefBestedetijdverschil).HasColumnName("ref_bestedetijdverschil");

                entity.Property(e => e.RefCategorie)
                    .IsRequired()
                    .HasColumnName("ref_categorie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefDomein)
                    .IsRequired()
                    .HasColumnName("ref_domein")
                    .HasMaxLength(30);

                entity.Property(e => e.RefDomeinprobleem)
                    .IsRequired()
                    .HasColumnName("ref_domeinprobleem")
                    .HasMaxLength(30);

                entity.Property(e => e.RefEinddatum)
                    .HasColumnName("ref_einddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefHoofdprobleem)
                    .IsRequired()
                    .HasColumnName("ref_hoofdprobleem")
                    .HasMaxLength(30);

                entity.Property(e => e.RefImpact)
                    .IsRequired()
                    .HasColumnName("ref_impact")
                    .HasMaxLength(100);

                entity.Property(e => e.RefImpactbf)
                    .IsRequired()
                    .HasColumnName("ref_impactbf")
                    .HasMaxLength(100);

                entity.Property(e => e.RefKostengat)
                    .HasColumnName("ref_kostengat")
                    .HasColumnType("money");

                entity.Property(e => e.RefKostenverschil)
                    .HasColumnName("ref_kostenverschil")
                    .HasColumnType("money");

                entity.Property(e => e.RefMainDesc)
                    .IsRequired()
                    .HasColumnName("ref_main_desc")
                    .HasMaxLength(80);

                entity.Property(e => e.RefOorzaak)
                    .IsRequired()
                    .HasColumnName("ref_oorzaak")
                    .HasMaxLength(100);

                entity.Property(e => e.RefProgresstrail)
                    .HasColumnName("ref_progresstrail")
                    .HasColumnType("ntext");

                entity.Property(e => e.RefSpecificatie)
                    .IsRequired()
                    .HasColumnName("ref_specificatie")
                    .HasMaxLength(30);

                entity.Property(e => e.RefSpecificatieprobleem)
                    .IsRequired()
                    .HasColumnName("ref_specificatieprobleem")
                    .HasMaxLength(30);

                entity.Property(e => e.RefStatus)
                    .IsRequired()
                    .HasColumnName("ref_status")
                    .HasMaxLength(100);

                entity.Property(e => e.RefStatusbf)
                    .IsRequired()
                    .HasColumnName("ref_statusbf")
                    .HasMaxLength(100);

                entity.Property(e => e.RefTelefoon)
                    .IsRequired()
                    .HasColumnName("ref_telefoon")
                    .HasMaxLength(25);

                entity.Property(e => e.RefcombiAanmaakdatum)
                    .HasColumnName("refcombi_aanmaakdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefcombiAfgemeld).HasColumnName("refcombi_afgemeld");

                entity.Property(e => e.RefcombiBehandelaar)
                    .IsRequired()
                    .HasColumnName("refcombi_behandelaar")
                    .HasMaxLength(109);

                entity.Property(e => e.RefcombiBeheerder)
                    .IsRequired()
                    .HasColumnName("refcombi_beheerder")
                    .HasMaxLength(109);

                entity.Property(e => e.RefcombiDatumafgemeld)
                    .HasColumnName("refcombi_datumafgemeld")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefcombiDatumgereed)
                    .HasColumnName("refcombi_datumgereed")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefcombiDoorlooptijdid).HasColumnName("refcombi_doorlooptijdid");

                entity.Property(e => e.RefcombiGereed).HasColumnName("refcombi_gereed");

                entity.Property(e => e.RefcombiImpact)
                    .IsRequired()
                    .HasColumnName("refcombi_impact")
                    .HasMaxLength(100);

                entity.Property(e => e.RefcombiKorteomschrijving)
                    .IsRequired()
                    .HasColumnName("refcombi_korteomschrijving")
                    .HasMaxLength(80);

                entity.Property(e => e.RefcombiMinutendoorlooptijd).HasColumnName("refcombi_minutendoorlooptijd");

                entity.Property(e => e.RefcombiOnkosten)
                    .HasColumnName("refcombi_onkosten")
                    .HasColumnType("money");

                entity.Property(e => e.RefcombiStatus)
                    .IsRequired()
                    .HasColumnName("refcombi_status")
                    .HasMaxLength(100);

                entity.Property(e => e.RefcombiStreefdatum)
                    .HasColumnName("refcombi_streefdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefcombiTijdbesteed).HasColumnName("refcombi_tijdbesteed");

                entity.Property(e => e.Specificatieid).HasColumnName("specificatieid");

                entity.Property(e => e.Specificatieprobleemid).HasColumnName("specificatieprobleemid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusbfid).HasColumnName("statusbfid");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Streefdatum)
                    .HasColumnName("streefdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Streefdatumbf)
                    .HasColumnName("streefdatumbf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Tijdbegroot).HasColumnName("tijdbegroot");

                entity.Property(e => e.Tijdbesteed).HasColumnName("tijdbesteed");

                entity.Property(e => e.Tijdbesteedbf).HasColumnName("tijdbesteedbf");

                entity.Property(e => e.Tijdverwacht).HasColumnName("tijdverwacht");

                entity.Property(e => e.Totalekosten)
                    .HasColumnName("totalekosten")
                    .HasColumnType("money");

                entity.Property(e => e.Totaletijd).HasColumnName("totaletijd");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Urgencyid).HasColumnName("urgencyid");

                entity.Property(e => e.Verantwoordelijkeid).HasColumnName("verantwoordelijkeid");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Actiedoorbf)
                    .WithMany(p => p.ProbleemActiedoorbf)
                    .HasForeignKey(d => d.Actiedoorbfid)
                    .HasConstraintName("fk_actiedoor_actiedoorbfid_probleem");

                entity.HasOne(d => d.Actiedoor)
                    .WithMany(p => p.ProbleemActiedoor)
                    .HasForeignKey(d => d.Actiedoorid)
                    .HasConstraintName("fk_actiedoor_actiedoorid_probleem");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Probleem)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_probleem");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.ProbleemAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_probleem");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.ProbleemAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_probleem");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.ProbleemAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_probleem");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.ProbleemAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_probleem");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.ProbleemAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_probleem");

                entity.HasOne(d => d.Beheerderbf)
                    .WithMany(p => p.ProbleemBeheerderbf)
                    .HasForeignKey(d => d.Beheerderbfid)
                    .HasConstraintName("fk_actiedoor_beheerderbfid_probleem");

                entity.HasOne(d => d.Categorie)
                    .WithMany(p => p.Probleem)
                    .HasForeignKey(d => d.Categorieid)
                    .HasConstraintName("fk_probleem_categorie_categorieid_probleem");

                entity.HasOne(d => d.Domein)
                    .WithMany(p => p.ProbleemDomein)
                    .HasForeignKey(d => d.Domeinid)
                    .HasConstraintName("fk_classificatie_domeinid_probleem");

                entity.HasOne(d => d.Domeinprobleem)
                    .WithMany(p => p.ProbleemDomeinprobleem)
                    .HasForeignKey(d => d.Domeinprobleemid)
                    .HasConstraintName("fk_classificatie_domeinprobleemid_probleem");

                entity.HasOne(d => d.Doorlooptijdbf)
                    .WithMany(p => p.ProbleemDoorlooptijdbf)
                    .HasForeignKey(d => d.Doorlooptijdbfid)
                    .HasConstraintName("fk_probleem_doorlooptijd_doorlooptijdbfid_probleem");

                entity.HasOne(d => d.Doorlooptijd)
                    .WithMany(p => p.ProbleemDoorlooptijdNavigation)
                    .HasForeignKey(d => d.Doorlooptijdid)
                    .HasConstraintName("fk_probleem_doorlooptijd_doorlooptijdid_probleem");

                entity.HasOne(d => d.Impactbf)
                    .WithMany(p => p.ProbleemImpactbf)
                    .HasForeignKey(d => d.Impactbfid)
                    .HasConstraintName("fk_probleem_impact_impactbfid_probleem");

                entity.HasOne(d => d.Impact)
                    .WithMany(p => p.ProbleemImpactNavigation)
                    .HasForeignKey(d => d.Impactid)
                    .HasConstraintName("fk_probleem_impact_impactid_probleem");

                entity.HasOne(d => d.Oorzaak)
                    .WithMany(p => p.Probleem)
                    .HasForeignKey(d => d.Oorzaakid)
                    .HasConstraintName("fk_probleem_oorzaak_oorzaakid_probleem");

                entity.HasOne(d => d.Operatorgroupbf)
                    .WithMany(p => p.ProbleemOperatorgroupbf)
                    .HasForeignKey(d => d.Operatorgroupbfid)
                    .HasConstraintName("fk_actiedoor_operatorgroupbfid_probleem");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.ProbleemOperatorgroup)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_probleem");

                entity.HasOne(d => d.Priority)
                    .WithMany(p => p.Probleem)
                    .HasForeignKey(d => d.Priorityid)
                    .HasConstraintName("fk_problem_priority_priorityid_probleem");

                entity.HasOne(d => d.ProbleemNavigation)
                    .WithMany(p => p.InverseProbleemNavigation)
                    .HasForeignKey(d => d.Probleemid)
                    .HasConstraintName("fk_probleem_probleemid_probleem");

                entity.HasOne(d => d.RefcombiDoorlooptijd)
                    .WithMany(p => p.ProbleemRefcombiDoorlooptijd)
                    .HasForeignKey(d => d.RefcombiDoorlooptijdid)
                    .HasConstraintName("fk_probleem_doorlooptijd_refcombi_doorlooptijdid_probleem");

                entity.HasOne(d => d.Specificatie)
                    .WithMany(p => p.ProbleemSpecificatie)
                    .HasForeignKey(d => d.Specificatieid)
                    .HasConstraintName("fk_classificatie_specificatieid_probleem");

                entity.HasOne(d => d.Specificatieprobleem)
                    .WithMany(p => p.ProbleemSpecificatieprobleem)
                    .HasForeignKey(d => d.Specificatieprobleemid)
                    .HasConstraintName("fk_classificatie_specificatieprobleemid_probleem");

                entity.HasOne(d => d.Statusbf)
                    .WithMany(p => p.ProbleemStatusbf)
                    .HasForeignKey(d => d.Statusbfid)
                    .HasConstraintName("fk_probleem_status_statusbfid_probleem");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.ProbleemStatusNavigation)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_probleem_status_statusid_probleem");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ProbleemUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_probleem");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ProbleemUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_probleem");

                entity.HasOne(d => d.Urgency)
                    .WithMany(p => p.Probleem)
                    .HasForeignKey(d => d.Urgencyid)
                    .HasConstraintName("fk_problem_urgency_urgencyid_probleem");

                entity.HasOne(d => d.Verantwoordelijke)
                    .WithMany(p => p.ProbleemVerantwoordelijke)
                    .HasForeignKey(d => d.Verantwoordelijkeid)
                    .HasConstraintName("fk_actiedoor_verantwoordelijkeid_probleem");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.ProbleemVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_probleem");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.ProbleemVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_probleem");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.ProbleemVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_probleem");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.ProbleemVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_probleem");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.ProbleemVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_probleem");
            });

            modelBuilder.Entity<ProbleemCategorie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("probleem_categorie");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_probleem_categorie_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_probleem_categorie_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_probleem_categorie_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ProbleemDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("probleem__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_probleem__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_probleem__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_probleem__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_probleem__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_probleem__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_probleem__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ProbleemDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_probleem_kaartid_probleem__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ProbleemDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_probleem__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ProbleemDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_probleem__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ProbleemDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_probleem__documenten");
            });

            modelBuilder.Entity<ProbleemDoorlooptijd>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("probleem_doorlooptijd");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_probleem_doorlooptijd_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_probleem_doorlooptijd_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_probleem_doorlooptijd_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantal).HasColumnName("aantal");

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.Type).HasColumnName("type");
            });

            modelBuilder.Entity<ProbleemEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("probleem__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_probleem__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_probleem__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_probleem__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ProbleemEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_probleem__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ProbleemEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_probleem_kaartid_probleem__emailberichten");
            });

            modelBuilder.Entity<ProbleemImpact>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("probleem_impact");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_probleem_impact_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_probleem_impact_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_probleem_impact_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Probleemincidentlink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("probleemincidentlink");

                entity.HasIndex(e => e.Incidentid)
                    .HasName("idx_probleemincidentlink_incidentid");

                entity.HasIndex(e => e.Probleemid)
                    .HasName("idx_probleemincidentlink_probleemid");

                entity.HasIndex(e => new { e.Incidentid, e.Probleemid })
                    .HasName("uidx_probleemincidentlink_incidentid_probleemid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Incidentid).HasColumnName("incidentid");

                entity.Property(e => e.Probleemid).HasColumnName("probleemid");

                entity.HasOne(d => d.Incident)
                    .WithMany(p => p.Probleemincidentlink)
                    .HasForeignKey(d => d.Incidentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_incident_incidentid_probleemincidentlink");

                entity.HasOne(d => d.Probleem)
                    .WithMany(p => p.Probleemincidentlink)
                    .HasForeignKey(d => d.Probleemid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_probleem_probleemid_probleemincidentlink");
            });

            modelBuilder.Entity<ProbleemKennissysteem>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("probleem__kennissysteem");

                entity.HasIndex(e => e.Kennisid)
                    .HasName("idx_probleem__kennissysteem_kennisid");

                entity.HasIndex(e => e.Probleemid)
                    .HasName("idx_probleem__kennissysteem_probleemid");

                entity.HasIndex(e => new { e.Probleemid, e.Kennisid })
                    .HasName("uidx_probleem__kennissysteem_probleemid_kennisid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Kennisid).HasColumnName("kennisid");

                entity.Property(e => e.Probleemid).HasColumnName("probleemid");

                entity.HasOne(d => d.Kennis)
                    .WithMany(p => p.ProbleemKennissysteem)
                    .HasForeignKey(d => d.Kennisid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_kennis_systeem_kennisid_probleem__kennissysteem");

                entity.HasOne(d => d.Probleem)
                    .WithMany(p => p.ProbleemKennissysteem)
                    .HasForeignKey(d => d.Probleemid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_probleem_probleemid_probleem__kennissysteem");
            });

            modelBuilder.Entity<ProbleemLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("probleem__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_probleem__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_probleem__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_probleem__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_probleem__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_probleem__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_probleem__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ProbleemLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_probleem_kaartid_probleem__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ProbleemLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_probleem__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ProbleemLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_probleem__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ProbleemLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_probleem__logboek");
            });

            modelBuilder.Entity<ProbleemMemogeschiedenis>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("probleem__memogeschiedenis");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_probleem__memogeschiedenis_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_probleem__memogeschiedenis_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_probleem__memogeschiedenis_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_probleem__memogeschiedenis_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_probleem__memogeschiedenis_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_probleem__memogeschiedenis_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_probleem__memogeschiedenis_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_probleem__memogeschiedenis_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_probleem__memogeschiedenis_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.ProbleemMemogeschiedenisGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_probleem__memogeschiedenis");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.ProbleemMemogeschiedenis)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_probleem_parentid_probleem__memogeschiedenis");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ProbleemMemogeschiedenis)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_probleem__memogeschiedenis");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ProbleemMemogeschiedenisUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_probleem__memogeschiedenis");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ProbleemMemogeschiedenisUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_probleem__memogeschiedenis");
            });

            modelBuilder.Entity<ProbleemOorzaak>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("probleem_oorzaak");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_probleem_oorzaak_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_probleem_oorzaak_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_probleem_oorzaak_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ProbleemStatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("probleem_status");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_probleem_status_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_probleem_status_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_probleem_status_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ProblemPriority>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("problem_priority");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_problem_priority_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_problem_priority_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_problem_priority_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ProblemUrgency>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("problem_urgency");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_problem_urgency_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_problem_urgency_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_problem_urgency_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ProfacboomProject>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("profacboom_project");

                entity.HasIndex(e => e.Appointmentid)
                    .HasName("idx_profacboom_project_appointmentid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_profacboom_project_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_profacboom_project_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_profacboom_project_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_profacboom_project_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_profacboom_project_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_profacboom_project_attvrijeopzoek5");

                entity.HasIndex(e => e.Behandelaarid)
                    .HasName("idx_profacboom_project_behandelaarid");

                entity.HasIndex(e => e.Categoryid)
                    .HasName("idx_profacboom_project_categoryid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_profacboom_project_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_profacboom_project_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_profacboom_project_importid");

                entity.HasIndex(e => e.Milestoneid)
                    .HasName("idx_profacboom_project_milestoneid");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_profacboom_project_operatorgroupid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_profacboom_project_parentid");

                entity.HasIndex(e => e.Plannedfinaldate)
                    .HasName("idx_profacboom_project_plannedfinaldate");

                entity.HasIndex(e => e.Plannedstartdate)
                    .HasName("idx_profacboom_project_plannedstartdate");

                entity.HasIndex(e => e.Projectbeheerid)
                    .HasName("idx_profacboom_project_projectbeheerid");

                entity.HasIndex(e => e.RefBehandelaar)
                    .HasName("idx_profacboom_project_ref_behandelaar");

                entity.HasIndex(e => e.RefCategorie)
                    .HasName("idx_profacboom_project_ref_categorie");

                entity.HasIndex(e => e.RefFasenaam)
                    .HasName("idx_profacboom_project_ref_fasenaam");

                entity.HasIndex(e => e.RefFasenummer)
                    .HasName("idx_profacboom_project_ref_fasenummer");

                entity.HasIndex(e => e.RefProjectnaam)
                    .HasName("idx_profacboom_project_ref_projectnaam");

                entity.HasIndex(e => e.RefProjectnummer)
                    .HasName("idx_profacboom_project_ref_projectnummer");

                entity.HasIndex(e => e.RefStatus)
                    .HasName("idx_profacboom_project_ref_status");

                entity.HasIndex(e => e.Resolveddate)
                    .HasName("idx_profacboom_project_resolveddate");

                entity.HasIndex(e => e.Skippeddate)
                    .HasName("idx_profacboom_project_skippeddate");

                entity.HasIndex(e => e.Skippedreasonid)
                    .HasName("idx_profacboom_project_skippedreasonid");

                entity.HasIndex(e => e.Starteddate)
                    .HasName("idx_profacboom_project_starteddate");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_profacboom_project_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_profacboom_project_statusid");

                entity.HasIndex(e => e.Subcategoryid)
                    .HasName("idx_profacboom_project_subcategoryid");

                entity.HasIndex(e => e.Typeid)
                    .HasName("idx_profacboom_project_typeid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_profacboom_project_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_profacboom_project_uidwijzig");

                entity.HasIndex(e => e.Versionid)
                    .HasName("idx_profacboom_project_versionid");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_profacboom_project_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_profacboom_project_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_profacboom_project_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_profacboom_project_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_profacboom_project_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_profacboom_project_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_profacboom_project_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Action)
                    .HasColumnName("action")
                    .HasColumnType("ntext");

                entity.Property(e => e.Appointmentid).HasColumnName("appointmentid");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Behandelaarid).HasColumnName("behandelaarid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Briefdescription)
                    .IsRequired()
                    .HasColumnName("briefdescription")
                    .HasMaxLength(80);

                entity.Property(e => e.Categoryid).HasColumnName("categoryid");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasColumnType("ntext");

                entity.Property(e => e.Currentplanexpenses)
                    .HasColumnName("currentplanexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.Currentplantimetaken).HasColumnName("currentplantimetaken");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Doorlooptijdinwerkdagen).HasColumnName("doorlooptijdinwerkdagen");

                entity.Property(e => e.Estimateexpenses)
                    .HasColumnName("estimateexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.Estimatetimetaken).HasColumnName("estimatetimetaken");

                entity.Property(e => e.Expectedexpenses)
                    .HasColumnName("expectedexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.Expectedtimetaken).HasColumnName("expectedtimetaken");

                entity.Property(e => e.Expenses)
                    .HasColumnName("expenses")
                    .HasColumnType("money");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Ismijlpaal).HasColumnName("ismijlpaal");

                entity.Property(e => e.Milestoneid).HasColumnName("milestoneid");

                entity.Property(e => e.Monitored).HasColumnName("monitored");

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasColumnType("ntext");

                entity.Property(e => e.Nummer)
                    .IsRequired()
                    .HasColumnName("nummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Originalplanexpenses)
                    .HasColumnName("originalplanexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.Originalplantimetaken).HasColumnName("originalplantimetaken");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Plannedfinaldate)
                    .HasColumnName("plannedfinaldate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Plannedstartdate)
                    .HasColumnName("plannedstartdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Planningfixed).HasColumnName("planningfixed");

                entity.Property(e => e.Projectbeheerid).HasColumnName("projectbeheerid");

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.Realizedexpenses)
                    .HasColumnName("realizedexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.RefBehandelaar)
                    .IsRequired()
                    .HasColumnName("ref_behandelaar")
                    .HasMaxLength(109);

                entity.Property(e => e.RefCategorie)
                    .IsRequired()
                    .HasColumnName("ref_categorie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefFasenaam)
                    .IsRequired()
                    .HasColumnName("ref_fasenaam")
                    .HasMaxLength(80);

                entity.Property(e => e.RefFasenummer)
                    .IsRequired()
                    .HasColumnName("ref_fasenummer")
                    .HasMaxLength(30);

                entity.Property(e => e.RefProgresstrail)
                    .HasColumnName("ref_progresstrail")
                    .HasColumnType("ntext");

                entity.Property(e => e.RefProjectnaam)
                    .IsRequired()
                    .HasColumnName("ref_projectnaam")
                    .HasMaxLength(80);

                entity.Property(e => e.RefProjectnummer)
                    .IsRequired()
                    .HasColumnName("ref_projectnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.RefStatus)
                    .IsRequired()
                    .HasColumnName("ref_status")
                    .HasMaxLength(100);

                entity.Property(e => e.Request)
                    .HasColumnName("request")
                    .HasColumnType("ntext");

                entity.Property(e => e.Resolved).HasColumnName("resolved");

                entity.Property(e => e.Resolveddate)
                    .HasColumnName("resolveddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Skipped).HasColumnName("skipped");

                entity.Property(e => e.Skippeddate)
                    .HasColumnName("skippeddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Skippedreasonid).HasColumnName("skippedreasonid");

                entity.Property(e => e.Started).HasColumnName("started");

                entity.Property(e => e.Starteddate)
                    .HasColumnName("starteddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Starten).HasColumnName("starten");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Subcategoryid).HasColumnName("subcategoryid");

                entity.Property(e => e.SumRealizedexpenses)
                    .HasColumnName("sum_realizedexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.SumRealizedtime).HasColumnName("sum_realizedtime");

                entity.Property(e => e.SumRemainingexpenses)
                    .HasColumnName("sum_remainingexpenses")
                    .HasColumnType("money");

                entity.Property(e => e.SumRemainingtime).HasColumnName("sum_remainingtime");

                entity.Property(e => e.Timetaken).HasColumnName("timetaken");

                entity.Property(e => e.Typeid).HasColumnName("typeid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Versionid).HasColumnName("versionid");

                entity.Property(e => e.Verwachtedoorlooptijdconstant).HasColumnName("verwachtedoorlooptijdconstant");

                entity.Property(e => e.Verwachtedoorlooptijdeenheid).HasColumnName("verwachtedoorlooptijdeenheid");

                entity.Property(e => e.Verwachtedoorlooptijdteller).HasColumnName("verwachtedoorlooptijdteller");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Appointment)
                    .WithMany(p => p.ProfacboomProject)
                    .HasForeignKey(d => d.Appointmentid)
                    .HasConstraintName("fk_appointment_appointmentid_profacboom_project");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.ProfacboomProject)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_profacboom_project");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.ProfacboomProjectAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_profacboom_project");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.ProfacboomProjectAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_profacboom_project");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.ProfacboomProjectAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_profacboom_project");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.ProfacboomProjectAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_profacboom_project");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.ProfacboomProjectAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_profacboom_project");

                entity.HasOne(d => d.Behandelaar)
                    .WithMany(p => p.ProfacboomProjectBehandelaar)
                    .HasForeignKey(d => d.Behandelaarid)
                    .HasConstraintName("fk_actiedoor_behandelaarid_profacboom_project");

                entity.HasOne(d => d.Category)
                    .WithMany(p => p.ProfacboomProjectCategory)
                    .HasForeignKey(d => d.Categoryid)
                    .HasConstraintName("fk_classificatie_categoryid_profacboom_project");

                entity.HasOne(d => d.Milestone)
                    .WithMany(p => p.ProfacboomProjectMilestone)
                    .HasForeignKey(d => d.Milestoneid)
                    .HasConstraintName("fk_changeversion_milestoneid_profacboom_project");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.ProfacboomProjectOperatorgroup)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_profacboom_project");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.InverseParent)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_profacboom_project_parentid_profacboom_project");

                entity.HasOne(d => d.Projectbeheer)
                    .WithMany(p => p.InverseProjectbeheer)
                    .HasForeignKey(d => d.Projectbeheerid)
                    .HasConstraintName("fk_profacboom_project_projectbeheerid_profacboom_project");

                entity.HasOne(d => d.Skippedreason)
                    .WithMany(p => p.ProfacboomProject)
                    .HasForeignKey(d => d.Skippedreasonid)
                    .HasConstraintName("fk_changeactivity_skippedreason_skippedreasonid_profacboom_project");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.ProfacboomProject)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_projectstatus_statusid_profacboom_project");

                entity.HasOne(d => d.Subcategory)
                    .WithMany(p => p.ProfacboomProjectSubcategory)
                    .HasForeignKey(d => d.Subcategoryid)
                    .HasConstraintName("fk_classificatie_subcategoryid_profacboom_project");

                entity.HasOne(d => d.Type)
                    .WithMany(p => p.ProfacboomProject)
                    .HasForeignKey(d => d.Typeid)
                    .HasConstraintName("fk_projectaanvraagtype_typeid_profacboom_project");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ProfacboomProjectUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_profacboom_project");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ProfacboomProjectUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_profacboom_project");

                entity.HasOne(d => d.Version)
                    .WithMany(p => p.ProfacboomProjectVersion)
                    .HasForeignKey(d => d.Versionid)
                    .HasConstraintName("fk_changeversion_versionid_profacboom_project");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.ProfacboomProjectVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_profacboom_project");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.ProfacboomProjectVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_profacboom_project");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.ProfacboomProjectVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_profacboom_project");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.ProfacboomProjectVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_profacboom_project");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.ProfacboomProjectVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_profacboom_project");
            });

            modelBuilder.Entity<ProfacboomProjectafhankelijkheden>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("profacboom_projectafhankelijkheden");

                entity.HasIndex(e => e.Kopid)
                    .HasName("idx_profacboom_projectafhankelijkheden_kopid");

                entity.HasIndex(e => e.Staartid)
                    .HasName("idx_profacboom_projectafhankelijkheden_staartid");

                entity.HasIndex(e => new { e.Kopid, e.Staartid })
                    .HasName("uidx_profacboom_projectafhankelijkheden_kopid_staartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aansluiten).HasColumnName("aansluiten");

                entity.Property(e => e.Kopid).HasColumnName("kopid");

                entity.Property(e => e.Staartid).HasColumnName("staartid");

                entity.HasOne(d => d.Kop)
                    .WithMany(p => p.ProfacboomProjectafhankelijkhedenKop)
                    .HasForeignKey(d => d.Kopid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_profacboom_project_kopid_profacboom_projectafhankelijkheden");

                entity.HasOne(d => d.Staart)
                    .WithMany(p => p.ProfacboomProjectafhankelijkhedenStaart)
                    .HasForeignKey(d => d.Staartid)
                    .HasConstraintName("fk_profacboom_project_staartid_profacboom_projectafhankelijkheden");
            });

            modelBuilder.Entity<ProfacboomprojectChangeLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("profacboomproject_change_link");

                entity.HasIndex(e => e.Changeid)
                    .HasName("idx_profacboomproject_change_link_changeid");

                entity.HasIndex(e => e.Projectid)
                    .HasName("idx_profacboomproject_change_link_projectid");

                entity.HasIndex(e => new { e.Projectid, e.Changeid })
                    .HasName("uidx_profacboomproject_change_link_projectid_changeid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Changeid).HasColumnName("changeid");

                entity.Property(e => e.Projectid).HasColumnName("projectid");

                entity.HasOne(d => d.Change)
                    .WithMany(p => p.ProfacboomprojectChangeLink)
                    .HasForeignKey(d => d.Changeid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_change_changeid_profacboomproject_change_link");

                entity.HasOne(d => d.Project)
                    .WithMany(p => p.ProfacboomprojectChangeLink)
                    .HasForeignKey(d => d.Projectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_profacboom_project_projectid_profacboomproject_change_link");
            });

            modelBuilder.Entity<ProfacboomProjectDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("profacboom_project__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_profacboom_project__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_profacboom_project__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_profacboom_project__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_profacboom_project__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_profacboom_project__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_profacboom_project__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ProfacboomProjectDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_profacboom_project_kaartid_profacboom_project__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ProfacboomProjectDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_profacboom_project__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ProfacboomProjectDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_profacboom_project__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ProfacboomProjectDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_profacboom_project__documenten");
            });

            modelBuilder.Entity<ProfacboomProjectEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("profacboom_project__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_profacboom_project__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_profacboom_project__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_profacboom_project__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ProfacboomProjectEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_profacboom_project__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ProfacboomProjectEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_profacboom_project_kaartid_profacboom_project__emailberichten");
            });

            modelBuilder.Entity<ProfacboomProjectIncidentLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("profacboom_project_incident_link");

                entity.HasIndex(e => e.Incidentid)
                    .HasName("idx_profacboom_project_incident_link_incidentid");

                entity.HasIndex(e => e.Projectitemid)
                    .HasName("idx_profacboom_project_incident_link_projectitemid");

                entity.HasIndex(e => new { e.Projectitemid, e.Incidentid })
                    .HasName("uidx_profacboom_project_incident_link_projectitemid_incidentid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Incidentid).HasColumnName("incidentid");

                entity.Property(e => e.Projectitemid).HasColumnName("projectitemid");

                entity.HasOne(d => d.Incident)
                    .WithMany(p => p.ProfacboomProjectIncidentLink)
                    .HasForeignKey(d => d.Incidentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_incident_incidentid_profacboom_project_incident_link");

                entity.HasOne(d => d.Projectitem)
                    .WithMany(p => p.ProfacboomProjectIncidentLink)
                    .HasForeignKey(d => d.Projectitemid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_profacboom_project_projectitemid_profacboom_project_incident_link");
            });

            modelBuilder.Entity<ProfacboomProjectLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("profacboom_project__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_profacboom_project__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_profacboom_project__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_profacboom_project__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_profacboom_project__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_profacboom_project__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_profacboom_project__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ProfacboomProjectLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_profacboom_project_kaartid_profacboom_project__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ProfacboomProjectLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_profacboom_project__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ProfacboomProjectLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_profacboom_project__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ProfacboomProjectLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_profacboom_project__logboek");
            });

            modelBuilder.Entity<ProfacboomProjectMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("profacboom_project__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_profacboom_project__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_profacboom_project__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_profacboom_project__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_profacboom_project__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_profacboom_project__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_profacboom_project__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_profacboom_project__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_profacboom_project__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_profacboom_project__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.ProfacboomProjectMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_profacboom_project__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.ProfacboomProjectMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_profacboom_project_parentid_profacboom_project__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ProfacboomProjectMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_profacboom_project__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ProfacboomProjectMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_profacboom_project__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ProfacboomProjectMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_profacboom_project__memo_history");
            });

            modelBuilder.Entity<ProfacboomProjectPersonLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("profacboom_project_person_link");

                entity.HasIndex(e => e.Personid)
                    .HasName("idx_profacboom_project_person_link_personid");

                entity.HasIndex(e => e.Projectitemid)
                    .HasName("idx_profacboom_project_person_link_projectitemid");

                entity.HasIndex(e => new { e.Projectitemid, e.Personid })
                    .HasName("uidx_profacboom_project_person_link_projectitemid_personid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Personid).HasColumnName("personid");

                entity.Property(e => e.Projectitemid).HasColumnName("projectitemid");

                entity.HasOne(d => d.Person)
                    .WithMany(p => p.ProfacboomProjectPersonLink)
                    .HasForeignKey(d => d.Personid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_persoon_personid_profacboom_project_person_link");

                entity.HasOne(d => d.Projectitem)
                    .WithMany(p => p.ProfacboomProjectPersonLink)
                    .HasForeignKey(d => d.Projectitemid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_profacboom_project_projectitemid_profacboom_project_person_link");
            });

            modelBuilder.Entity<ProfacboomProjectProblemLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("profacboom_project_problem_link");

                entity.HasIndex(e => e.Problemid)
                    .HasName("idx_profacboom_project_problem_link_problemid");

                entity.HasIndex(e => e.Projectitemid)
                    .HasName("idx_profacboom_project_problem_link_projectitemid");

                entity.HasIndex(e => new { e.Projectitemid, e.Problemid })
                    .HasName("uidx_profacboom_project_problem_link_projectitemid_problemid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Problemid).HasColumnName("problemid");

                entity.Property(e => e.Projectitemid).HasColumnName("projectitemid");

                entity.HasOne(d => d.Problem)
                    .WithMany(p => p.ProfacboomProjectProblemLink)
                    .HasForeignKey(d => d.Problemid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_probleem_problemid_profacboom_project_problem_link");

                entity.HasOne(d => d.Projectitem)
                    .WithMany(p => p.ProfacboomProjectProblemLink)
                    .HasForeignKey(d => d.Projectitemid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_profacboom_project_projectitemid_profacboom_project_problem_link");
            });

            modelBuilder.Entity<Projectaanvraagtype>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("projectaanvraagtype");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_projectaanvraagtype_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_projectaanvraagtype_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_projectaanvraagtype_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Projectbeheerdocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("projectbeheerdocumenten");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_projectbeheerdocumenten_archiefredenid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_projectbeheerdocumenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_projectbeheerdocumenten_datwijzig");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_projectbeheerdocumenten_naam");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_projectbeheerdocumenten_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_projectbeheerdocumenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_projectbeheerdocumenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Bestandsnaam)
                    .HasColumnName("bestandsnaam")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(50);

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Projectbeheerdocumenten)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_projectbeheerdocumenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ProjectbeheerdocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_projectbeheerdocumenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ProjectbeheerdocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_projectbeheerdocumenten");
            });

            modelBuilder.Entity<ProjectdocumentkoppelProject>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("projectdocumentkoppel_project");

                entity.HasIndex(e => e.Documentid)
                    .HasName("idx_projectdocumentkoppel_project_documentid");

                entity.HasIndex(e => e.Projectbeheerid)
                    .HasName("idx_projectdocumentkoppel_project_projectbeheerid");

                entity.HasIndex(e => new { e.Documentid, e.Projectbeheerid })
                    .HasName("uidx_projectdocumentkoppel_project_documentid_projectbeheerid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Documentid).HasColumnName("documentid");

                entity.Property(e => e.Projectbeheerid).HasColumnName("projectbeheerid");

                entity.HasOne(d => d.Document)
                    .WithMany(p => p.ProjectdocumentkoppelProject)
                    .HasForeignKey(d => d.Documentid)
                    .HasConstraintName("fk_projectbeheerdocumenten_documentid_projectdocumentkoppel_project");

                entity.HasOne(d => d.Projectbeheer)
                    .WithMany(p => p.ProjectdocumentkoppelProject)
                    .HasForeignKey(d => d.Projectbeheerid)
                    .HasConstraintName("fk_profacboom_project_projectbeheerid_projectdocumentkoppel_project");
            });

            modelBuilder.Entity<Projectstatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("projectstatus");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_projectstatus_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_projectstatus_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_projectstatus_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Recht>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("recht");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_recht_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_recht_naam");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Achterkleur).HasColumnName("achterkleur");

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(50);

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.Superv).HasColumnName("superv");

                entity.Property(e => e.Type).HasColumnName("type");

                entity.Property(e => e.Typen)
                    .IsRequired()
                    .HasColumnName("typen")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<Recurringevent>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("recurringevent");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_recurringevent_archiefredenid");

                entity.HasIndex(e => e.Nextrun)
                    .HasName("idx_recurringevent_nextrun");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_recurringevent_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_recurringevent_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_recurringevent_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Active).HasColumnName("active");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Eventname)
                    .IsRequired()
                    .HasColumnName("eventname")
                    .HasMaxLength(100);

                entity.Property(e => e.Interval).HasColumnName("interval");

                entity.Property(e => e.Nextrun)
                    .HasColumnName("nextrun")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Recurringevent)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_recurringevent");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.RecurringeventUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_recurringevent");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.RecurringeventUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_recurringevent");
            });

            modelBuilder.Entity<RecurringeventReportactionLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("recurringevent_reportaction_link");

                entity.HasIndex(e => e.Recurringeventid)
                    .HasName("idx_recurringevent_reportaction_link_recurringeventid");

                entity.HasIndex(e => e.Reportactionid)
                    .HasName("idx_recurringevent_reportaction_link_reportactionid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Recurringeventid).HasColumnName("recurringeventid");

                entity.Property(e => e.Reportactionid).HasColumnName("reportactionid");

                entity.HasOne(d => d.Recurringevent)
                    .WithMany(p => p.RecurringeventReportactionLink)
                    .HasForeignKey(d => d.Recurringeventid)
                    .HasConstraintName("fk_recurringevent_recurringeventid_recurringevent_reportaction_link");

                entity.HasOne(d => d.Reportaction)
                    .WithMany(p => p.RecurringeventReportactionLink)
                    .HasForeignKey(d => d.Reportactionid)
                    .HasConstraintName("fk_reportaction_reportactionid_recurringevent_reportaction_link");
            });

            modelBuilder.Entity<Reparatie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reparatie");

                entity.HasIndex(e => e.Einddatum)
                    .HasName("idx_reparatie_einddatum");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_reparatie_leverancierid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_reparatie_objectid");

                entity.HasIndex(e => e.Startdatum)
                    .HasName("idx_reparatie_startdatum");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasColumnName("code")
                    .HasMaxLength(30);

                entity.Property(e => e.Einddatum)
                    .HasColumnName("einddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kosten)
                    .HasColumnName("kosten")
                    .HasColumnType("money");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Startdatum)
                    .HasColumnName("startdatum")
                    .HasColumnType("datetime");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.Reparatie)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_reparatie");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Reparatie)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_object_objectid_reparatie");
            });

            modelBuilder.Entity<Reportaction>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reportaction");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_reportaction_archiefredenid");

                entity.HasIndex(e => e.Reportid)
                    .HasName("idx_reportaction_reportid");

                entity.HasIndex(e => e.Reportmailuserid)
                    .HasName("idx_reportaction_reportmailuserid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_reportaction_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reportaction_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reportaction_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filetype).HasColumnName("filetype");

                entity.Property(e => e.Locale)
                    .IsRequired()
                    .HasColumnName("locale")
                    .HasMaxLength(10);

                entity.Property(e => e.Message)
                    .HasColumnName("message")
                    .HasColumnType("ntext");

                entity.Property(e => e.Reportid).HasColumnName("reportid");

                entity.Property(e => e.Reportmailindividual).HasColumnName("reportmailindividual");

                entity.Property(e => e.Reportmailuserid).HasColumnName("reportmailuserid");

                entity.Property(e => e.Senderaddress)
                    .HasColumnName("senderaddress")
                    .HasMaxLength(100);

                entity.Property(e => e.Sendmail).HasColumnName("sendmail");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Storefile).HasColumnName("storefile");

                entity.Property(e => e.Subject)
                    .HasColumnName("subject")
                    .HasMaxLength(100);

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Reportaction)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_reportaction");

                entity.HasOne(d => d.Report)
                    .WithMany(p => p.Reportaction)
                    .HasForeignKey(d => d.Reportid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_reportwizard_reportid_reportaction");

                entity.HasOne(d => d.Reportmailuser)
                    .WithMany(p => p.ReportactionReportmailuser)
                    .HasForeignKey(d => d.Reportmailuserid)
                    .HasConstraintName("fk_gebruiker_reportmailuserid_reportaction");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReportactionUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reportaction");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReportactionUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reportaction");
            });

            modelBuilder.Entity<ReportactionDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reportaction__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_reportaction__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_reportaction__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reportaction__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reportaction__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ReportactionDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_reportaction_kaartid_reportaction__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ReportactionDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_reportaction__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReportactionDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reportaction__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReportactionDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reportaction__documenten");
            });

            modelBuilder.Entity<ReportactionEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reportaction__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_reportaction__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_reportaction__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ReportactionEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_reportaction__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ReportactionEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_reportaction_kaartid_reportaction__emailberichten");
            });

            modelBuilder.Entity<ReportactionLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reportaction__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_reportaction__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_reportaction__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reportaction__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reportaction__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ReportactionLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_reportaction_kaartid_reportaction__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ReportactionLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_reportaction__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReportactionLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reportaction__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReportactionLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reportaction__logboek");
            });

            modelBuilder.Entity<ReportactionOperatorLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reportaction_operator_link");

                entity.HasIndex(e => e.Actiedoorid)
                    .HasName("idx_reportaction_operator_link_actiedoorid");

                entity.HasIndex(e => e.Reportactionid)
                    .HasName("idx_reportaction_operator_link_reportactionid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actiedoorid).HasColumnName("actiedoorid");

                entity.Property(e => e.Reportactionid).HasColumnName("reportactionid");

                entity.HasOne(d => d.Actiedoor)
                    .WithMany(p => p.ReportactionOperatorLink)
                    .HasForeignKey(d => d.Actiedoorid)
                    .HasConstraintName("fk_actiedoor_actiedoorid_reportaction_operator_link");

                entity.HasOne(d => d.Reportaction)
                    .WithMany(p => p.ReportactionOperatorLink)
                    .HasForeignKey(d => d.Reportactionid)
                    .HasConstraintName("fk_reportaction_reportactionid_reportaction_operator_link");
            });

            modelBuilder.Entity<ReportactionPersonLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reportaction_person_link");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_reportaction_person_link_persoonid");

                entity.HasIndex(e => e.Reportactionid)
                    .HasName("idx_reportaction_person_link_reportactionid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Reportactionid).HasColumnName("reportactionid");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ReportactionPersonLink)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_reportaction_person_link");

                entity.HasOne(d => d.Reportaction)
                    .WithMany(p => p.ReportactionPersonLink)
                    .HasForeignKey(d => d.Reportactionid)
                    .HasConstraintName("fk_reportaction_reportactionid_reportaction_person_link");
            });

            modelBuilder.Entity<Reportwizard>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reportwizard");

                entity.HasIndex(e => e.Roleid)
                    .HasName("idx_reportwizard_roleid");

                entity.HasIndex(e => e.Selectionid)
                    .HasName("idx_reportwizard_selectionid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_reportwizard_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reportwizard_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reportwizard_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaart)
                    .IsRequired()
                    .HasColumnName("kaart")
                    .HasMaxLength(40);

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(50);

                entity.Property(e => e.Omschr)
                    .HasColumnName("omschr")
                    .HasColumnType("ntext");

                entity.Property(e => e.Roleid).HasColumnName("roleid");

                entity.Property(e => e.Selectionid).HasColumnName("selectionid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Voorwiecode).HasColumnName("voorwiecode");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.ReportwizardRole)
                    .HasForeignKey(d => d.Roleid)
                    .HasConstraintName("fk_gebruiker_roleid_reportwizard");

                entity.HasOne(d => d.Selection)
                    .WithMany(p => p.Reportwizard)
                    .HasForeignKey(d => d.Selectionid)
                    .HasConstraintName("fk_selvast_selectionid_reportwizard");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReportwizardUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reportwizard");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReportwizardUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reportwizard");
            });

            modelBuilder.Entity<Reservation>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation");

                entity.HasIndex(e => e.Archivereasonid)
                    .HasName("idx_reservation_archivereasonid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_reservation_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_reservation_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_reservation_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_reservation_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_reservation_attvrijeopzoek5");

                entity.HasIndex(e => e.Budgetholderid)
                    .HasName("idx_reservation_budgetholderid");

                entity.HasIndex(e => e.Canceldate)
                    .HasName("idx_reservation_canceldate");

                entity.HasIndex(e => e.Cancelreasonid)
                    .HasName("idx_reservation_cancelreasonid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_reservation_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_reservation_datwijzig");

                entity.HasIndex(e => e.Departmentid)
                    .HasName("idx_reservation_departmentid");

                entity.HasIndex(e => e.Eventid)
                    .HasName("idx_reservation_eventid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_reservation_importid");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_reservation_operatorgroupid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_reservation_operatorid");

                entity.HasIndex(e => e.Patternid)
                    .HasName("idx_reservation_patternid");

                entity.HasIndex(e => e.RefEnddate)
                    .HasName("idx_reservation_ref_enddate");

                entity.HasIndex(e => e.RefStartdate)
                    .HasName("idx_reservation_ref_startdate");

                entity.HasIndex(e => e.Rejectdate)
                    .HasName("idx_reservation_rejectdate");

                entity.HasIndex(e => e.Rejectreasonid)
                    .HasName("idx_reservation_rejectreasonid");

                entity.HasIndex(e => e.Requesterbranchid)
                    .HasName("idx_reservation_requesterbranchid");

                entity.HasIndex(e => e.Requesterextraaid)
                    .HasName("idx_reservation_requesterextraaid");

                entity.HasIndex(e => e.Requesterextrabid)
                    .HasName("idx_reservation_requesterextrabid");

                entity.HasIndex(e => e.Requesterid)
                    .HasName("idx_reservation_requesterid");

                entity.HasIndex(e => e.Requestername)
                    .HasName("idx_reservation_requestername");

                entity.HasIndex(e => e.Reservedforbranchid)
                    .HasName("idx_reservation_reservedforbranchid");

                entity.HasIndex(e => e.Reservedforname)
                    .HasName("idx_reservation_reservedforname");

                entity.HasIndex(e => e.Reservedforpersonid)
                    .HasName("idx_reservation_reservedforpersonid");

                entity.HasIndex(e => e.Seriesid)
                    .HasName("idx_reservation_seriesid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_reservation_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_reservation_statusid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reservation_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reservation_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_reservation_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_reservation_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_reservation_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_reservation_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_reservation_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archivereasonid).HasColumnName("archivereasonid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Briefdescription)
                    .HasColumnName("briefdescription")
                    .HasMaxLength(100);

                entity.Property(e => e.Budgetholderid).HasColumnName("budgetholderid");

                entity.Property(e => e.Canceldate)
                    .HasColumnName("canceldate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cancelreasonid).HasColumnName("cancelreasonid");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Departmentid).HasColumnName("departmentid");

                entity.Property(e => e.Eventid).HasColumnName("eventid");

                entity.Property(e => e.Hasfacilities).HasColumnName("hasfacilities");

                entity.Property(e => e.Hightariff).HasColumnName("hightariff");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Markedforreview).HasColumnName("markedforreview");

                entity.Property(e => e.Number)
                    .IsRequired()
                    .HasColumnName("number")
                    .HasMaxLength(30);

                entity.Property(e => e.Numberofpersons).HasColumnName("numberofpersons");

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Patternid).HasColumnName("patternid");

                entity.Property(e => e.RefEnddate)
                    .HasColumnName("ref_enddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefStartdate)
                    .HasColumnName("ref_startdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Rejectdate)
                    .HasColumnName("rejectdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Rejectreasonid).HasColumnName("rejectreasonid");

                entity.Property(e => e.Requesterbranchid).HasColumnName("requesterbranchid");

                entity.Property(e => e.Requesteremail)
                    .HasColumnName("requesteremail")
                    .HasMaxLength(100);

                entity.Property(e => e.Requesterextraaid).HasColumnName("requesterextraaid");

                entity.Property(e => e.Requesterextrabid).HasColumnName("requesterextrabid");

                entity.Property(e => e.Requesterid).HasColumnName("requesterid");

                entity.Property(e => e.Requestername)
                    .HasColumnName("requestername")
                    .HasMaxLength(109);

                entity.Property(e => e.Requestertelephone)
                    .HasColumnName("requestertelephone")
                    .HasMaxLength(100);

                entity.Property(e => e.Reservedforbranchid).HasColumnName("reservedforbranchid");

                entity.Property(e => e.Reservedforemail)
                    .HasColumnName("reservedforemail")
                    .HasMaxLength(100);

                entity.Property(e => e.Reservedforname)
                    .HasColumnName("reservedforname")
                    .HasMaxLength(109);

                entity.Property(e => e.Reservedforpersonid).HasColumnName("reservedforpersonid");

                entity.Property(e => e.Reservedfortelephone)
                    .HasColumnName("reservedfortelephone")
                    .HasMaxLength(100);

                entity.Property(e => e.Sequencenumber).HasColumnName("sequencenumber");

                entity.Property(e => e.Seriesid).HasColumnName("seriesid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Totaldeposit)
                    .HasColumnName("totaldeposit")
                    .HasColumnType("money");

                entity.Property(e => e.Totalfacilitycosts)
                    .HasColumnName("totalfacilitycosts")
                    .HasColumnType("money");

                entity.Property(e => e.Totalreservationcosts)
                    .HasColumnName("totalreservationcosts")
                    .HasColumnType("money");

                entity.Property(e => e.Totalservicecosts)
                    .HasColumnName("totalservicecosts")
                    .HasColumnType("money");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Archivereason)
                    .WithMany(p => p.Reservation)
                    .HasForeignKey(d => d.Archivereasonid)
                    .HasConstraintName("fk_archiefreden_archivereasonid_reservation");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.ReservationAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_reservation");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.ReservationAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_reservation");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.ReservationAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_reservation");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.ReservationAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_reservation");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.ReservationAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_reservation");

                entity.HasOne(d => d.Budgetholder)
                    .WithMany(p => p.Reservation)
                    .HasForeignKey(d => d.Budgetholderid)
                    .HasConstraintName("fk_budgethouder_budgetholderid_reservation");

                entity.HasOne(d => d.Cancelreason)
                    .WithMany(p => p.Reservation)
                    .HasForeignKey(d => d.Cancelreasonid)
                    .HasConstraintName("fk_reservation_cancel_reason_cancelreasonid_reservation");

                entity.HasOne(d => d.Department)
                    .WithMany(p => p.Reservation)
                    .HasForeignKey(d => d.Departmentid)
                    .HasConstraintName("fk_afdeling_departmentid_reservation");

                entity.HasOne(d => d.Event)
                    .WithMany(p => p.Reservation)
                    .HasForeignKey(d => d.Eventid)
                    .HasConstraintName("fk_reservation_event_eventid_reservation");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.ReservationOperatorgroup)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_reservation");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.ReservationOperator)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_reservation");

                entity.HasOne(d => d.Pattern)
                    .WithMany(p => p.Reservation)
                    .HasForeignKey(d => d.Patternid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_reservation_pattern_patternid_reservation");

                entity.HasOne(d => d.Rejectreason)
                    .WithMany(p => p.Reservation)
                    .HasForeignKey(d => d.Rejectreasonid)
                    .HasConstraintName("fk_reservation_reject_reason_rejectreasonid_reservation");

                entity.HasOne(d => d.Requesterbranch)
                    .WithMany(p => p.ReservationRequesterbranch)
                    .HasForeignKey(d => d.Requesterbranchid)
                    .HasConstraintName("fk_vestiging_requesterbranchid_reservation");

                entity.HasOne(d => d.Requesterextraa)
                    .WithMany(p => p.Reservation)
                    .HasForeignKey(d => d.Requesterextraaid)
                    .HasConstraintName("fk_extraapersoon_requesterextraaid_reservation");

                entity.HasOne(d => d.Requesterextrab)
                    .WithMany(p => p.Reservation)
                    .HasForeignKey(d => d.Requesterextrabid)
                    .HasConstraintName("fk_extrabpersoon_requesterextrabid_reservation");

                entity.HasOne(d => d.Requester)
                    .WithMany(p => p.ReservationRequester)
                    .HasForeignKey(d => d.Requesterid)
                    .HasConstraintName("fk_persoon_requesterid_reservation");

                entity.HasOne(d => d.Reservedforbranch)
                    .WithMany(p => p.ReservationReservedforbranch)
                    .HasForeignKey(d => d.Reservedforbranchid)
                    .HasConstraintName("fk_vestiging_reservedforbranchid_reservation");

                entity.HasOne(d => d.Reservedforperson)
                    .WithMany(p => p.ReservationReservedforperson)
                    .HasForeignKey(d => d.Reservedforpersonid)
                    .HasConstraintName("fk_persoon_reservedforpersonid_reservation");

                entity.HasOne(d => d.Series)
                    .WithMany(p => p.Reservation)
                    .HasForeignKey(d => d.Seriesid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_reservation_series_seriesid_reservation");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Reservation)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_reservation_status_statusid_reservation");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReservationUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reservation");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReservationUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reservation");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.ReservationVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_reservation");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.ReservationVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_reservation");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.ReservationVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_reservation");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.ReservationVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_reservation");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.ReservationVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_reservation");
            });

            modelBuilder.Entity<ReservationCancelReason>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation_cancel_reason");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_reservation_cancel_reason_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_reservation_cancel_reason_naam");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ReservationDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_reservation__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_reservation__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reservation__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reservation__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ReservationDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_reservation_kaartid_reservation__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ReservationDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_reservation__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReservationDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reservation__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReservationDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reservation__documenten");
            });

            modelBuilder.Entity<ReservationEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_reservation__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_reservation__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ReservationEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_reservation__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ReservationEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_reservation_kaartid_reservation__emailberichten");
            });

            modelBuilder.Entity<ReservationEvent>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation_event");

                entity.HasIndex(e => e.Budgetholderid)
                    .HasName("idx_reservation_event_budgetholderid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_reservation_event_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_reservation_event_datwijzig");

                entity.HasIndex(e => e.Departmentid)
                    .HasName("idx_reservation_event_departmentid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_reservation_event_importid");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_reservation_event_operatorgroupid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_reservation_event_operatorid");

                entity.HasIndex(e => e.Requesterbranchid)
                    .HasName("idx_reservation_event_requesterbranchid");

                entity.HasIndex(e => e.Requesterextraaid)
                    .HasName("idx_reservation_event_requesterextraaid");

                entity.HasIndex(e => e.Requesterextrabid)
                    .HasName("idx_reservation_event_requesterextrabid");

                entity.HasIndex(e => e.Requesterid)
                    .HasName("idx_reservation_event_requesterid");

                entity.HasIndex(e => e.Requestername)
                    .HasName("idx_reservation_event_requestername");

                entity.HasIndex(e => e.Reservedforbranchid)
                    .HasName("idx_reservation_event_reservedforbranchid");

                entity.HasIndex(e => e.Reservedforname)
                    .HasName("idx_reservation_event_reservedforname");

                entity.HasIndex(e => e.Reservedforpersonid)
                    .HasName("idx_reservation_event_reservedforpersonid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_reservation_event_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_reservation_event_statusid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reservation_event_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reservation_event_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Briefdescription)
                    .HasColumnName("briefdescription")
                    .HasMaxLength(100);

                entity.Property(e => e.Budgetholderid).HasColumnName("budgetholderid");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Departmentid).HasColumnName("departmentid");

                entity.Property(e => e.Enddate)
                    .HasColumnName("enddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Number)
                    .IsRequired()
                    .HasColumnName("number")
                    .HasMaxLength(30);

                entity.Property(e => e.Numberofpersons).HasColumnName("numberofpersons");

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Requesterbranchid).HasColumnName("requesterbranchid");

                entity.Property(e => e.Requesteremail)
                    .HasColumnName("requesteremail")
                    .HasMaxLength(100);

                entity.Property(e => e.Requesterextraaid).HasColumnName("requesterextraaid");

                entity.Property(e => e.Requesterextrabid).HasColumnName("requesterextrabid");

                entity.Property(e => e.Requesterid).HasColumnName("requesterid");

                entity.Property(e => e.Requestername)
                    .HasColumnName("requestername")
                    .HasMaxLength(109);

                entity.Property(e => e.Requestertelephone)
                    .HasColumnName("requestertelephone")
                    .HasMaxLength(100);

                entity.Property(e => e.Reservedforbranchid).HasColumnName("reservedforbranchid");

                entity.Property(e => e.Reservedforemail)
                    .HasColumnName("reservedforemail")
                    .HasMaxLength(100);

                entity.Property(e => e.Reservedforname)
                    .HasColumnName("reservedforname")
                    .HasMaxLength(109);

                entity.Property(e => e.Reservedforpersonid).HasColumnName("reservedforpersonid");

                entity.Property(e => e.Reservedfortelephone)
                    .HasColumnName("reservedfortelephone")
                    .HasMaxLength(100);

                entity.Property(e => e.Sequencenumber).HasColumnName("sequencenumber");

                entity.Property(e => e.Startdate)
                    .HasColumnName("startdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Budgetholder)
                    .WithMany(p => p.ReservationEvent)
                    .HasForeignKey(d => d.Budgetholderid)
                    .HasConstraintName("fk_budgethouder_budgetholderid_reservation_event");

                entity.HasOne(d => d.Department)
                    .WithMany(p => p.ReservationEvent)
                    .HasForeignKey(d => d.Departmentid)
                    .HasConstraintName("fk_afdeling_departmentid_reservation_event");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.ReservationEventOperatorgroup)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_reservation_event");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.ReservationEventOperator)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_reservation_event");

                entity.HasOne(d => d.Requesterbranch)
                    .WithMany(p => p.ReservationEventRequesterbranch)
                    .HasForeignKey(d => d.Requesterbranchid)
                    .HasConstraintName("fk_vestiging_requesterbranchid_reservation_event");

                entity.HasOne(d => d.Requesterextraa)
                    .WithMany(p => p.ReservationEvent)
                    .HasForeignKey(d => d.Requesterextraaid)
                    .HasConstraintName("fk_extraapersoon_requesterextraaid_reservation_event");

                entity.HasOne(d => d.Requesterextrab)
                    .WithMany(p => p.ReservationEvent)
                    .HasForeignKey(d => d.Requesterextrabid)
                    .HasConstraintName("fk_extrabpersoon_requesterextrabid_reservation_event");

                entity.HasOne(d => d.Requester)
                    .WithMany(p => p.ReservationEventRequester)
                    .HasForeignKey(d => d.Requesterid)
                    .HasConstraintName("fk_persoon_requesterid_reservation_event");

                entity.HasOne(d => d.Reservedforbranch)
                    .WithMany(p => p.ReservationEventReservedforbranch)
                    .HasForeignKey(d => d.Reservedforbranchid)
                    .HasConstraintName("fk_vestiging_reservedforbranchid_reservation_event");

                entity.HasOne(d => d.Reservedforperson)
                    .WithMany(p => p.ReservationEventReservedforperson)
                    .HasForeignKey(d => d.Reservedforpersonid)
                    .HasConstraintName("fk_persoon_reservedforpersonid_reservation_event");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.ReservationEvent)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_reservation_status_statusid_reservation_event");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReservationEventUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reservation_event");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReservationEventUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reservation_event");
            });

            modelBuilder.Entity<ReservationEventDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation_event__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_reservation_event__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_reservation_event__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reservation_event__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reservation_event__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ReservationEventDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_reservation_event_kaartid_reservation_event__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ReservationEventDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_reservation_event__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReservationEventDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reservation_event__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReservationEventDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reservation_event__documenten");
            });

            modelBuilder.Entity<ReservationEventEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation_event__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_reservation_event__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_reservation_event__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Kaartid, e.Emailid })
                    .HasName("uidx_reservation_event__emailberichten_kaartid_emailid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ReservationEventEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_reservation_event__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ReservationEventEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_reservation_event_kaartid_reservation_event__emailberichten");
            });

            modelBuilder.Entity<ReservationFacilityFavorites>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation_facility_favorites");

                entity.HasIndex(e => e.Userid)
                    .HasName("idx_reservation_facility_favorites_userid");

                entity.HasIndex(e => new { e.Userid, e.Cardidentifier })
                    .HasName("uidx_reservation_facility_favorites_userid_cardidentifier")
                    .IsUnique();

                entity.HasIndex(e => new { e.Userid, e.Definitionname })
                    .HasName("idx_reservation_facility_favorites_userid_definitionname");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cardidentifier).HasColumnName("cardidentifier");

                entity.Property(e => e.Definitionname)
                    .IsRequired()
                    .HasColumnName("definitionname")
                    .HasMaxLength(255);

                entity.Property(e => e.Userid).HasColumnName("userid");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.ReservationFacilityFavorites)
                    .HasForeignKey(d => d.Userid)
                    .HasConstraintName("fk_gebruiker_userid_reservation_facility_favorites");
            });

            modelBuilder.Entity<ReservationFacilityLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation_facility_link");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_reservation_facility_link_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_reservation_facility_link_datwijzig");

                entity.HasIndex(e => e.Enddate)
                    .HasName("idx_reservation_facility_link_enddate");

                entity.HasIndex(e => e.Enddateblock)
                    .HasName("idx_reservation_facility_link_enddateblock");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_reservation_facility_link_importid");

                entity.HasIndex(e => e.Issuedate)
                    .HasName("idx_reservation_facility_link_issuedate");

                entity.HasIndex(e => e.Locationid)
                    .HasName("idx_reservation_facility_link_locationid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_reservation_facility_link_objectid");

                entity.HasIndex(e => e.Renderdate)
                    .HasName("idx_reservation_facility_link_renderdate");

                entity.HasIndex(e => e.Reservationid)
                    .HasName("idx_reservation_facility_link_reservationid");

                entity.HasIndex(e => e.Startdate)
                    .HasName("idx_reservation_facility_link_startdate");

                entity.HasIndex(e => e.Startdateblock)
                    .HasName("idx_reservation_facility_link_startdateblock");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_reservation_facility_link_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reservation_facility_link_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reservation_facility_link_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Deposit)
                    .HasColumnName("deposit")
                    .HasColumnType("money");

                entity.Property(e => e.Enddate)
                    .HasColumnName("enddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Enddateblock)
                    .HasColumnName("enddateblock")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Issuedate)
                    .HasColumnName("issuedate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Locationid).HasColumnName("locationid");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Renderdate)
                    .HasColumnName("renderdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Reservationid).HasColumnName("reservationid");

                entity.Property(e => e.Sequencenumber).HasColumnName("sequencenumber");

                entity.Property(e => e.Startdate)
                    .HasColumnName("startdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Startdateblock)
                    .HasColumnName("startdateblock")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Totalcosts)
                    .HasColumnName("totalcosts")
                    .HasColumnType("money");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Location)
                    .WithMany(p => p.ReservationFacilityLink)
                    .HasForeignKey(d => d.Locationid)
                    .HasConstraintName("fk_locatie_locationid_reservation_facility_link");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.ReservationFacilityLink)
                    .HasForeignKey(d => d.Objectid)
                    .HasConstraintName("fk_object_objectid_reservation_facility_link");

                entity.HasOne(d => d.Reservation)
                    .WithMany(p => p.ReservationFacilityLink)
                    .HasForeignKey(d => d.Reservationid)
                    .HasConstraintName("fk_reservation_reservationid_reservation_facility_link");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReservationFacilityLinkUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reservation_facility_link");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReservationFacilityLinkUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reservation_facility_link");
            });

            modelBuilder.Entity<ReservationFacilityLinkEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation_facility_link__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_reservation_facility_link__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_reservation_facility_link__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Kaartid, e.Emailid })
                    .HasName("uidx_reservation_facility_link__emailberichten_kaartid_emailid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ReservationFacilityLinkEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_reservation_facility_link__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ReservationFacilityLinkEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_reservation_facility_link_kaartid_reservation_facility_link__emailberichten");
            });

            modelBuilder.Entity<ReservationLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_reservation__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_reservation__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reservation__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reservation__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ReservationLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_reservation_kaartid_reservation__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ReservationLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_reservation__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReservationLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reservation__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReservationLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reservation__logboek");
            });

            modelBuilder.Entity<ReservationMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_reservation__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_reservation__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_reservation__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_reservation__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_reservation__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_reservation__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_reservation__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reservation__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reservation__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.ReservationMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_reservation__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.ReservationMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_reservation_parentid_reservation__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ReservationMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_reservation__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReservationMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reservation__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReservationMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reservation__memo_history");
            });

            modelBuilder.Entity<ReservationPattern>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation_pattern");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_reservation_pattern_importid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Friday).HasColumnName("friday");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Interval).HasColumnName("interval");

                entity.Property(e => e.Monday).HasColumnName("monday");

                entity.Property(e => e.Monthlyusesdaynumber).HasColumnName("monthlyusesdaynumber");

                entity.Property(e => e.Period)
                    .IsRequired()
                    .HasColumnName("period")
                    .HasMaxLength(20);

                entity.Property(e => e.Saturday).HasColumnName("saturday");

                entity.Property(e => e.Sunday).HasColumnName("sunday");

                entity.Property(e => e.Thursday).HasColumnName("thursday");

                entity.Property(e => e.Tuesday).HasColumnName("tuesday");

                entity.Property(e => e.Wednesday).HasColumnName("wednesday");
            });

            modelBuilder.Entity<ReservationPersonLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation_person_link");

                entity.HasIndex(e => e.Personid)
                    .HasName("idx_reservation_person_link_personid");

                entity.HasIndex(e => e.Reservationid)
                    .HasName("idx_reservation_person_link_reservationid");

                entity.HasIndex(e => new { e.Reservationid, e.Personid })
                    .HasName("uidx_reservation_person_link_reservationid_personid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Personid).HasColumnName("personid");

                entity.Property(e => e.Reservationid).HasColumnName("reservationid");

                entity.HasOne(d => d.Person)
                    .WithMany(p => p.ReservationPersonLink)
                    .HasForeignKey(d => d.Personid)
                    .HasConstraintName("fk_persoon_personid_reservation_person_link");

                entity.HasOne(d => d.Reservation)
                    .WithMany(p => p.ReservationPersonLink)
                    .HasForeignKey(d => d.Reservationid)
                    .HasConstraintName("fk_reservation_reservationid_reservation_person_link");
            });

            modelBuilder.Entity<ReservationRejectReason>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation_reject_reason");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_reservation_reject_reason_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_reservation_reject_reason_naam");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ReservationSeries>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation_series");

                entity.HasIndex(e => e.Enddate)
                    .HasName("idx_reservation_series_enddate");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_reservation_series_importid");

                entity.HasIndex(e => e.Startdate)
                    .HasName("idx_reservation_series_startdate");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Enddate)
                    .HasColumnName("enddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Startdate)
                    .HasColumnName("startdate")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<ReservationServiceLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation_service_link");

                entity.HasIndex(e => e.Appointmentid)
                    .HasName("idx_reservation_service_link_appointmentid");

                entity.HasIndex(e => e.Closed)
                    .HasName("idx_reservation_service_link_closed");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_reservation_service_link_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_reservation_service_link_datwijzig");

                entity.HasIndex(e => e.Deliverytime)
                    .HasName("idx_reservation_service_link_deliverytime");

                entity.HasIndex(e => e.Deliverytimetype)
                    .HasName("idx_reservation_service_link_deliverytimetype");

                entity.HasIndex(e => e.Exceptionalservice)
                    .HasName("idx_reservation_service_link_exceptionalservice");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_reservation_service_link_importid");

                entity.HasIndex(e => e.Locationid)
                    .HasName("idx_reservation_service_link_locationid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_reservation_service_link_operatorid");

                entity.HasIndex(e => e.Reservationid)
                    .HasName("idx_reservation_service_link_reservationid");

                entity.HasIndex(e => e.Reservedlocationid)
                    .HasName("idx_reservation_service_link_reservedlocationid");

                entity.HasIndex(e => e.Reservedobjectid)
                    .HasName("idx_reservation_service_link_reservedobjectid");

                entity.HasIndex(e => e.Serviceid)
                    .HasName("idx_reservation_service_link_serviceid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_reservation_service_link_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reservation_service_link_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reservation_service_link_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Amount).HasColumnName("amount");

                entity.Property(e => e.Appointmentid).HasColumnName("appointmentid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Closed).HasColumnName("closed");

                entity.Property(e => e.Closeddate)
                    .HasColumnName("closeddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Deliverytime)
                    .HasColumnName("deliverytime")
                    .HasColumnType("datetime");

                entity.Property(e => e.Deliverytimetype).HasColumnName("deliverytimetype");

                entity.Property(e => e.Exceptionalservice).HasColumnName("exceptionalservice");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Locationid).HasColumnName("locationid");

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasColumnType("ntext");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Reservationid).HasColumnName("reservationid");

                entity.Property(e => e.Reservedlocationid).HasColumnName("reservedlocationid");

                entity.Property(e => e.Reservedobjectid).HasColumnName("reservedobjectid");

                entity.Property(e => e.Sequencenumber).HasColumnName("sequencenumber");

                entity.Property(e => e.Serviceid).HasColumnName("serviceid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Totalcosts)
                    .HasColumnName("totalcosts")
                    .HasColumnType("money");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Appointment)
                    .WithMany(p => p.ReservationServiceLink)
                    .HasForeignKey(d => d.Appointmentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_appointment_appointmentid_reservation_service_link");

                entity.HasOne(d => d.Location)
                    .WithMany(p => p.ReservationServiceLink)
                    .HasForeignKey(d => d.Locationid)
                    .HasConstraintName("fk_locatie_locationid_reservation_service_link");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.ReservationServiceLink)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_reservation_service_link");

                entity.HasOne(d => d.Reservation)
                    .WithMany(p => p.ReservationServiceLink)
                    .HasForeignKey(d => d.Reservationid)
                    .HasConstraintName("fk_reservation_reservationid_reservation_service_link");

                entity.HasOne(d => d.Reservedlocation)
                    .WithMany(p => p.ReservationServiceLinkReservedlocation)
                    .HasForeignKey(d => d.Reservedlocationid)
                    .HasConstraintName("fk_reservation_facility_link_reservedlocationid_reservation_service_link");

                entity.HasOne(d => d.Reservedobject)
                    .WithMany(p => p.ReservationServiceLinkReservedobject)
                    .HasForeignKey(d => d.Reservedobjectid)
                    .HasConstraintName("fk_reservation_facility_link_reservedobjectid_reservation_service_link");

                entity.HasOne(d => d.Service)
                    .WithMany(p => p.ReservationServiceLink)
                    .HasForeignKey(d => d.Serviceid)
                    .HasConstraintName("fk_dnodienst_serviceid_reservation_service_link");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReservationServiceLinkUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reservation_service_link");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReservationServiceLinkUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reservation_service_link");
            });

            modelBuilder.Entity<ReservationServiceLinkEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation_service_link__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_reservation_service_link__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_reservation_service_link__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Kaartid, e.Emailid })
                    .HasName("uidx_reservation_service_link__emailberichten_kaartid_emailid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ReservationServiceLinkEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_reservation_service_link__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ReservationServiceLinkEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_reservation_service_link_kaartid_reservation_service_link__emailberichten");
            });

            modelBuilder.Entity<ReservationStatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation_status");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_reservation_status_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_reservation_status_naam");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ReservationVisitorLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservation_visitor_link");

                entity.HasIndex(e => e.Reservationid)
                    .HasName("idx_reservation_visitor_link_reservationid");

                entity.HasIndex(e => e.Visitorid)
                    .HasName("idx_reservation_visitor_link_visitorid");

                entity.HasIndex(e => new { e.Reservationid, e.Visitorid })
                    .HasName("uidx_reservation_visitor_link_reservationid_visitorid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Reservationid).HasColumnName("reservationid");

                entity.Property(e => e.Visitorid).HasColumnName("visitorid");

                entity.HasOne(d => d.Reservation)
                    .WithMany(p => p.ReservationVisitorLink)
                    .HasForeignKey(d => d.Reservationid)
                    .HasConstraintName("fk_reservation_reservationid_reservation_visitor_link");

                entity.HasOne(d => d.Visitor)
                    .WithMany(p => p.ReservationVisitorLink)
                    .HasForeignKey(d => d.Visitorid)
                    .HasConstraintName("fk_bezoeker_visitorid_reservation_visitor_link");
            });

            modelBuilder.Entity<Reservering>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservering");

                entity.HasIndex(e => e.Aanmelderafdelingid)
                    .HasName("idx_reservering_aanmelderafdelingid");

                entity.HasIndex(e => e.Aanmelderbudgethouderid)
                    .HasName("idx_reservering_aanmelderbudgethouderid");

                entity.HasIndex(e => e.Aanmelderlokatieid)
                    .HasName("idx_reservering_aanmelderlokatieid");

                entity.HasIndex(e => e.Aanmeldervestigingid)
                    .HasName("idx_reservering_aanmeldervestigingid");

                entity.HasIndex(e => e.Annuleerdatum)
                    .HasName("idx_reservering_annuleerdatum");

                entity.HasIndex(e => e.Annuleerredenid)
                    .HasName("idx_reservering_annuleerredenid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_reservering_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_reservering_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_reservering_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_reservering_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_reservering_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_reservering_attvrijeopzoek5");

                entity.HasIndex(e => e.Beheerderid)
                    .HasName("idx_reservering_beheerderid");

                entity.HasIndex(e => e.Categorieid)
                    .HasName("idx_reservering_categorieid");

                entity.HasIndex(e => e.Einddatum)
                    .HasName("idx_reservering_einddatum");

                entity.HasIndex(e => e.Einddatumgepland)
                    .HasName("idx_reservering_einddatumgepland");

                entity.HasIndex(e => e.Einddatumgeplandblok)
                    .HasName("idx_reservering_einddatumgeplandblok");

                entity.HasIndex(e => e.Extraaid)
                    .HasName("idx_reservering_extraaid");

                entity.HasIndex(e => e.Extraapersoonid)
                    .HasName("idx_reservering_extraapersoonid");

                entity.HasIndex(e => e.Extrabid)
                    .HasName("idx_reservering_extrabid");

                entity.HasIndex(e => e.Extrabpersoonid)
                    .HasName("idx_reservering_extrabpersoonid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_reservering_importid");

                entity.HasIndex(e => e.Optieafwijsredenid)
                    .HasName("idx_reservering_optieafwijsredenid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_reservering_persoonid");

                entity.HasIndex(e => e.RmSeriesid)
                    .HasName("idx_reservering_rm_seriesid");

                entity.HasIndex(e => e.Startdatum)
                    .HasName("idx_reservering_startdatum");

                entity.HasIndex(e => e.Startdatumgepland)
                    .HasName("idx_reservering_startdatumgepland");

                entity.HasIndex(e => e.Startdatumgeplandblok)
                    .HasName("idx_reservering_startdatumgeplandblok");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_reservering_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_reservering_statusid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reservering_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reservering_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_reservering_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_reservering_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_reservering_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_reservering_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_reservering_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aanmelderafdelingid).HasColumnName("aanmelderafdelingid");

                entity.Property(e => e.Aanmelderbudgethouderid).HasColumnName("aanmelderbudgethouderid");

                entity.Property(e => e.Aanmelderemail)
                    .IsRequired()
                    .HasColumnName("aanmelderemail")
                    .HasMaxLength(100);

                entity.Property(e => e.Aanmelderlokatieid).HasColumnName("aanmelderlokatieid");

                entity.Property(e => e.Aanmeldernaam)
                    .IsRequired()
                    .HasColumnName("aanmeldernaam")
                    .HasMaxLength(109);

                entity.Property(e => e.Aanmelderplaats1)
                    .HasColumnName("aanmelderplaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.Aanmeldertelefoon)
                    .HasColumnName("aanmeldertelefoon")
                    .HasMaxLength(25);

                entity.Property(e => e.Aanmeldervestiging)
                    .HasColumnName("aanmeldervestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.Aanmeldervestigingid).HasColumnName("aanmeldervestigingid");

                entity.Property(e => e.Aantalpersonen).HasColumnName("aantalpersonen");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Actie)
                    .HasColumnName("actie")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afsprakenlevering)
                    .HasColumnName("afsprakenlevering")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afsprakenteruggave)
                    .HasColumnName("afsprakenteruggave")
                    .HasColumnType("ntext");

                entity.Property(e => e.Annuleerdatum)
                    .HasColumnName("annuleerdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Annuleerredenid).HasColumnName("annuleerredenid");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Beheerderid).HasColumnName("beheerderid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Betaald).HasColumnName("betaald");

                entity.Property(e => e.Borg)
                    .HasColumnName("borg")
                    .HasColumnType("money");

                entity.Property(e => e.Borgbetaald).HasColumnName("borgbetaald");

                entity.Property(e => e.Borgteruggegeven).HasColumnName("borgteruggegeven");

                entity.Property(e => e.Categorieid).HasColumnName("categorieid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diversen)
                    .HasColumnName("diversen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Einddatum)
                    .HasColumnName("einddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Einddatumgepland)
                    .HasColumnName("einddatumgepland")
                    .HasColumnType("datetime");

                entity.Property(e => e.Einddatumgeplandblok)
                    .HasColumnName("einddatumgeplandblok")
                    .HasColumnType("datetime");

                entity.Property(e => e.Extraaid).HasColumnName("extraaid");

                entity.Property(e => e.Extraapersoonid).HasColumnName("extraapersoonid");

                entity.Property(e => e.Extrabid).HasColumnName("extrabid");

                entity.Property(e => e.Extrabpersoonid).HasColumnName("extrabpersoonid");

                entity.Property(e => e.Extrakostengepland)
                    .HasColumnName("extrakostengepland")
                    .HasColumnType("money");

                entity.Property(e => e.Extrakostenwerkelijk)
                    .HasColumnName("extrakostenwerkelijk")
                    .HasColumnType("money");

                entity.Property(e => e.Gefactureerd).HasColumnName("gefactureerd");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Korteomschrijving)
                    .IsRequired()
                    .HasColumnName("korteomschrijving")
                    .HasMaxLength(80);

                entity.Property(e => e.Kortinggepland)
                    .HasColumnName("kortinggepland")
                    .HasColumnType("money");

                entity.Property(e => e.Kortingwerkelijk)
                    .HasColumnName("kortingwerkelijk")
                    .HasColumnType("money");

                entity.Property(e => e.Kostengepland)
                    .HasColumnName("kostengepland")
                    .HasColumnType("money");

                entity.Property(e => e.Kostenwerkelijk)
                    .HasColumnName("kostenwerkelijk")
                    .HasColumnType("money");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(30);

                entity.Property(e => e.Opmerkingen)
                    .HasColumnName("opmerkingen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Optieafwijsredenid).HasColumnName("optieafwijsredenid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.RefAfdeling)
                    .IsRequired()
                    .HasColumnName("ref_afdeling")
                    .HasMaxLength(100);

                entity.Property(e => e.RefBeheerder)
                    .IsRequired()
                    .HasColumnName("ref_beheerder")
                    .HasMaxLength(109);

                entity.Property(e => e.RefBudgethouder)
                    .IsRequired()
                    .HasColumnName("ref_budgethouder")
                    .HasMaxLength(100);

                entity.Property(e => e.RefCategorie)
                    .IsRequired()
                    .HasColumnName("ref_categorie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefPersoneelsnr)
                    .IsRequired()
                    .HasColumnName("ref_personeelsnr")
                    .HasMaxLength(20);

                entity.Property(e => e.RefStatus)
                    .IsRequired()
                    .HasColumnName("ref_status")
                    .HasMaxLength(100);

                entity.Property(e => e.RmSeriesid).HasColumnName("rm_seriesid");

                entity.Property(e => e.Startdatum)
                    .HasColumnName("startdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Startdatumgepland)
                    .HasColumnName("startdatumgepland")
                    .HasColumnType("datetime");

                entity.Property(e => e.Startdatumgeplandblok)
                    .HasColumnName("startdatumgeplandblok")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Uitnaam).HasColumnName("uitnaam");

                entity.Property(e => e.Uitnaamemail)
                    .IsRequired()
                    .HasColumnName("uitnaamemail")
                    .HasMaxLength(100);

                entity.Property(e => e.Uitnaamnaam)
                    .IsRequired()
                    .HasColumnName("uitnaamnaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Uitnaamspecificatie)
                    .IsRequired()
                    .HasColumnName("uitnaamspecificatie")
                    .HasMaxLength(50);

                entity.Property(e => e.Uitnaamtelefoon)
                    .IsRequired()
                    .HasColumnName("uitnaamtelefoon")
                    .HasMaxLength(25);

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Aanmelderafdeling)
                    .WithMany(p => p.Reservering)
                    .HasForeignKey(d => d.Aanmelderafdelingid)
                    .HasConstraintName("fk_afdeling_aanmelderafdelingid_reservering");

                entity.HasOne(d => d.Aanmelderbudgethouder)
                    .WithMany(p => p.Reservering)
                    .HasForeignKey(d => d.Aanmelderbudgethouderid)
                    .HasConstraintName("fk_budgethouder_aanmelderbudgethouderid_reservering");

                entity.HasOne(d => d.Aanmelderlokatie)
                    .WithMany(p => p.Reservering)
                    .HasForeignKey(d => d.Aanmelderlokatieid)
                    .HasConstraintName("fk_locatie_aanmelderlokatieid_reservering");

                entity.HasOne(d => d.AanmeldervestigingNavigation)
                    .WithMany(p => p.Reservering)
                    .HasForeignKey(d => d.Aanmeldervestigingid)
                    .HasConstraintName("fk_vestiging_aanmeldervestigingid_reservering");

                entity.HasOne(d => d.Annuleerreden)
                    .WithMany(p => p.Reservering)
                    .HasForeignKey(d => d.Annuleerredenid)
                    .HasConstraintName("fk_reserveringannuleerreden_annuleerredenid_reservering");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Reservering)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_reservering");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.ReserveringAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_reservering");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.ReserveringAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_reservering");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.ReserveringAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_reservering");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.ReserveringAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_reservering");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.ReserveringAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_reservering");

                entity.HasOne(d => d.Beheerder)
                    .WithMany(p => p.Reservering)
                    .HasForeignKey(d => d.Beheerderid)
                    .HasConstraintName("fk_actiedoor_beheerderid_reservering");

                entity.HasOne(d => d.Categorie)
                    .WithMany(p => p.Reservering)
                    .HasForeignKey(d => d.Categorieid)
                    .HasConstraintName("fk_verhuurcategorie_categorieid_reservering");

                entity.HasOne(d => d.Extraa)
                    .WithMany(p => p.Reservering)
                    .HasForeignKey(d => d.Extraaid)
                    .HasConstraintName("fk_extraa_extraaid_reservering");

                entity.HasOne(d => d.Extraapersoon)
                    .WithMany(p => p.Reservering)
                    .HasForeignKey(d => d.Extraapersoonid)
                    .HasConstraintName("fk_extraapersoon_extraapersoonid_reservering");

                entity.HasOne(d => d.Extrab)
                    .WithMany(p => p.Reservering)
                    .HasForeignKey(d => d.Extrabid)
                    .HasConstraintName("fk_extrab_extrabid_reservering");

                entity.HasOne(d => d.Extrabpersoon)
                    .WithMany(p => p.Reservering)
                    .HasForeignKey(d => d.Extrabpersoonid)
                    .HasConstraintName("fk_extrabpersoon_extrabpersoonid_reservering");

                entity.HasOne(d => d.Optieafwijsreden)
                    .WithMany(p => p.Reservering)
                    .HasForeignKey(d => d.Optieafwijsredenid)
                    .HasConstraintName("fk_reserveringoptieafwijsreden_optieafwijsredenid_reservering");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Reservering)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_reservering");

                entity.HasOne(d => d.RmSeries)
                    .WithMany(p => p.Reservering)
                    .HasForeignKey(d => d.RmSeriesid)
                    .HasConstraintName("fk_rm_series_rm_seriesid_reservering");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Reservering)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_verhuurstatus_statusid_reservering");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReserveringUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reservering");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReserveringUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reservering");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.ReserveringVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_reservering");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.ReserveringVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_reservering");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.ReserveringVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_reservering");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.ReserveringVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_reservering");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.ReserveringVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_reservering");
            });

            modelBuilder.Entity<Reserveringannuleerreden>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reserveringannuleerreden");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_reserveringannuleerreden_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_reserveringannuleerreden_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_reserveringannuleerreden_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ReserveringBezoekerLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservering_bezoeker_link");

                entity.HasIndex(e => e.Bezoekerid)
                    .HasName("idx_reservering_bezoeker_link_bezoekerid");

                entity.HasIndex(e => e.Reserveringid)
                    .HasName("idx_reservering_bezoeker_link_reserveringid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bezoekerid).HasColumnName("bezoekerid");

                entity.Property(e => e.Reserveringid).HasColumnName("reserveringid");

                entity.HasOne(d => d.Bezoeker)
                    .WithMany(p => p.ReserveringBezoekerLink)
                    .HasForeignKey(d => d.Bezoekerid)
                    .HasConstraintName("fk_bezoeker_bezoekerid_reservering_bezoeker_link");

                entity.HasOne(d => d.Reservering)
                    .WithMany(p => p.ReserveringBezoekerLink)
                    .HasForeignKey(d => d.Reserveringid)
                    .HasConstraintName("fk_reservering_reserveringid_reservering_bezoeker_link");
            });

            modelBuilder.Entity<ReserveringDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservering__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_reservering__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_reservering__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reservering__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reservering__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ReserveringDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_reservering_kaartid_reservering__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ReserveringDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_reservering__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReserveringDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reservering__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReserveringDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reservering__documenten");
            });

            modelBuilder.Entity<ReserveringEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservering__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_reservering__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_reservering__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ReserveringEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_reservering__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ReserveringEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_reservering_kaartid_reservering__emailberichten");
            });

            modelBuilder.Entity<ReserveringLocatieLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservering_locatie_link");

                entity.HasIndex(e => e.Einddatum)
                    .HasName("idx_reservering_locatie_link_einddatum");

                entity.HasIndex(e => e.Einddatumgepland)
                    .HasName("idx_reservering_locatie_link_einddatumgepland");

                entity.HasIndex(e => e.Einddatumgeplandblok)
                    .HasName("idx_reservering_locatie_link_einddatumgeplandblok");

                entity.HasIndex(e => e.Locatieid)
                    .HasName("idx_reservering_locatie_link_locatieid");

                entity.HasIndex(e => e.Reserveringid)
                    .HasName("idx_reservering_locatie_link_reserveringid");

                entity.HasIndex(e => e.Startdatum)
                    .HasName("idx_reservering_locatie_link_startdatum");

                entity.HasIndex(e => e.Startdatumgepland)
                    .HasName("idx_reservering_locatie_link_startdatumgepland");

                entity.HasIndex(e => e.Startdatumgeplandblok)
                    .HasName("idx_reservering_locatie_link_startdatumgeplandblok");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_reservering_locatie_link_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reservering_locatie_link_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reservering_locatie_link_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Einddatum)
                    .HasColumnName("einddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Einddatumgepland)
                    .HasColumnName("einddatumgepland")
                    .HasColumnType("datetime");

                entity.Property(e => e.Einddatumgeplandblok)
                    .HasColumnName("einddatumgeplandblok")
                    .HasColumnType("datetime");

                entity.Property(e => e.Locatieid).HasColumnName("locatieid");

                entity.Property(e => e.Reserveringid).HasColumnName("reserveringid");

                entity.Property(e => e.Startdatum)
                    .HasColumnName("startdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Startdatumgepland)
                    .HasColumnName("startdatumgepland")
                    .HasColumnType("datetime");

                entity.Property(e => e.Startdatumgeplandblok)
                    .HasColumnName("startdatumgeplandblok")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Locatie)
                    .WithMany(p => p.ReserveringLocatieLink)
                    .HasForeignKey(d => d.Locatieid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_locatie_locatieid_reservering_locatie_link");

                entity.HasOne(d => d.Reservering)
                    .WithMany(p => p.ReserveringLocatieLink)
                    .HasForeignKey(d => d.Reserveringid)
                    .HasConstraintName("fk_reservering_reserveringid_reservering_locatie_link");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReserveringLocatieLinkUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reservering_locatie_link");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReserveringLocatieLinkUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reservering_locatie_link");
            });

            modelBuilder.Entity<ReserveringLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservering__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_reservering__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_reservering__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reservering__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reservering__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ReserveringLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_reservering_kaartid_reservering__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ReserveringLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_reservering__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReserveringLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reservering__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReserveringLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reservering__logboek");
            });

            modelBuilder.Entity<ReserveringObjectLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservering_object_link");

                entity.HasIndex(e => e.Einddatum)
                    .HasName("idx_reservering_object_link_einddatum");

                entity.HasIndex(e => e.Einddatumgepland)
                    .HasName("idx_reservering_object_link_einddatumgepland");

                entity.HasIndex(e => e.Einddatumgeplandblok)
                    .HasName("idx_reservering_object_link_einddatumgeplandblok");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_reservering_object_link_objectid");

                entity.HasIndex(e => e.Reserveringid)
                    .HasName("idx_reservering_object_link_reserveringid");

                entity.HasIndex(e => e.Startdatum)
                    .HasName("idx_reservering_object_link_startdatum");

                entity.HasIndex(e => e.Startdatumgepland)
                    .HasName("idx_reservering_object_link_startdatumgepland");

                entity.HasIndex(e => e.Startdatumgeplandblok)
                    .HasName("idx_reservering_object_link_startdatumgeplandblok");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_reservering_object_link_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reservering_object_link_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reservering_object_link_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Einddatum)
                    .HasColumnName("einddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Einddatumgepland)
                    .HasColumnName("einddatumgepland")
                    .HasColumnType("datetime");

                entity.Property(e => e.Einddatumgeplandblok)
                    .HasColumnName("einddatumgeplandblok")
                    .HasColumnType("datetime");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Reserveringid).HasColumnName("reserveringid");

                entity.Property(e => e.Startdatum)
                    .HasColumnName("startdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Startdatumgepland)
                    .HasColumnName("startdatumgepland")
                    .HasColumnType("datetime");

                entity.Property(e => e.Startdatumgeplandblok)
                    .HasColumnName("startdatumgeplandblok")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.ReserveringObjectLink)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_reservering_object_link");

                entity.HasOne(d => d.Reservering)
                    .WithMany(p => p.ReserveringObjectLink)
                    .HasForeignKey(d => d.Reserveringid)
                    .HasConstraintName("fk_reservering_reserveringid_reservering_object_link");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReserveringObjectLinkUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reservering_object_link");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReserveringObjectLinkUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reservering_object_link");
            });

            modelBuilder.Entity<Reserveringoptieafwijsreden>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reserveringoptieafwijsreden");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_reserveringoptieafwijsreden_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_reserveringoptieafwijsreden_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_reserveringoptieafwijsreden_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<ReserveringPersoonLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservering_persoon_link");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_reservering_persoon_link_persoonid");

                entity.HasIndex(e => e.Reserveringid)
                    .HasName("idx_reservering_persoon_link_reserveringid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Reserveringid).HasColumnName("reserveringid");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ReserveringPersoonLink)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_reservering_persoon_link");

                entity.HasOne(d => d.Reservering)
                    .WithMany(p => p.ReserveringPersoonLink)
                    .HasForeignKey(d => d.Reserveringid)
                    .HasConstraintName("fk_reservering_reserveringid_reservering_persoon_link");
            });

            modelBuilder.Entity<ReserveringVoorzieningLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservering_voorziening_link");

                entity.HasIndex(e => e.Appointmentid)
                    .HasName("idx_reservering_voorziening_link_appointmentid");

                entity.HasIndex(e => e.Behandelaarid)
                    .HasName("idx_reservering_voorziening_link_behandelaarid");

                entity.HasIndex(e => e.Locatieid)
                    .HasName("idx_reservering_voorziening_link_locatieid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_reservering_voorziening_link_objectid");

                entity.HasIndex(e => e.RefResPlannedenddate)
                    .HasName("idx_reservering_voorziening_link_ref_res_plannedenddate");

                entity.HasIndex(e => e.RefResPlannedstartdate)
                    .HasName("idx_reservering_voorziening_link_ref_res_plannedstartdate");

                entity.HasIndex(e => e.Reserveringid)
                    .HasName("idx_reservering_voorziening_link_reserveringid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_reservering_voorziening_link_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_reservering_voorziening_link_statusid");

                entity.HasIndex(e => e.Tijdstip)
                    .HasName("idx_reservering_voorziening_link_tijdstip");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reservering_voorziening_link_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reservering_voorziening_link_uidwijzig");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_reservering_voorziening_link_vestigingid");

                entity.HasIndex(e => e.Voorzieningid)
                    .HasName("idx_reservering_voorziening_link_voorzieningid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantal).HasColumnName("aantal");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afgemeld).HasColumnName("afgemeld");

                entity.Property(e => e.Appointmentid).HasColumnName("appointmentid");

                entity.Property(e => e.Behandelaarid).HasColumnName("behandelaarid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bloktijd).HasColumnName("bloktijd");

                entity.Property(e => e.Bloktijdduur).HasColumnName("bloktijdduur");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Locatieid).HasColumnName("locatieid");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Opmerking)
                    .HasColumnName("opmerking")
                    .HasColumnType("ntext");

                entity.Property(e => e.Prijsperstuk)
                    .HasColumnName("prijsperstuk")
                    .HasColumnType("money");

                entity.Property(e => e.RefLocationBranch)
                    .IsRequired()
                    .HasColumnName("ref_location_branch")
                    .HasMaxLength(60);

                entity.Property(e => e.RefLocationNaam)
                    .IsRequired()
                    .HasColumnName("ref_location_naam")
                    .HasMaxLength(100);

                entity.Property(e => e.RefObjectNaam)
                    .IsRequired()
                    .HasColumnName("ref_object_naam")
                    .HasMaxLength(60);

                entity.Property(e => e.RefOperatorName)
                    .IsRequired()
                    .HasColumnName("ref_operator_name")
                    .HasMaxLength(109);

                entity.Property(e => e.RefResBriefdescription)
                    .IsRequired()
                    .HasColumnName("ref_res_briefdescription")
                    .HasMaxLength(80);

                entity.Property(e => e.RefResNumberofpersons).HasColumnName("ref_res_numberofpersons");

                entity.Property(e => e.RefResPlannedenddate)
                    .HasColumnName("ref_res_plannedenddate")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefResPlannedstartdate)
                    .HasColumnName("ref_res_plannedstartdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefResServiceName)
                    .IsRequired()
                    .HasColumnName("ref_res_service_name")
                    .HasMaxLength(60);

                entity.Property(e => e.RefReservationName)
                    .IsRequired()
                    .HasColumnName("ref_reservation_name")
                    .HasMaxLength(30);

                entity.Property(e => e.Reserveringid).HasColumnName("reserveringid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Tijdbesteed).HasColumnName("tijdbesteed");

                entity.Property(e => e.Tijdstip)
                    .HasColumnName("tijdstip")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Voorzieningid).HasColumnName("voorzieningid");

                entity.HasOne(d => d.Appointment)
                    .WithMany(p => p.ReserveringVoorzieningLink)
                    .HasForeignKey(d => d.Appointmentid)
                    .HasConstraintName("fk_appointment_appointmentid_reservering_voorziening_link");

                entity.HasOne(d => d.Behandelaar)
                    .WithMany(p => p.ReserveringVoorzieningLink)
                    .HasForeignKey(d => d.Behandelaarid)
                    .HasConstraintName("fk_actiedoor_behandelaarid_reservering_voorziening_link");

                entity.HasOne(d => d.Locatie)
                    .WithMany(p => p.ReserveringVoorzieningLink)
                    .HasForeignKey(d => d.Locatieid)
                    .HasConstraintName("fk_locatie_locatieid_reservering_voorziening_link");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.ReserveringVoorzieningLink)
                    .HasForeignKey(d => d.Objectid)
                    .HasConstraintName("fk_object_objectid_reservering_voorziening_link");

                entity.HasOne(d => d.Reservering)
                    .WithMany(p => p.ReserveringVoorzieningLink)
                    .HasForeignKey(d => d.Reserveringid)
                    .HasConstraintName("fk_reservering_reserveringid_reservering_voorziening_link");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.ReserveringVoorzieningLink)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_reservering_voorziening_status_statusid_reservering_voorziening_link");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReserveringVoorzieningLinkUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reservering_voorziening_link");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReserveringVoorzieningLinkUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reservering_voorziening_link");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.ReserveringVoorzieningLink)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_reservering_voorziening_link");

                entity.HasOne(d => d.Voorziening)
                    .WithMany(p => p.ReserveringVoorzieningLink)
                    .HasForeignKey(d => d.Voorzieningid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_voorziening_voorzieningid_reservering_voorziening_link");
            });

            modelBuilder.Entity<ReserveringVoorzieningLinkDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservering_voorziening_link__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_reservering_voorziening_link__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_reservering_voorziening_link__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reservering_voorziening_link__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reservering_voorziening_link__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ReserveringVoorzieningLinkDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_reservering_voorziening_link_kaartid_reservering_voorziening_link__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ReserveringVoorzieningLinkDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_reservering_voorziening_link__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReserveringVoorzieningLinkDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reservering_voorziening_link__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReserveringVoorzieningLinkDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reservering_voorziening_link__documenten");
            });

            modelBuilder.Entity<ReserveringVoorzieningLinkEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservering_voorziening_link__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_reservering_voorziening_link__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_reservering_voorziening_link__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ReserveringVoorzieningLinkEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_reservering_voorziening_link__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ReserveringVoorzieningLinkEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_reservering_voorziening_link_kaartid_reservering_voorziening_link__emailberichten");
            });

            modelBuilder.Entity<ReserveringVoorzieningLinkLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservering_voorziening_link__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_reservering_voorziening_link__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_reservering_voorziening_link__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_reservering_voorziening_link__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_reservering_voorziening_link__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ReserveringVoorzieningLinkLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_reservering_voorziening_link_kaartid_reservering_voorziening_link__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ReserveringVoorzieningLinkLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_reservering_voorziening_link__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ReserveringVoorzieningLinkLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_reservering_voorziening_link__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ReserveringVoorzieningLinkLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_reservering_voorziening_link__logboek");
            });

            modelBuilder.Entity<ReserveringVoorzieningStatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("reservering_voorziening_status");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_reservering_voorziening_status_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_reservering_voorziening_status_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_reservering_voorziening_status_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<RmSeries>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("rm_series");

                entity.HasIndex(e => e.Planningid)
                    .HasName("idx_rm_series_planningid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_rm_series_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_rm_series_statusid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_rm_series_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_rm_series_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Briefdescription)
                    .IsRequired()
                    .HasColumnName("briefdescription")
                    .HasMaxLength(80);

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Duration).HasColumnName("duration");

                entity.Property(e => e.Hasconflicts).HasColumnName("hasconflicts");

                entity.Property(e => e.Numberofpersons).HasColumnName("numberofpersons");

                entity.Property(e => e.Planningid).HasColumnName("planningid");

                entity.Property(e => e.Starttime).HasColumnName("starttime");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Planning)
                    .WithMany(p => p.RmSeries)
                    .HasForeignKey(d => d.Planningid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_planning_planningid_rm_series");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.RmSeries)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_rm_series_status_statusid_rm_series");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.RmSeriesUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_rm_series");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.RmSeriesUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_rm_series");
            });

            modelBuilder.Entity<RmSeriesLocationLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("rm_series_location_link");

                entity.HasIndex(e => e.Locationid)
                    .HasName("idx_rm_series_location_link_locationid");

                entity.HasIndex(e => e.RmSeriesid)
                    .HasName("idx_rm_series_location_link_rm_seriesid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Duration).HasColumnName("duration");

                entity.Property(e => e.Locationid).HasColumnName("locationid");

                entity.Property(e => e.Offset).HasColumnName("offset");

                entity.Property(e => e.RmSeriesid).HasColumnName("rm_seriesid");

                entity.HasOne(d => d.Location)
                    .WithMany(p => p.RmSeriesLocationLink)
                    .HasForeignKey(d => d.Locationid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_locatie_locationid_rm_series_location_link");

                entity.HasOne(d => d.RmSeries)
                    .WithMany(p => p.RmSeriesLocationLink)
                    .HasForeignKey(d => d.RmSeriesid)
                    .HasConstraintName("fk_rm_series_rm_seriesid_rm_series_location_link");
            });

            modelBuilder.Entity<RmSeriesObjectLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("rm_series_object_link");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_rm_series_object_link_objectid");

                entity.HasIndex(e => e.RmSeriesid)
                    .HasName("idx_rm_series_object_link_rm_seriesid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Duration).HasColumnName("duration");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Offset).HasColumnName("offset");

                entity.Property(e => e.RmSeriesid).HasColumnName("rm_seriesid");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.RmSeriesObjectLink)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_rm_series_object_link");

                entity.HasOne(d => d.RmSeries)
                    .WithMany(p => p.RmSeriesObjectLink)
                    .HasForeignKey(d => d.RmSeriesid)
                    .HasConstraintName("fk_rm_series_rm_seriesid_rm_series_object_link");
            });

            modelBuilder.Entity<RmSeriesServiceLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("rm_series_service_link");

                entity.HasIndex(e => e.Branchid)
                    .HasName("idx_rm_series_service_link_branchid");

                entity.HasIndex(e => e.Locationid)
                    .HasName("idx_rm_series_service_link_locationid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_rm_series_service_link_objectid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_rm_series_service_link_operatorid");

                entity.HasIndex(e => e.RmSeriesid)
                    .HasName("idx_rm_series_service_link_rm_seriesid");

                entity.HasIndex(e => e.Serviceid)
                    .HasName("idx_rm_series_service_link_serviceid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Amount).HasColumnName("amount");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.BlocktimeDuration).HasColumnName("blocktime_duration");

                entity.Property(e => e.Branchid).HasColumnName("branchid");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasColumnType("ntext");

                entity.Property(e => e.Locationid).HasColumnName("locationid");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Offset).HasColumnName("offset");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.RmSeriesid).HasColumnName("rm_seriesid");

                entity.Property(e => e.Serviceid).HasColumnName("serviceid");

                entity.HasOne(d => d.Branch)
                    .WithMany(p => p.RmSeriesServiceLink)
                    .HasForeignKey(d => d.Branchid)
                    .HasConstraintName("fk_vestiging_branchid_rm_series_service_link");

                entity.HasOne(d => d.Location)
                    .WithMany(p => p.RmSeriesServiceLink)
                    .HasForeignKey(d => d.Locationid)
                    .HasConstraintName("fk_locatie_locationid_rm_series_service_link");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.RmSeriesServiceLink)
                    .HasForeignKey(d => d.Objectid)
                    .HasConstraintName("fk_object_objectid_rm_series_service_link");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.RmSeriesServiceLink)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_rm_series_service_link");

                entity.HasOne(d => d.RmSeries)
                    .WithMany(p => p.RmSeriesServiceLink)
                    .HasForeignKey(d => d.RmSeriesid)
                    .HasConstraintName("fk_rm_series_rm_seriesid_rm_series_service_link");

                entity.HasOne(d => d.Service)
                    .WithMany(p => p.RmSeriesServiceLink)
                    .HasForeignKey(d => d.Serviceid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_voorziening_serviceid_rm_series_service_link");
            });

            modelBuilder.Entity<RmSeriesStatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("rm_series_status");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_rm_series_status_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_rm_series_status_naam");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(30);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Ruimtegebruiksfunctie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ruimtegebruiksfunctie");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_ruimtegebruiksfunctie_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_ruimtegebruiksfunctie_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_ruimtegebruiksfunctie_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Ruimtemateriaalglas>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ruimtemateriaalglas");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_ruimtemateriaalglas_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_ruimtemateriaalglas_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_ruimtemateriaalglas_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Ruimtemateriaalplafond>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ruimtemateriaalplafond");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_ruimtemateriaalplafond_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_ruimtemateriaalplafond_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_ruimtemateriaalplafond_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Ruimtemateriaalvloer>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ruimtemateriaalvloer");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_ruimtemateriaalvloer_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_ruimtemateriaalvloer_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_ruimtemateriaalvloer_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Ruimtemateriaalwand>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ruimtemateriaalwand");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_ruimtemateriaalwand_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_ruimtemateriaalwand_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_ruimtemateriaalwand_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Ruimteonderhoud>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ruimteonderhoud");

                entity.HasIndex(e => e.Einddatum)
                    .HasName("idx_ruimteonderhoud_einddatum");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_ruimteonderhoud_importid");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_ruimteonderhoud_leverancierid");

                entity.HasIndex(e => e.Locatieid)
                    .HasName("idx_ruimteonderhoud_locatieid");

                entity.HasIndex(e => e.Startdatum)
                    .HasName("idx_ruimteonderhoud_startdatum");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasColumnName("code")
                    .HasMaxLength(30);

                entity.Property(e => e.Einddatum)
                    .HasColumnName("einddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Kosten)
                    .HasColumnName("kosten")
                    .HasColumnType("money");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Locatieid).HasColumnName("locatieid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Startdatum)
                    .HasColumnName("startdatum")
                    .HasColumnType("datetime");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.Ruimteonderhoud)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_ruimteonderhoud");

                entity.HasOne(d => d.Locatie)
                    .WithMany(p => p.Ruimteonderhoud)
                    .HasForeignKey(d => d.Locatieid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_locatie_locatieid_ruimteonderhoud");
            });

            modelBuilder.Entity<Ruimteopstelling>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ruimteopstelling");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_ruimteopstelling_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_ruimteopstelling_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_ruimteopstelling_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Ruimtestatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ruimtestatus");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_ruimtestatus_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_ruimtestatus_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_ruimtestatus_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Ruimtetype>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ruimtetype");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_ruimtetype_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_ruimtetype_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_ruimtetype_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Salaryscale>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("salaryscale");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_salaryscale_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_salaryscale_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_salaryscale_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Schedule>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("schedule");

                entity.HasIndex(e => e.End)
                    .HasName("idx_schedule_end");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_schedule_importid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_schedule_operatorid");

                entity.HasIndex(e => e.Start)
                    .HasName("idx_schedule_start");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_schedule_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_schedule_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.End).HasColumnName("end");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Length).HasColumnName("length");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Start).HasColumnName("start");

                entity.Property(e => e.Timezone)
                    .IsRequired()
                    .HasColumnName("timezone")
                    .HasMaxLength(42);

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.Schedule)
                    .HasForeignKey(d => d.Operatorid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_actiedoor_operatorid_schedule");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ScheduleUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_schedule");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ScheduleUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_schedule");
            });

            modelBuilder.Entity<Scheduleshiftlink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("scheduleshiftlink");

                entity.HasIndex(e => e.Scheduleid)
                    .HasName("idx_scheduleshiftlink_scheduleid");

                entity.HasIndex(e => e.Shiftid)
                    .HasName("idx_scheduleshiftlink_shiftid");

                entity.HasIndex(e => new { e.Scheduleid, e.Dayofschedule })
                    .HasName("uidx_scheduleshiftlink_scheduleid_dayofschedule")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dayofschedule).HasColumnName("dayofschedule");

                entity.Property(e => e.Scheduleid).HasColumnName("scheduleid");

                entity.Property(e => e.Shiftid).HasColumnName("shiftid");

                entity.HasOne(d => d.Schedule)
                    .WithMany(p => p.Scheduleshiftlink)
                    .HasForeignKey(d => d.Scheduleid)
                    .HasConstraintName("fk_schedule_scheduleid_scheduleshiftlink");

                entity.HasOne(d => d.Shift)
                    .WithMany(p => p.Scheduleshiftlink)
                    .HasForeignKey(d => d.Shiftid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_shift_shiftid_scheduleshiftlink");
            });

            modelBuilder.Entity<Selvast>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("selvast");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_selvast_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_selvast_datwijzig");

                entity.HasIndex(e => e.Groepid)
                    .HasName("idx_selvast_groepid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_selvast_naam");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_selvast_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_selvast_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_selvast_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Groepid).HasColumnName("groepid");

                entity.Property(e => e.Istijdlk).HasColumnName("istijdlk");

                entity.Property(e => e.Kaart)
                    .IsRequired()
                    .HasColumnName("kaart")
                    .HasMaxLength(40);

                entity.Property(e => e.Kaartnaam)
                    .IsRequired()
                    .HasColumnName("kaartnaam")
                    .HasMaxLength(50);

                entity.Property(e => e.LastUsed)
                    .HasColumnName("last_used")
                    .HasColumnType("datetime");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Omschr)
                    .HasColumnName("omschr")
                    .HasColumnType("ntext");

                entity.Property(e => e.Slacode).HasColumnName("slacode");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Voorwiecode).HasColumnName("voorwiecode");

                entity.HasOne(d => d.Groep)
                    .WithMany(p => p.SelvastGroep)
                    .HasForeignKey(d => d.Groepid)
                    .HasConstraintName("fk_gebruiker_groepid_selvast");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SelvastUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_selvast");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SelvastUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_selvast");
            });

            modelBuilder.Entity<ServiceBranchLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("service_branch_link");

                entity.HasIndex(e => e.Branchid)
                    .HasName("idx_service_branch_link_branchid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_service_branch_link_importid");

                entity.HasIndex(e => e.Serviceid)
                    .HasName("idx_service_branch_link_serviceid");

                entity.HasIndex(e => new { e.Serviceid, e.Branchid })
                    .HasName("uidx_service_branch_link_serviceid_branchid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Branchid).HasColumnName("branchid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Serviceid).HasColumnName("serviceid");

                entity.HasOne(d => d.Branch)
                    .WithMany(p => p.ServiceBranchLink)
                    .HasForeignKey(d => d.Branchid)
                    .HasConstraintName("fk_vestiging_branchid_service_branch_link");

                entity.HasOne(d => d.Service)
                    .WithMany(p => p.ServiceBranchLink)
                    .HasForeignKey(d => d.Serviceid)
                    .HasConstraintName("fk_dnodienst_serviceid_service_branch_link");
            });

            modelBuilder.Entity<ServiceBudgetholderLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("service_budgetholder_link");

                entity.HasIndex(e => e.Budgetholderid)
                    .HasName("idx_service_budgetholder_link_budgetholderid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_service_budgetholder_link_importid");

                entity.HasIndex(e => e.Serviceid)
                    .HasName("idx_service_budgetholder_link_serviceid");

                entity.HasIndex(e => new { e.Serviceid, e.Budgetholderid })
                    .HasName("uidx_service_budgetholder_link_serviceid_budgetholderid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Budgetholderid).HasColumnName("budgetholderid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Serviceid).HasColumnName("serviceid");

                entity.HasOne(d => d.Budgetholder)
                    .WithMany(p => p.ServiceBudgetholderLink)
                    .HasForeignKey(d => d.Budgetholderid)
                    .HasConstraintName("fk_budgethouder_budgetholderid_service_budgetholder_link");

                entity.HasOne(d => d.Service)
                    .WithMany(p => p.ServiceBudgetholderLink)
                    .HasForeignKey(d => d.Serviceid)
                    .HasConstraintName("fk_dnodienst_serviceid_service_budgetholder_link");
            });

            modelBuilder.Entity<ServiceDepartmentLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("service_department_link");

                entity.HasIndex(e => e.Departmentid)
                    .HasName("idx_service_department_link_departmentid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_service_department_link_importid");

                entity.HasIndex(e => e.Serviceid)
                    .HasName("idx_service_department_link_serviceid");

                entity.HasIndex(e => new { e.Serviceid, e.Departmentid })
                    .HasName("uidx_service_department_link_serviceid_departmentid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Departmentid).HasColumnName("departmentid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Serviceid).HasColumnName("serviceid");

                entity.HasOne(d => d.Department)
                    .WithMany(p => p.ServiceDepartmentLink)
                    .HasForeignKey(d => d.Departmentid)
                    .HasConstraintName("fk_afdeling_departmentid_service_department_link");

                entity.HasOne(d => d.Service)
                    .WithMany(p => p.ServiceDepartmentLink)
                    .HasForeignKey(d => d.Serviceid)
                    .HasConstraintName("fk_dnodienst_serviceid_service_department_link");
            });

            modelBuilder.Entity<Servicelevel>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("servicelevel");

                entity.HasIndex(e => e.Archivereasonid)
                    .HasName("idx_servicelevel_archivereasonid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_servicelevel_importid");

                entity.HasIndex(e => e.Line1durationid)
                    .HasName("idx_servicelevel_line1durationid");

                entity.HasIndex(e => e.Line2durationid)
                    .HasName("idx_servicelevel_line2durationid");

                entity.HasIndex(e => e.Name)
                    .HasName("idx_servicelevel_name");

                entity.HasIndex(e => e.Priorityid)
                    .HasName("idx_servicelevel_priorityid");

                entity.HasIndex(e => e.Servicewindowid)
                    .HasName("idx_servicelevel_servicewindowid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_servicelevel_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_servicelevel_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Archivereasonid).HasColumnName("archivereasonid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Briefdescription)
                    .IsRequired()
                    .HasColumnName("briefdescription")
                    .HasMaxLength(80);

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("ntext");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Line1durationid).HasColumnName("line1durationid");

                entity.Property(e => e.Line2durationid).HasColumnName("line2durationid");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(30);

                entity.Property(e => e.Priorityid).HasColumnName("priorityid");

                entity.Property(e => e.ServicewindowOption).HasColumnName("servicewindow_option");

                entity.Property(e => e.Servicewindowid).HasColumnName("servicewindowid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Archivereason)
                    .WithMany(p => p.Servicelevel)
                    .HasForeignKey(d => d.Archivereasonid)
                    .HasConstraintName("fk_archiefreden_archivereasonid_servicelevel");

                entity.HasOne(d => d.Line1duration)
                    .WithMany(p => p.ServicelevelLine1duration)
                    .HasForeignKey(d => d.Line1durationid)
                    .HasConstraintName("fk_doorlooptijd_line1durationid_servicelevel");

                entity.HasOne(d => d.Line2duration)
                    .WithMany(p => p.ServicelevelLine2duration)
                    .HasForeignKey(d => d.Line2durationid)
                    .HasConstraintName("fk_doorlooptijd_line2durationid_servicelevel");

                entity.HasOne(d => d.Priority)
                    .WithMany(p => p.Servicelevel)
                    .HasForeignKey(d => d.Priorityid)
                    .HasConstraintName("fk_priority_priorityid_servicelevel");

                entity.HasOne(d => d.Servicewindow)
                    .WithMany(p => p.Servicelevel)
                    .HasForeignKey(d => d.Servicewindowid)
                    .HasConstraintName("fk_servicewindow_servicewindowid_servicelevel");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ServicelevelUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_servicelevel");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ServicelevelUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_servicelevel");
            });

            modelBuilder.Entity<ServicelevelDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("servicelevel__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_servicelevel__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_servicelevel__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_servicelevel__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_servicelevel__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ServicelevelDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_servicelevel_kaartid_servicelevel__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ServicelevelDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_servicelevel__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ServicelevelDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_servicelevel__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ServicelevelDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_servicelevel__documenten");
            });

            modelBuilder.Entity<ServicelevelEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("servicelevel__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_servicelevel__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_servicelevel__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ServicelevelEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_servicelevel__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ServicelevelEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_servicelevel_kaartid_servicelevel__emailberichten");
            });

            modelBuilder.Entity<ServicelevelLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("servicelevel__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_servicelevel__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_servicelevel__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_servicelevel__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_servicelevel__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ServicelevelLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_servicelevel_kaartid_servicelevel__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ServicelevelLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_servicelevel__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ServicelevelLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_servicelevel__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ServicelevelLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_servicelevel__logboek");
            });

            modelBuilder.Entity<ServicelevelMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("servicelevel__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_servicelevel__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_servicelevel__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_servicelevel__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_servicelevel__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_servicelevel__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_servicelevel__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_servicelevel__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_servicelevel__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_servicelevel__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Attachment)
                    .HasColumnName("attachment")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.ServicelevelMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_servicelevel__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.ServicelevelMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_servicelevel_parentid_servicelevel__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ServicelevelMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_servicelevel__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ServicelevelMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_servicelevel__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ServicelevelMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_servicelevel__memo_history");
            });

            modelBuilder.Entity<ServicelevelPrioritylink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("servicelevel_prioritylink");

                entity.HasIndex(e => e.Impactid)
                    .HasName("idx_servicelevel_prioritylink_impactid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_servicelevel_prioritylink_importid");

                entity.HasIndex(e => e.Line1durationid)
                    .HasName("idx_servicelevel_prioritylink_line1durationid");

                entity.HasIndex(e => e.Line2durationid)
                    .HasName("idx_servicelevel_prioritylink_line2durationid");

                entity.HasIndex(e => e.Priorityid)
                    .HasName("idx_servicelevel_prioritylink_priorityid");

                entity.HasIndex(e => e.Servicelevelid)
                    .HasName("idx_servicelevel_prioritylink_servicelevelid");

                entity.HasIndex(e => e.Urgencyid)
                    .HasName("idx_servicelevel_prioritylink_urgencyid");

                entity.HasIndex(e => new { e.Servicelevelid, e.Impactid, e.Urgencyid })
                    .HasName("uidx_servicelevel_prioritylink_servicelevelid_impactid_urgencyid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Impactid).HasColumnName("impactid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Line1durationid).HasColumnName("line1durationid");

                entity.Property(e => e.Line2durationid).HasColumnName("line2durationid");

                entity.Property(e => e.Priorityid).HasColumnName("priorityid");

                entity.Property(e => e.Servicelevelid).HasColumnName("servicelevelid");

                entity.Property(e => e.Urgencyid).HasColumnName("urgencyid");

                entity.HasOne(d => d.Impact)
                    .WithMany(p => p.ServicelevelPrioritylink)
                    .HasForeignKey(d => d.Impactid)
                    .HasConstraintName("fk_impact_impactid_servicelevel_prioritylink");

                entity.HasOne(d => d.Line1duration)
                    .WithMany(p => p.ServicelevelPrioritylinkLine1duration)
                    .HasForeignKey(d => d.Line1durationid)
                    .HasConstraintName("fk_doorlooptijd_line1durationid_servicelevel_prioritylink");

                entity.HasOne(d => d.Line2duration)
                    .WithMany(p => p.ServicelevelPrioritylinkLine2duration)
                    .HasForeignKey(d => d.Line2durationid)
                    .HasConstraintName("fk_doorlooptijd_line2durationid_servicelevel_prioritylink");

                entity.HasOne(d => d.Priority)
                    .WithMany(p => p.ServicelevelPrioritylink)
                    .HasForeignKey(d => d.Priorityid)
                    .HasConstraintName("fk_priority_priorityid_servicelevel_prioritylink");

                entity.HasOne(d => d.Servicelevel)
                    .WithMany(p => p.ServicelevelPrioritylink)
                    .HasForeignKey(d => d.Servicelevelid)
                    .HasConstraintName("fk_servicelevel_servicelevelid_servicelevel_prioritylink");

                entity.HasOne(d => d.Urgency)
                    .WithMany(p => p.ServicelevelPrioritylink)
                    .HasForeignKey(d => d.Urgencyid)
                    .HasConstraintName("fk_urgency_urgencyid_servicelevel_prioritylink");
            });

            modelBuilder.Entity<ServicelevelServiceLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("servicelevel_service_link");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_servicelevel_service_link_importid");

                entity.HasIndex(e => e.Serviceid)
                    .HasName("idx_servicelevel_service_link_serviceid");

                entity.HasIndex(e => e.Servicelevelid)
                    .HasName("idx_servicelevel_service_link_servicelevelid");

                entity.HasIndex(e => new { e.Serviceid, e.Servicelevelid })
                    .HasName("uidx_servicelevel_service_link_serviceid_servicelevelid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Costs)
                    .HasColumnName("costs")
                    .HasColumnType("money");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Serviceid).HasColumnName("serviceid");

                entity.Property(e => e.Servicelevelid).HasColumnName("servicelevelid");

                entity.HasOne(d => d.Service)
                    .WithMany(p => p.ServicelevelServiceLink)
                    .HasForeignKey(d => d.Serviceid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_dnodienst_serviceid_servicelevel_service_link");

                entity.HasOne(d => d.Servicelevel)
                    .WithMany(p => p.ServicelevelServiceLink)
                    .HasForeignKey(d => d.Servicelevelid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_servicelevel_servicelevelid_servicelevel_service_link");
            });

            modelBuilder.Entity<ServicePersonALink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("service_person_a_link");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_service_person_a_link_importid");

                entity.HasIndex(e => e.Personaid)
                    .HasName("idx_service_person_a_link_personaid");

                entity.HasIndex(e => e.Serviceid)
                    .HasName("idx_service_person_a_link_serviceid");

                entity.HasIndex(e => new { e.Serviceid, e.Personaid })
                    .HasName("uidx_service_person_a_link_serviceid_personaid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Personaid).HasColumnName("personaid");

                entity.Property(e => e.Serviceid).HasColumnName("serviceid");

                entity.HasOne(d => d.Persona)
                    .WithMany(p => p.ServicePersonALink)
                    .HasForeignKey(d => d.Personaid)
                    .HasConstraintName("fk_extraapersoon_personaid_service_person_a_link");

                entity.HasOne(d => d.Service)
                    .WithMany(p => p.ServicePersonALink)
                    .HasForeignKey(d => d.Serviceid)
                    .HasConstraintName("fk_dnodienst_serviceid_service_person_a_link");
            });

            modelBuilder.Entity<ServicePersonBLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("service_person_b_link");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_service_person_b_link_importid");

                entity.HasIndex(e => e.Personbid)
                    .HasName("idx_service_person_b_link_personbid");

                entity.HasIndex(e => e.Serviceid)
                    .HasName("idx_service_person_b_link_serviceid");

                entity.HasIndex(e => new { e.Serviceid, e.Personbid })
                    .HasName("uidx_service_person_b_link_serviceid_personbid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Personbid).HasColumnName("personbid");

                entity.Property(e => e.Serviceid).HasColumnName("serviceid");

                entity.HasOne(d => d.Personb)
                    .WithMany(p => p.ServicePersonBLink)
                    .HasForeignKey(d => d.Personbid)
                    .HasConstraintName("fk_extrabpersoon_personbid_service_person_b_link");

                entity.HasOne(d => d.Service)
                    .WithMany(p => p.ServicePersonBLink)
                    .HasForeignKey(d => d.Serviceid)
                    .HasConstraintName("fk_dnodienst_serviceid_service_person_b_link");
            });

            modelBuilder.Entity<ServiceSsdformLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("service_ssdform_link");

                entity.HasIndex(e => e.Formid)
                    .HasName("idx_service_ssdform_link_formid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_service_ssdform_link_importid");

                entity.HasIndex(e => e.Serviceid)
                    .HasName("idx_service_ssdform_link_serviceid");

                entity.HasIndex(e => new { e.Serviceid, e.Formid })
                    .HasName("uidx_service_ssdform_link_serviceid_formid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Formid).HasColumnName("formid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Rank).HasColumnName("rank");

                entity.Property(e => e.Serviceid).HasColumnName("serviceid");

                entity.HasOne(d => d.Form)
                    .WithMany(p => p.ServiceSsdformLink)
                    .HasForeignKey(d => d.Formid)
                    .HasConstraintName("fk_ssd_form_formid_service_ssdform_link");

                entity.HasOne(d => d.Service)
                    .WithMany(p => p.ServiceSsdformLink)
                    .HasForeignKey(d => d.Serviceid)
                    .HasConstraintName("fk_dnodienst_serviceid_service_ssdform_link");
            });

            modelBuilder.Entity<Servicewindow>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("servicewindow");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_servicewindow_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_servicewindow_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_servicewindow_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_servicewindow_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_servicewindow_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_servicewindow_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_servicewindow_importid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_servicewindow_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_servicewindow_statusid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_servicewindow_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_servicewindow_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_servicewindow_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_servicewindow_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_servicewindow_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_servicewindow_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_servicewindow_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Frclose).HasColumnName("frclose");

                entity.Property(e => e.Fropen).HasColumnName("fropen");

                entity.Property(e => e.Frworkday).HasColumnName("frworkday");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Moclose).HasColumnName("moclose");

                entity.Property(e => e.Moopen).HasColumnName("moopen");

                entity.Property(e => e.Moworkday).HasColumnName("moworkday");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Saclose).HasColumnName("saclose");

                entity.Property(e => e.Saopen).HasColumnName("saopen");

                entity.Property(e => e.Saworkday).HasColumnName("saworkday");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Suclose).HasColumnName("suclose");

                entity.Property(e => e.Suopen).HasColumnName("suopen");

                entity.Property(e => e.Suworkday).HasColumnName("suworkday");

                entity.Property(e => e.Thclose).HasColumnName("thclose");

                entity.Property(e => e.Thopen).HasColumnName("thopen");

                entity.Property(e => e.Thworkday).HasColumnName("thworkday");

                entity.Property(e => e.TimezonePerspective).HasColumnName("timezone_perspective");

                entity.Property(e => e.Toelichting)
                    .HasColumnName("toelichting")
                    .HasColumnType("ntext");

                entity.Property(e => e.Tuclose).HasColumnName("tuclose");

                entity.Property(e => e.Tuopen).HasColumnName("tuopen");

                entity.Property(e => e.Tuworkday).HasColumnName("tuworkday");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Weclose).HasColumnName("weclose");

                entity.Property(e => e.Weopen).HasColumnName("weopen");

                entity.Property(e => e.Weworkday).HasColumnName("weworkday");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Servicewindow)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_servicewindow");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.ServicewindowAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_servicewindow");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.ServicewindowAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_servicewindow");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.ServicewindowAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_servicewindow");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.ServicewindowAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_servicewindow");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.ServicewindowAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_servicewindow");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Servicewindow)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_sw_status_statusid_servicewindow");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ServicewindowUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_servicewindow");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ServicewindowUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_servicewindow");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.ServicewindowVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_servicewindow");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.ServicewindowVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_servicewindow");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.ServicewindowVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_servicewindow");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.ServicewindowVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_servicewindow");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.ServicewindowVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_servicewindow");
            });

            modelBuilder.Entity<ServicewindowDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("servicewindow__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_servicewindow__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_servicewindow__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_servicewindow__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_servicewindow__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ServicewindowDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_servicewindow_kaartid_servicewindow__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ServicewindowDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_servicewindow__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ServicewindowDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_servicewindow__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ServicewindowDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_servicewindow__documenten");
            });

            modelBuilder.Entity<ServicewindowEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("servicewindow__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_servicewindow__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_servicewindow__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.ServicewindowEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_servicewindow__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ServicewindowEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_servicewindow_kaartid_servicewindow__emailberichten");
            });

            modelBuilder.Entity<ServicewindowLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("servicewindow__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_servicewindow__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_servicewindow__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_servicewindow__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_servicewindow__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.ServicewindowLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_servicewindow_kaartid_servicewindow__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ServicewindowLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_servicewindow__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ServicewindowLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_servicewindow__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ServicewindowLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_servicewindow__logboek");
            });

            modelBuilder.Entity<ServicewindowMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("servicewindow__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_servicewindow__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_servicewindow__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_servicewindow__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_servicewindow__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_servicewindow__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_servicewindow__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_servicewindow__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_servicewindow__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_servicewindow__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.ServicewindowMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_servicewindow__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.ServicewindowMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_servicewindow_parentid_servicewindow__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.ServicewindowMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_servicewindow__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ServicewindowMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_servicewindow__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ServicewindowMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_servicewindow__memo_history");
            });

            modelBuilder.Entity<Settings>(entity =>
            {
                entity.ToTable("settings");

                entity.HasIndex(e => e.Date)
                    .HasName("idx_settings_date");

                entity.HasIndex(e => e.Personid)
                    .HasName("idx_settings_personid");

                entity.HasIndex(e => e.Userid)
                    .HasName("idx_settings_userid");

                entity.HasIndex(e => new { e.Userid, e.Personid, e.Name })
                    .HasName("uidx_settings_userid_personid_name")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bigdecimal)
                    .HasColumnName("bigdecimal")
                    .HasColumnType("money");

                entity.Property(e => e.Binary)
                    .HasColumnName("binary")
                    .HasColumnType("image");

                entity.Property(e => e.Boolean).HasColumnName("boolean");

                entity.Property(e => e.Characters)
                    .HasColumnName("characters")
                    .HasMaxLength(100);

                entity.Property(e => e.Date)
                    .HasColumnName("date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Double).HasColumnName("double");

                entity.Property(e => e.Foreignid).HasColumnName("foreignid");

                entity.Property(e => e.ForeignidTable)
                    .HasColumnName("foreignid_table")
                    .HasMaxLength(128);

                entity.Property(e => e.Integer).HasColumnName("integer");

                entity.Property(e => e.Long).HasColumnName("long");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(100);

                entity.Property(e => e.Personid).HasColumnName("personid");

                entity.Property(e => e.Text)
                    .HasColumnName("text")
                    .HasColumnType("ntext");

                entity.Property(e => e.Type).HasColumnName("type");

                entity.Property(e => e.Userid).HasColumnName("userid");

                entity.HasOne(d => d.Person)
                    .WithMany(p => p.Settings)
                    .HasForeignKey(d => d.Personid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_persoon_personid_settings");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Settings)
                    .HasForeignKey(d => d.Userid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_gebruiker_userid_settings");
            });

            modelBuilder.Entity<Shift>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("shift");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_shift_archiefredenid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_shift_importid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_shift_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_shift_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_shift_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Availableforall).HasColumnName("availableforall");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasColumnName("description")
                    .HasMaxLength(256);

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(256);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Shift)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_shift");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ShiftUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_shift");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ShiftUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_shift");
            });

            modelBuilder.Entity<Shiftoperatorgrouplink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("shiftoperatorgrouplink");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_shiftoperatorgrouplink_operatorgroupid");

                entity.HasIndex(e => e.Shiftid)
                    .HasName("idx_shiftoperatorgrouplink_shiftid");

                entity.HasIndex(e => new { e.Shiftid, e.Operatorgroupid })
                    .HasName("uidx_shiftoperatorgrouplink_shiftid_operatorgroupid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Shiftid).HasColumnName("shiftid");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.Shiftoperatorgrouplink)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_shiftoperatorgrouplink");

                entity.HasOne(d => d.Shift)
                    .WithMany(p => p.Shiftoperatorgrouplink)
                    .HasForeignKey(d => d.Shiftid)
                    .HasConstraintName("fk_shift_shiftid_shiftoperatorgrouplink");
            });

            modelBuilder.Entity<Shiftpriority>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("shiftpriority");

                entity.HasIndex(e => e.Shiftid)
                    .HasName("idx_shiftpriority_shiftid");

                entity.HasIndex(e => e.Userid)
                    .HasName("idx_shiftpriority_userid");

                entity.HasIndex(e => new { e.Shiftid, e.Userid })
                    .HasName("uidx_shiftpriority_shiftid_userid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Rank).HasColumnName("rank");

                entity.Property(e => e.Shiftid).HasColumnName("shiftid");

                entity.Property(e => e.Userid).HasColumnName("userid");

                entity.HasOne(d => d.Shift)
                    .WithMany(p => p.Shiftpriority)
                    .HasForeignKey(d => d.Shiftid)
                    .HasConstraintName("fk_shift_shiftid_shiftpriority");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Shiftpriority)
                    .HasForeignKey(d => d.Userid)
                    .HasConstraintName("fk_gebruiker_userid_shiftpriority");
            });

            modelBuilder.Entity<Shiftsegment>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("shiftsegment");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_shiftsegment_importid");

                entity.HasIndex(e => e.Shiftid)
                    .HasName("idx_shiftsegment_shiftid");

                entity.HasIndex(e => e.Taskroleid)
                    .HasName("idx_shiftsegment_taskroleid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_shiftsegment_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_shiftsegment_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.End).HasColumnName("end");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Shiftid).HasColumnName("shiftid");

                entity.Property(e => e.Start).HasColumnName("start");

                entity.Property(e => e.Taskroleid).HasColumnName("taskroleid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Shift)
                    .WithMany(p => p.Shiftsegment)
                    .HasForeignKey(d => d.Shiftid)
                    .HasConstraintName("fk_shift_shiftid_shiftsegment");

                entity.HasOne(d => d.Taskrole)
                    .WithMany(p => p.Shiftsegment)
                    .HasForeignKey(d => d.Taskroleid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_taskrole_taskroleid_shiftsegment");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.ShiftsegmentUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_shiftsegment");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.ShiftsegmentUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_shiftsegment");
            });

            modelBuilder.Entity<Slacontractsoort>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("slacontractsoort");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_slacontractsoort_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_slacontractsoort_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_slacontractsoort_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.Responsietijd).HasColumnName("responsietijd");
            });

            modelBuilder.Entity<Software>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("software");

                entity.HasIndex(e => e.Aanschafdatum)
                    .HasName("idx_software_aanschafdatum");

                entity.HasIndex(e => e.Aanspreekpuntid)
                    .HasName("idx_software_aanspreekpuntid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_software_archiefredenid");

                entity.HasIndex(e => e.Artikelbestellinkid)
                    .HasName("idx_software_artikelbestellinkid");

                entity.HasIndex(e => e.Artikelstatusid)
                    .HasName("idx_software_artikelstatusid");

                entity.HasIndex(e => e.Attentieid)
                    .HasName("idx_software_attentieid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_software_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_software_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_software_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_software_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_software_attvrijeopzoek5");

                entity.HasIndex(e => e.Bestelaanvraagid)
                    .HasName("idx_software_bestelaanvraagid");

                entity.HasIndex(e => e.Bestellingid)
                    .HasName("idx_software_bestellingid");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_software_budgethouderid");

                entity.HasIndex(e => e.Configuratieid)
                    .HasName("idx_software_configuratieid");

                entity.HasIndex(e => e.Contractdatum)
                    .HasName("idx_software_contractdatum");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_software_dataanmk");

                entity.HasIndex(e => e.Datumeersteonderhoud)
                    .HasName("idx_software_datumeersteonderhoud");

                entity.HasIndex(e => e.Datumgeplandonderhoud)
                    .HasName("idx_software_datumgeplandonderhoud");

                entity.HasIndex(e => e.Datumlaatsteonderhoud)
                    .HasName("idx_software_datumlaatsteonderhoud");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_software_datwijzig");

                entity.HasIndex(e => e.Garantiedatum)
                    .HasName("idx_software_garantiedatum");

                entity.HasIndex(e => e.Groepid)
                    .HasName("idx_software_groepid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_software_importid");

                entity.HasIndex(e => e.Installatiedoorid)
                    .HasName("idx_software_installatiedoorid");

                entity.HasIndex(e => e.Leaseaanvangsdatum)
                    .HasName("idx_software_leaseaanvangsdatum");

                entity.HasIndex(e => e.Leaseeinddatum)
                    .HasName("idx_software_leaseeinddatum");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_software_leverancierid");

                entity.HasIndex(e => e.Licentiesoortid)
                    .HasName("idx_software_licentiesoortid");

                entity.HasIndex(e => e.Lokatieid)
                    .HasName("idx_software_lokatieid");

                entity.HasIndex(e => e.Merkid)
                    .HasName("idx_software_merkid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_software_naam");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_software_objectid");

                entity.HasIndex(e => e.OnderhoudDoorid)
                    .HasName("idx_software_onderhoud_doorid");

                entity.HasIndex(e => e.Onderhoudslacontractid)
                    .HasName("idx_software_onderhoudslacontractid");

                entity.HasIndex(e => e.Onderhoudsoortid)
                    .HasName("idx_software_onderhoudsoortid");

                entity.HasIndex(e => e.Onderhoudsplanid)
                    .HasName("idx_software_onderhoudsplanid");

                entity.HasIndex(e => e.Onderhoudtot)
                    .HasName("idx_software_onderhoudtot");

                entity.HasIndex(e => e.Onderhoudvanaf)
                    .HasName("idx_software_onderhoudvanaf");

                entity.HasIndex(e => e.Opslagmediumid)
                    .HasName("idx_software_opslagmediumid");

                entity.HasIndex(e => e.Persoongroepid)
                    .HasName("idx_software_persoongroepid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_software_persoonid");

                entity.HasIndex(e => e.RefAanspreekpunt)
                    .HasName("idx_software_ref_aanspreekpunt");

                entity.HasIndex(e => e.RefConfiguratie)
                    .HasName("idx_software_ref_configuratie");

                entity.HasIndex(e => e.RefFinbudgethouder)
                    .HasName("idx_software_ref_finbudgethouder");

                entity.HasIndex(e => e.RefKleur)
                    .HasName("idx_software_ref_kleur");

                entity.HasIndex(e => e.RefLeverancier)
                    .HasName("idx_software_ref_leverancier");

                entity.HasIndex(e => e.RefLokatie)
                    .HasName("idx_software_ref_lokatie");

                entity.HasIndex(e => e.RefOrdernumber)
                    .HasName("idx_software_ref_ordernumber");

                entity.HasIndex(e => e.RefPersoon)
                    .HasName("idx_software_ref_persoon");

                entity.HasIndex(e => e.RefPersoongroep)
                    .HasName("idx_software_ref_persoongroep");

                entity.HasIndex(e => e.RefProduct)
                    .HasName("idx_software_ref_product");

                entity.HasIndex(e => e.RefSoort)
                    .HasName("idx_software_ref_soort");

                entity.HasIndex(e => e.RefVestiging)
                    .HasName("idx_software_ref_vestiging");

                entity.HasIndex(e => e.Reserveerbaaractiveerbaar)
                    .HasName("idx_software_reserveerbaaractiveerbaar");

                entity.HasIndex(e => e.Reserveerbaarsecure)
                    .HasName("idx_software_reserveerbaarsecure");

                entity.HasIndex(e => e.Reserveerbaarsshd)
                    .HasName("idx_software_reserveerbaarsshd");

                entity.HasIndex(e => e.Reservzichtbaarsshd)
                    .HasName("idx_software_reservzichtbaarsshd");

                entity.HasIndex(e => e.Servicewindowid)
                    .HasName("idx_software_servicewindowid");

                entity.HasIndex(e => e.Sjabloonobjectid)
                    .HasName("idx_software_sjabloonobjectid");

                entity.HasIndex(e => e.Softwarekaartid)
                    .HasName("idx_software_softwarekaartid");

                entity.HasIndex(e => e.Soortid)
                    .HasName("idx_software_soortid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_software_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_software_statusid");

                entity.HasIndex(e => e.Stdresvbehandelaarid)
                    .HasName("idx_software_stdresvbehandelaarid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_software_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_software_uidwijzig");

                entity.HasIndex(e => e.Verzekerdatum)
                    .HasName("idx_software_verzekerdatum");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_software_vestigingid");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_software_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_software_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_software_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_software_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_software_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_software_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_software_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aankoopbedrag)
                    .HasColumnName("aankoopbedrag")
                    .HasColumnType("money");

                entity.Property(e => e.Aanschafdatum)
                    .HasColumnName("aanschafdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Aanspreekpuntid).HasColumnName("aanspreekpuntid");

                entity.Property(e => e.Aantallicenties).HasColumnName("aantallicenties");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afschrijftermijn).HasColumnName("afschrijftermijn");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Artikelbestellinkid).HasColumnName("artikelbestellinkid");

                entity.Property(e => e.Artikelstatusid).HasColumnName("artikelstatusid");

                entity.Property(e => e.Artikelwordtobject).HasColumnName("artikelwordtobject");

                entity.Property(e => e.Attentieid).HasColumnName("attentieid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelaanvraagid).HasColumnName("bestelaanvraagid");

                entity.Property(e => e.Bestelbaarinssh).HasColumnName("bestelbaarinssh");

                entity.Property(e => e.Bestellingid).HasColumnName("bestellingid");

                entity.Property(e => e.Blocktime).HasColumnName("blocktime");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Configuratieid).HasColumnName("configuratieid");

                entity.Property(e => e.Contractdatum)
                    .HasColumnName("contractdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Contractnummer)
                    .IsRequired()
                    .HasColumnName("contractnummer")
                    .HasMaxLength(20);

                entity.Property(e => e.CostsHightariff)
                    .HasColumnName("costs_hightariff")
                    .HasColumnType("money");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumeersteonderhoud)
                    .HasColumnName("datumeersteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumgeplandonderhoud)
                    .HasColumnName("datumgeplandonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumlaatsteonderhoud)
                    .HasColumnName("datumlaatsteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diversen)
                    .HasColumnName("diversen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Diversenonderhoud)
                    .HasColumnName("diversenonderhoud")
                    .HasColumnType("ntext");

                entity.Property(e => e.Escrowcontract).HasColumnName("escrowcontract");

                entity.Property(e => e.Garantiedatum)
                    .HasColumnName("garantiedatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gescandelicenties).HasColumnName("gescandelicenties");

                entity.Property(e => e.Groepid).HasColumnName("groepid");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.Heeftattributen).HasColumnName("heeftattributen");

                entity.Property(e => e.Heeftonderhoudsplan).HasColumnName("heeftonderhoudsplan");

                entity.Property(e => e.Huidigevoorraad).HasColumnName("huidigevoorraad");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Installatiedoorid).HasColumnName("installatiedoorid");

                entity.Property(e => e.Korteomschrijving)
                    .IsRequired()
                    .HasColumnName("korteomschrijving")
                    .HasMaxLength(40);

                entity.Property(e => e.Leaseaanvangsdatum)
                    .HasColumnName("leaseaanvangsdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leasecontractnummer)
                    .IsRequired()
                    .HasColumnName("leasecontractnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Leaseeinddatum)
                    .HasColumnName("leaseeinddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leaseinfo).HasColumnName("leaseinfo");

                entity.Property(e => e.Leaseperiode).HasColumnName("leaseperiode");

                entity.Property(e => e.Leaseprijs)
                    .HasColumnName("leaseprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Licentieprijs)
                    .HasColumnName("licentieprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Licentiesoortid).HasColumnName("licentiesoortid");

                entity.Property(e => e.Licentiesover).HasColumnName("licentiesover");

                entity.Property(e => e.Licentiesovervolgenstopsis).HasColumnName("licentiesovervolgenstopsis");

                entity.Property(e => e.Locatiedocumentatie)
                    .HasColumnName("locatiedocumentatie")
                    .HasMaxLength(1024);

                entity.Property(e => e.Locatieprogrammatuur)
                    .HasColumnName("locatieprogrammatuur")
                    .HasMaxLength(1024);

                entity.Property(e => e.Lokatieid).HasColumnName("lokatieid");

                entity.Property(e => e.Merkid).HasColumnName("merkid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(60);

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Objecttype)
                    .IsRequired()
                    .HasColumnName("objecttype")
                    .HasMaxLength(50);

                entity.Property(e => e.OnderhoudDoorid).HasColumnName("onderhoud_doorid");

                entity.Property(e => e.Onderhoudcontract).HasColumnName("onderhoudcontract");

                entity.Property(e => e.Onderhoudnummer)
                    .IsRequired()
                    .HasColumnName("onderhoudnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Onderhoudprijs)
                    .HasColumnName("onderhoudprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Onderhoudresponsietijd).HasColumnName("onderhoudresponsietijd");

                entity.Property(e => e.Onderhoudslacontractid).HasColumnName("onderhoudslacontractid");

                entity.Property(e => e.Onderhoudslagebruikt).HasColumnName("onderhoudslagebruikt");

                entity.Property(e => e.Onderhoudsoortid).HasColumnName("onderhoudsoortid");

                entity.Property(e => e.Onderhoudsplanid).HasColumnName("onderhoudsplanid");

                entity.Property(e => e.Onderhoudtot)
                    .HasColumnName("onderhoudtot")
                    .HasColumnType("datetime");

                entity.Property(e => e.Onderhoudvanaf)
                    .HasColumnName("onderhoudvanaf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Opmerking)
                    .IsRequired()
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.Opslagmediumid).HasColumnName("opslagmediumid");

                entity.Property(e => e.Persoongroepid).HasColumnName("persoongroepid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Plaats).HasColumnName("plaats");

                entity.Property(e => e.Plaatskeuze).HasColumnName("plaatskeuze");

                entity.Property(e => e.RefAanspreekpunt)
                    .IsRequired()
                    .HasColumnName("ref_aanspreekpunt")
                    .HasMaxLength(109);

                entity.Property(e => e.RefConfiguratie)
                    .IsRequired()
                    .HasColumnName("ref_configuratie")
                    .HasMaxLength(30);

                entity.Property(e => e.RefFinbudgethouder)
                    .IsRequired()
                    .HasColumnName("ref_finbudgethouder")
                    .HasMaxLength(100);

                entity.Property(e => e.RefKleur).HasColumnName("ref_kleur");

                entity.Property(e => e.RefLeverancier)
                    .IsRequired()
                    .HasColumnName("ref_leverancier")
                    .HasMaxLength(60);

                entity.Property(e => e.RefLokatie)
                    .IsRequired()
                    .HasColumnName("ref_lokatie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefOrdernumber)
                    .HasColumnName("ref_ordernumber")
                    .HasMaxLength(30);

                entity.Property(e => e.RefPersoon)
                    .IsRequired()
                    .HasColumnName("ref_persoon")
                    .HasMaxLength(109);

                entity.Property(e => e.RefPersoongroep)
                    .IsRequired()
                    .HasColumnName("ref_persoongroep")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProduct)
                    .IsRequired()
                    .HasColumnName("ref_product")
                    .HasMaxLength(100);

                entity.Property(e => e.RefSoort)
                    .IsRequired()
                    .HasColumnName("ref_soort")
                    .HasMaxLength(100);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.ReservableOfficehoursSsd).HasColumnName("reservable_officehours_ssd");

                entity.Property(e => e.Reservablewithlocation).HasColumnName("reservablewithlocation");

                entity.Property(e => e.Reserveerbaaractiveerbaar).HasColumnName("reserveerbaaractiveerbaar");

                entity.Property(e => e.Reserveerbaarkantooruren).HasColumnName("reserveerbaarkantooruren");

                entity.Property(e => e.Reserveerbaarsecure).HasColumnName("reserveerbaarsecure");

                entity.Property(e => e.Reserveerbaarsshd).HasColumnName("reserveerbaarsshd");

                entity.Property(e => e.Reservzichtbaarsshd).HasColumnName("reservzichtbaarsshd");

                entity.Property(e => e.Restwaarde)
                    .HasColumnName("restwaarde")
                    .HasColumnType("money");

                entity.Property(e => e.RmSpecification)
                    .IsRequired()
                    .HasColumnName("rm_specification")
                    .HasMaxLength(100);

                entity.Property(e => e.ServicewindowOption).HasColumnName("servicewindow_option");

                entity.Property(e => e.Servicewindowid).HasColumnName("servicewindowid");

                entity.Property(e => e.Sjabloonobjectid).HasColumnName("sjabloonobjectid");

                entity.Property(e => e.Softwarekaartid).HasColumnName("softwarekaartid");

                entity.Property(e => e.Soortid).HasColumnName("soortid");

                entity.Property(e => e.Specificatie)
                    .IsRequired()
                    .HasColumnName("specificatie")
                    .HasMaxLength(60);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Stdresvbehandelaarid).HasColumnName("stdresvbehandelaarid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veiligvoorraad).HasColumnName("veiligvoorraad");

                entity.Property(e => e.Verhuurborg)
                    .HasColumnName("verhuurborg")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijs)
                    .HasColumnName("verhuurprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijssysteem).HasColumnName("verhuurprijssysteem");

                entity.Property(e => e.Verhuurtekst)
                    .HasColumnName("verhuurtekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.Verkoopprijs)
                    .HasColumnName("verkoopprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verzekerdatum)
                    .HasColumnName("verzekerdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Vnc).HasColumnName("vnc");

                entity.Property(e => e.Vnchostnaam)
                    .HasColumnName("vnchostnaam")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Wburl)
                    .IsRequired()
                    .HasColumnName("wburl")
                    .HasMaxLength(1024);

                entity.Property(e => e.Webbrowser).HasColumnName("webbrowser");

                entity.HasOne(d => d.Aanspreekpunt)
                    .WithMany(p => p.SoftwareAanspreekpunt)
                    .HasForeignKey(d => d.Aanspreekpuntid)
                    .HasConstraintName("fk_actiedoor_aanspreekpuntid_software");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_software");

                entity.HasOne(d => d.Artikelbestellink)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Artikelbestellinkid)
                    .HasConstraintName("fk_artikel_bestel_link_artikelbestellinkid_software");

                entity.HasOne(d => d.Artikelstatus)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Artikelstatusid)
                    .HasConstraintName("fk_artikelstatus_artikelstatusid_software");

                entity.HasOne(d => d.Attentie)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Attentieid)
                    .HasConstraintName("fk_attentie_attentieid_software");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.SoftwareAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_software");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.SoftwareAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_software");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.SoftwareAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_software");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.SoftwareAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_software");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.SoftwareAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_software");

                entity.HasOne(d => d.Bestelaanvraag)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Bestelaanvraagid)
                    .HasConstraintName("fk_bestelaanvraag_bestelaanvraagid_software");

                entity.HasOne(d => d.Bestelling)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Bestellingid)
                    .HasConstraintName("fk_bestellingen_bestellingid_software");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_software");

                entity.HasOne(d => d.Configuratie)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Configuratieid)
                    .HasConstraintName("fk_configuratie_configuratieid_software");

                entity.HasOne(d => d.Groep)
                    .WithMany(p => p.SoftwareGroep)
                    .HasForeignKey(d => d.Groepid)
                    .HasConstraintName("fk_persoongroep_groepid_software");

                entity.HasOne(d => d.Installatiedoor)
                    .WithMany(p => p.SoftwareInstallatiedoor)
                    .HasForeignKey(d => d.Installatiedoorid)
                    .HasConstraintName("fk_actiedoor_installatiedoorid_software");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.SoftwareLeverancier)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_software");

                entity.HasOne(d => d.Licentiesoort)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Licentiesoortid)
                    .HasConstraintName("fk_licentiesoort_licentiesoortid_software");

                entity.HasOne(d => d.Lokatie)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Lokatieid)
                    .HasConstraintName("fk_locatie_lokatieid_software");

                entity.HasOne(d => d.Merk)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Merkid)
                    .HasConstraintName("fk_objectmerk_merkid_software");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_software");

                entity.HasOne(d => d.OnderhoudDoor)
                    .WithMany(p => p.SoftwareOnderhoudDoor)
                    .HasForeignKey(d => d.OnderhoudDoorid)
                    .HasConstraintName("fk_leverancier_onderhoud_doorid_software");

                entity.HasOne(d => d.Onderhoudslacontract)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Onderhoudslacontractid)
                    .HasConstraintName("fk_dnocontract_onderhoudslacontractid_software");

                entity.HasOne(d => d.Onderhoudsoort)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Onderhoudsoortid)
                    .HasConstraintName("fk_slacontractsoort_onderhoudsoortid_software");

                entity.HasOne(d => d.Onderhoudsplan)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Onderhoudsplanid)
                    .HasConstraintName("fk_onderhoudsplan_onderhoudsplanid_software");

                entity.HasOne(d => d.Opslagmedium)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Opslagmediumid)
                    .HasConstraintName("fk_opslagmedium_opslagmediumid_software");

                entity.HasOne(d => d.Persoongroep)
                    .WithMany(p => p.SoftwarePersoongroep)
                    .HasForeignKey(d => d.Persoongroepid)
                    .HasConstraintName("fk_persoongroep_persoongroepid_software");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_software");

                entity.HasOne(d => d.Servicewindow)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Servicewindowid)
                    .HasConstraintName("fk_servicewindow_servicewindowid_software");

                entity.HasOne(d => d.Sjabloonobject)
                    .WithMany(p => p.InverseSjabloonobject)
                    .HasForeignKey(d => d.Sjabloonobjectid)
                    .HasConstraintName("fk_software_sjabloonobjectid_software");

                entity.HasOne(d => d.Softwarekaart)
                    .WithMany(p => p.InverseSoftwarekaart)
                    .HasForeignKey(d => d.Softwarekaartid)
                    .HasConstraintName("fk_software_softwarekaartid_software");

                entity.HasOne(d => d.Soort)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Soortid)
                    .HasConstraintName("fk_objectsoort_soortid_software");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_objectstatus_statusid_software");

                entity.HasOne(d => d.Stdresvbehandelaar)
                    .WithMany(p => p.SoftwareStdresvbehandelaar)
                    .HasForeignKey(d => d.Stdresvbehandelaarid)
                    .HasConstraintName("fk_actiedoor_stdresvbehandelaarid_software");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SoftwareUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_software");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SoftwareUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_software");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.Software)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_software");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.SoftwareVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_software");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.SoftwareVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_software");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.SoftwareVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_software");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.SoftwareVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_software");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.SoftwareVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_software");
            });

            modelBuilder.Entity<SoftwareDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("software__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_software__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_software__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_software__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_software__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_software__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_software__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.SoftwareDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_software_kaartid_software__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.SoftwareDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_software__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SoftwareDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_software__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SoftwareDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_software__documenten");
            });

            modelBuilder.Entity<SoftwareEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("software__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_software__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_software__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_software__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.SoftwareEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_software__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.SoftwareEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_software_kaartid_software__emailberichten");
            });

            modelBuilder.Entity<SoftwareLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("software__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_software__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_software__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_software__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_software__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_software__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_software__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.SoftwareLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_software_kaartid_software__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.SoftwareLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_software__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SoftwareLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_software__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SoftwareLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_software__logboek");
            });

            modelBuilder.Entity<SoftwareOptionalgrid>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("software__optionalgrid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_software__optionalgrid_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_software__optionalgrid_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_software__optionalgrid_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_software__optionalgrid_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_software__optionalgrid_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_software__optionalgrid_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_software__optionalgrid_parentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_software__optionalgrid_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_software__optionalgrid_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_software__optionalgrid_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_software__optionalgrid_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_software__optionalgrid_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_software__optionalgrid_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_software__optionalgrid_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.SoftwareOptionalgridAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_software__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.SoftwareOptionalgridAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_software__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.SoftwareOptionalgridAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_software__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.SoftwareOptionalgridAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_software__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.SoftwareOptionalgridAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_software__optionalgrid");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.SoftwareOptionalgrid)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_software_parentid_software__optionalgrid");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SoftwareOptionalgridUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_software__optionalgrid");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SoftwareOptionalgridUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_software__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.SoftwareOptionalgridVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_software__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.SoftwareOptionalgridVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_software__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.SoftwareOptionalgridVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_software__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.SoftwareOptionalgridVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_software__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.SoftwareOptionalgridVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_software__optionalgrid");
            });

            modelBuilder.Entity<SoftwareTopsissoftwareLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("software_topsissoftware_link");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_software_topsissoftware_link_importid");

                entity.HasIndex(e => e.Softwareid)
                    .HasName("idx_software_topsissoftware_link_softwareid");

                entity.HasIndex(e => e.Topsissoftwareid)
                    .HasName("idx_software_topsissoftware_link_topsissoftwareid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Softwareid).HasColumnName("softwareid");

                entity.Property(e => e.Topsissoftwareid).HasColumnName("topsissoftwareid");

                entity.HasOne(d => d.Software)
                    .WithMany(p => p.SoftwareTopsissoftwareLink)
                    .HasForeignKey(d => d.Softwareid)
                    .HasConstraintName("fk_software_softwareid_software_topsissoftware_link");

                entity.HasOne(d => d.Topsissoftware)
                    .WithMany(p => p.SoftwareTopsissoftwareLink)
                    .HasForeignKey(d => d.Topsissoftwareid)
                    .HasConstraintName("fk_topsissoftware_topsissoftwareid_software_topsissoftware_link");
            });

            modelBuilder.Entity<Soort>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("soort");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_soort_archief");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_soort_importid");

                entity.HasIndex(e => e.Rechtid)
                    .HasName("idx_soort_rechtid");

                entity.HasIndex(e => e.Usergroepid)
                    .HasName("idx_soort_usergroepid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aanmaak).HasColumnName("aanmaak");

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Archiveer).HasColumnName("archiveer");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Lezen).HasColumnName("lezen");

                entity.Property(e => e.Rechtid).HasColumnName("rechtid");

                entity.Property(e => e.Schrijven).HasColumnName("schrijven");

                entity.Property(e => e.Selectie).HasColumnName("selectie");

                entity.Property(e => e.Usergroepid).HasColumnName("usergroepid");

                entity.Property(e => e.Verw).HasColumnName("verw");

                entity.Property(e => e.Wijzig).HasColumnName("wijzig");

                entity.HasOne(d => d.Recht)
                    .WithMany(p => p.Soort)
                    .HasForeignKey(d => d.Rechtid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_recht_rechtid_soort");

                entity.HasOne(d => d.Usergroep)
                    .WithMany(p => p.Soort)
                    .HasForeignKey(d => d.Usergroepid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_gebruiker_usergroepid_soort");
            });

            modelBuilder.Entity<Soortaansluiting>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("soortaansluiting");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_soortaansluiting_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_soortaansluiting_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_soortaansluiting_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Soortabonnement>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("soortabonnement");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_soortabonnement_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_soortabonnement_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_soortabonnement_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Soortbinnenkomst>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("soortbinnenkomst");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_soortbinnenkomst_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_soortbinnenkomst_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_soortbinnenkomst_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Soortmelding>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("soortmelding");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_soortmelding_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_soortmelding_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_soortmelding_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Specialegebeurtenislink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("specialegebeurtenislink");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actieid).HasColumnName("actieid");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasColumnName("code")
                    .HasMaxLength(25);

                entity.Property(e => e.Entityversion).HasColumnName("entityversion");

                entity.Property(e => e.Tabelstatus)
                    .IsRequired()
                    .HasColumnName("tabelstatus")
                    .HasMaxLength(40);

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasColumnName("type")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<SsdForm>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ssd_form");

                entity.HasIndex(e => e.Archivereasonid)
                    .HasName("idx_ssd_form_archivereasonid");

                entity.HasIndex(e => e.Cardtype)
                    .HasName("idx_ssd_form_cardtype");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_ssd_form_importid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_ssd_form_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_ssd_form_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_ssd_form_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archivereasonid).HasColumnName("archivereasonid");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Card)
                    .HasColumnName("card")
                    .HasColumnType("ntext");

                entity.Property(e => e.Cardtype)
                    .IsRequired()
                    .HasColumnName("cardtype")
                    .HasMaxLength(50);

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Form)
                    .HasColumnName("form")
                    .HasColumnType("ntext");

                entity.Property(e => e.Frontpage).HasColumnName("frontpage");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Published).HasColumnName("published");

                entity.Property(e => e.Standardform).HasColumnName("standardform");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Version).HasColumnName("version");

                entity.HasOne(d => d.Archivereason)
                    .WithMany(p => p.SsdForm)
                    .HasForeignKey(d => d.Archivereasonid)
                    .HasConstraintName("fk_archiefreden_archivereasonid_ssd_form");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SsdFormUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_ssd_form");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SsdFormUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_ssd_form");
            });

            modelBuilder.Entity<SsdFormTranslations>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ssd_form_translations");

                entity.HasIndex(e => e.Formid)
                    .HasName("idx_ssd_form_translations_formid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_ssd_form_translations_importid");

                entity.HasIndex(e => e.Localeid)
                    .HasName("idx_ssd_form_translations_localeid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Formid).HasColumnName("formid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Localeid).HasColumnName("localeid");

                entity.Property(e => e.Published).HasColumnName("published");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasColumnName("title")
                    .HasMaxLength(100);

                entity.Property(e => e.Translation)
                    .HasColumnName("translation")
                    .HasColumnType("ntext");

                entity.HasOne(d => d.Form)
                    .WithMany(p => p.SsdFormTranslations)
                    .HasForeignKey(d => d.Formid)
                    .HasConstraintName("fk_ssd_form_formid_ssd_form_translations");

                entity.HasOne(d => d.Locale)
                    .WithMany(p => p.SsdFormTranslations)
                    .HasForeignKey(d => d.Localeid)
                    .HasConstraintName("fk_kennistaal_localeid_ssd_form_translations");
            });

            modelBuilder.Entity<SsdSubmittedFormContent>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ssd_submitted_form_content");

                entity.HasIndex(e => e.Cardid)
                    .HasName("uidx_ssd_submitted_form_content_cardid")
                    .IsUnique();

                entity.HasIndex(e => e.Formid)
                    .HasName("idx_ssd_submitted_form_content_formid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_ssd_submitted_form_content_importid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Cardid)
                    .IsRequired()
                    .HasColumnName("cardid")
                    .HasMaxLength(36);

                entity.Property(e => e.FormVersion).HasColumnName("form_version");

                entity.Property(e => e.Formid).HasColumnName("formid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.SubmittedData)
                    .HasColumnName("submitted_data")
                    .HasColumnType("ntext");

                entity.HasOne(d => d.Form)
                    .WithMany(p => p.SsdSubmittedFormContent)
                    .HasForeignKey(d => d.Formid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_ssd_form_formid_ssd_submitted_form_content");
            });

            modelBuilder.Entity<SuppliercontactMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("suppliercontact__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_suppliercontact__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_suppliercontact__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_suppliercontact__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_suppliercontact__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_suppliercontact__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_suppliercontact__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_suppliercontact__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_suppliercontact__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_suppliercontact__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.SuppliercontactMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_suppliercontact__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.SuppliercontactMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_leveranciercontactpersoon_parentid_suppliercontact__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.SuppliercontactMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_suppliercontact__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SuppliercontactMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_suppliercontact__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SuppliercontactMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_suppliercontact__memo_history");
            });

            modelBuilder.Entity<Survey>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("survey");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_survey_archiefredenid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_survey_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_survey_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_survey_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_survey_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_survey_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_survey_importid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_survey_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_survey_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_survey_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_survey_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_survey_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_survey_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_survey_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_survey_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("ntext");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(80);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Survey)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_survey");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.SurveyAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_survey");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.SurveyAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_survey");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.SurveyAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_survey");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.SurveyAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_survey");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.SurveyAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_survey");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SurveyUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_survey");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SurveyUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_survey");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.SurveyVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_survey");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.SurveyVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_survey");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.SurveyVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_survey");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.SurveyVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_survey");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.SurveyVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_survey");
            });

            modelBuilder.Entity<Surveyanswer>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("surveyanswer");

                entity.HasIndex(e => e.Surveyquestionid)
                    .HasName("idx_surveyanswer_surveyquestionid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_surveyanswer_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_surveyanswer_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Answertype).HasColumnName("answertype");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(80);

                entity.Property(e => e.Rank).HasColumnName("rank");

                entity.Property(e => e.Surveyquestionid).HasColumnName("surveyquestionid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Surveyquestion)
                    .WithMany(p => p.Surveyanswer)
                    .HasForeignKey(d => d.Surveyquestionid)
                    .HasConstraintName("fk_surveyquestion_surveyquestionid_surveyanswer");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SurveyanswerUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_surveyanswer");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SurveyanswerUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_surveyanswer");
            });

            modelBuilder.Entity<SurveyDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("survey__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_survey__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_survey__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_survey__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_survey__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.SurveyDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_survey_kaartid_survey__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.SurveyDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_survey__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SurveyDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_survey__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SurveyDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_survey__documenten");
            });

            modelBuilder.Entity<SurveyEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("survey__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_survey__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_survey__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.SurveyEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_survey__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.SurveyEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_survey_kaartid_survey__emailberichten");
            });

            modelBuilder.Entity<SurveyLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("survey__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_survey__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_survey__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_survey__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_survey__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.SurveyLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_survey_kaartid_survey__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.SurveyLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_survey__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SurveyLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_survey__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SurveyLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_survey__logboek");
            });

            modelBuilder.Entity<SurveyMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("survey__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_survey__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_survey__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_survey__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_survey__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_survey__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_survey__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_survey__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_survey__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_survey__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.SurveyMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_survey__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.SurveyMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_survey_parentid_survey__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.SurveyMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_survey__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SurveyMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_survey__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SurveyMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_survey__memo_history");
            });

            modelBuilder.Entity<Surveyquestion>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("surveyquestion");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_surveyquestion_importid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_surveyquestion_status");

                entity.HasIndex(e => e.Surveyid)
                    .HasName("idx_surveyquestion_surveyid");

                entity.HasIndex(e => e.Surveyquestioncategoryid)
                    .HasName("idx_surveyquestion_surveyquestioncategoryid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_surveyquestion_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_surveyquestion_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Answertype).HasColumnName("answertype");

                entity.Property(e => e.Comment)
                    .HasColumnName("comment")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Mandatory).HasColumnName("mandatory");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(60);

                entity.Property(e => e.Question)
                    .HasColumnName("question")
                    .HasColumnType("ntext");

                entity.Property(e => e.Rank).HasColumnName("rank");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Surveyid).HasColumnName("surveyid");

                entity.Property(e => e.Surveyquestioncategoryid).HasColumnName("surveyquestioncategoryid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Survey)
                    .WithMany(p => p.Surveyquestion)
                    .HasForeignKey(d => d.Surveyid)
                    .HasConstraintName("fk_survey_surveyid_surveyquestion");

                entity.HasOne(d => d.Surveyquestioncategory)
                    .WithMany(p => p.Surveyquestion)
                    .HasForeignKey(d => d.Surveyquestioncategoryid)
                    .HasConstraintName("fk_surveyquestioncategory_surveyquestioncategoryid_surveyquestion");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SurveyquestionUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_surveyquestion");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SurveyquestionUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_surveyquestion");
            });

            modelBuilder.Entity<Surveyquestioncategory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("surveyquestioncategory");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_surveyquestioncategory_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_surveyquestioncategory_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_surveyquestioncategory_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<SurveyquestionDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("surveyquestion__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_surveyquestion__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_surveyquestion__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_surveyquestion__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_surveyquestion__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.SurveyquestionDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_surveyquestion_kaartid_surveyquestion__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.SurveyquestionDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_surveyquestion__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SurveyquestionDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_surveyquestion__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SurveyquestionDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_surveyquestion__documenten");
            });

            modelBuilder.Entity<SurveyquestionEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("surveyquestion__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_surveyquestion__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_surveyquestion__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.SurveyquestionEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_surveyquestion__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.SurveyquestionEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_surveyquestion_kaartid_surveyquestion__emailberichten");
            });

            modelBuilder.Entity<SurveyquestionLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("surveyquestion__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_surveyquestion__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_surveyquestion__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_surveyquestion__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_surveyquestion__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.SurveyquestionLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_surveyquestion_kaartid_surveyquestion__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.SurveyquestionLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_surveyquestion__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SurveyquestionLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_surveyquestion__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SurveyquestionLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_surveyquestion__logboek");
            });

            modelBuilder.Entity<SurveyquestionMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("surveyquestion__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_surveyquestion__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_surveyquestion__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_surveyquestion__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_surveyquestion__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_surveyquestion__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_surveyquestion__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_surveyquestion__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_surveyquestion__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_surveyquestion__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.SurveyquestionMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_surveyquestion__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.SurveyquestionMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_surveyquestion_parentid_surveyquestion__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.SurveyquestionMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_surveyquestion__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SurveyquestionMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_surveyquestion__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SurveyquestionMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_surveyquestion__memo_history");
            });

            modelBuilder.Entity<SwStatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("sw_status");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_sw_status_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_sw_status_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_sw_status_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<SwUitzonderingen>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("sw_uitzonderingen");

                entity.HasIndex(e => e.Datum)
                    .HasName("idx_sw_uitzonderingen_datum");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_sw_uitzonderingen_importid");

                entity.HasIndex(e => e.Swid)
                    .HasName("idx_sw_uitzonderingen_swid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datum)
                    .HasColumnName("datum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(60);

                entity.Property(e => e.Openingstijd).HasColumnName("openingstijd");

                entity.Property(e => e.Sluitingstijd).HasColumnName("sluitingstijd");

                entity.Property(e => e.Swid).HasColumnName("swid");

                entity.Property(e => e.Workday).HasColumnName("workday");

                entity.HasOne(d => d.Sw)
                    .WithMany(p => p.SwUitzonderingen)
                    .HasForeignKey(d => d.Swid)
                    .HasConstraintName("fk_servicewindow_swid_sw_uitzonderingen");
            });

            modelBuilder.Entity<Systemevents>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("systemevents");

                entity.HasIndex(e => e.Systemeventdate)
                    .HasName("idx_systemevents_systemeventdate");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Category).HasColumnName("category");

                entity.Property(e => e.Log)
                    .HasColumnName("log")
                    .HasColumnType("ntext");

                entity.Property(e => e.Systemeventdate)
                    .HasColumnName("systemeventdate")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<SystemeventsDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("systemevents__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_systemevents__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_systemevents__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_systemevents__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_systemevents__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.SystemeventsDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_systemevents_kaartid_systemevents__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.SystemeventsDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_systemevents__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SystemeventsDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_systemevents__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SystemeventsDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_systemevents__documenten");
            });

            modelBuilder.Entity<SystemeventsEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("systemevents__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_systemevents__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_systemevents__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.SystemeventsEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_systemevents__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.SystemeventsEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_systemevents_kaartid_systemevents__emailberichten");
            });

            modelBuilder.Entity<SystemeventsLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("systemevents__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_systemevents__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_systemevents__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_systemevents__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_systemevents__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.SystemeventsLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_systemevents_kaartid_systemevents__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.SystemeventsLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_systemevents__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.SystemeventsLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_systemevents__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.SystemeventsLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_systemevents__logboek");
            });

            modelBuilder.Entity<Taskrole>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("taskrole");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_taskrole_archiefredenid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_taskrole_importid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_taskrole_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_taskrole_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_taskrole_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Availableforall).HasColumnName("availableforall");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Colour).HasColumnName("colour");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasColumnName("description")
                    .HasMaxLength(256);

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(256);

                entity.Property(e => e.Operatoravailable).HasColumnName("operatoravailable");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Taskrole)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_taskrole");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.TaskroleUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_taskrole");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.TaskroleUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_taskrole");
            });

            modelBuilder.Entity<Taskroleoperatorgrouplink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("taskroleoperatorgrouplink");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_taskroleoperatorgrouplink_operatorgroupid");

                entity.HasIndex(e => e.Taskroleid)
                    .HasName("idx_taskroleoperatorgrouplink_taskroleid");

                entity.HasIndex(e => new { e.Taskroleid, e.Operatorgroupid })
                    .HasName("uidx_taskroleoperatorgrouplink_taskroleid_operatorgroupid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Taskroleid).HasColumnName("taskroleid");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.Taskroleoperatorgrouplink)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_taskroleoperatorgrouplink");

                entity.HasOne(d => d.Taskrole)
                    .WithMany(p => p.Taskroleoperatorgrouplink)
                    .HasForeignKey(d => d.Taskroleid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_taskrole_taskroleid_taskroleoperatorgrouplink");
            });

            modelBuilder.Entity<Taskrolepriority>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("taskrolepriority");

                entity.HasIndex(e => e.Taskroleid)
                    .HasName("idx_taskrolepriority_taskroleid");

                entity.HasIndex(e => e.Userid)
                    .HasName("idx_taskrolepriority_userid");

                entity.HasIndex(e => new { e.Taskroleid, e.Userid })
                    .HasName("uidx_taskrolepriority_taskroleid_userid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Rank).HasColumnName("rank");

                entity.Property(e => e.Taskroleid).HasColumnName("taskroleid");

                entity.Property(e => e.Userid).HasColumnName("userid");

                entity.HasOne(d => d.Taskrole)
                    .WithMany(p => p.Taskrolepriority)
                    .HasForeignKey(d => d.Taskroleid)
                    .HasConstraintName("fk_taskrole_taskroleid_taskrolepriority");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Taskrolepriority)
                    .HasForeignKey(d => d.Userid)
                    .HasConstraintName("fk_gebruiker_userid_taskrolepriority");
            });

            modelBuilder.Entity<Telefonie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("telefonie");

                entity.HasIndex(e => e.Aanschafdatum)
                    .HasName("idx_telefonie_aanschafdatum");

                entity.HasIndex(e => e.Aanspreekpuntid)
                    .HasName("idx_telefonie_aanspreekpuntid");

                entity.HasIndex(e => e.Abeinddatum)
                    .HasName("idx_telefonie_abeinddatum");

                entity.HasIndex(e => e.Abstartdatum)
                    .HasName("idx_telefonie_abstartdatum");

                entity.HasIndex(e => e.Abverlengdatum)
                    .HasName("idx_telefonie_abverlengdatum");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_telefonie_archiefredenid");

                entity.HasIndex(e => e.Artikelbestellinkid)
                    .HasName("idx_telefonie_artikelbestellinkid");

                entity.HasIndex(e => e.Artikelstatusid)
                    .HasName("idx_telefonie_artikelstatusid");

                entity.HasIndex(e => e.Attentieid)
                    .HasName("idx_telefonie_attentieid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_telefonie_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_telefonie_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_telefonie_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_telefonie_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_telefonie_attvrijeopzoek5");

                entity.HasIndex(e => e.Bestelaanvraagid)
                    .HasName("idx_telefonie_bestelaanvraagid");

                entity.HasIndex(e => e.Bestellingid)
                    .HasName("idx_telefonie_bestellingid");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_telefonie_budgethouderid");

                entity.HasIndex(e => e.Configuratieid)
                    .HasName("idx_telefonie_configuratieid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_telefonie_dataanmk");

                entity.HasIndex(e => e.Datumeersteonderhoud)
                    .HasName("idx_telefonie_datumeersteonderhoud");

                entity.HasIndex(e => e.Datumgeplandonderhoud)
                    .HasName("idx_telefonie_datumgeplandonderhoud");

                entity.HasIndex(e => e.Datumlaatsteonderhoud)
                    .HasName("idx_telefonie_datumlaatsteonderhoud");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_telefonie_datwijzig");

                entity.HasIndex(e => e.Garantiedatum)
                    .HasName("idx_telefonie_garantiedatum");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_telefonie_importid");

                entity.HasIndex(e => e.Installatiedoorid)
                    .HasName("idx_telefonie_installatiedoorid");

                entity.HasIndex(e => e.Leaseaanvangsdatum)
                    .HasName("idx_telefonie_leaseaanvangsdatum");

                entity.HasIndex(e => e.Leaseeinddatum)
                    .HasName("idx_telefonie_leaseeinddatum");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_telefonie_leverancierid");

                entity.HasIndex(e => e.Lokatieid)
                    .HasName("idx_telefonie_lokatieid");

                entity.HasIndex(e => e.Merkid)
                    .HasName("idx_telefonie_merkid");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_telefonie_naam");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_telefonie_objectid");

                entity.HasIndex(e => e.Objecttypeid)
                    .HasName("idx_telefonie_objecttypeid");

                entity.HasIndex(e => e.OnderhoudDoorid)
                    .HasName("idx_telefonie_onderhoud_doorid");

                entity.HasIndex(e => e.Onderhoudslacontractid)
                    .HasName("idx_telefonie_onderhoudslacontractid");

                entity.HasIndex(e => e.Onderhoudsoortid)
                    .HasName("idx_telefonie_onderhoudsoortid");

                entity.HasIndex(e => e.Onderhoudsplanid)
                    .HasName("idx_telefonie_onderhoudsplanid");

                entity.HasIndex(e => e.Onderhoudtot)
                    .HasName("idx_telefonie_onderhoudtot");

                entity.HasIndex(e => e.Onderhoudvanaf)
                    .HasName("idx_telefonie_onderhoudvanaf");

                entity.HasIndex(e => e.Persoongroepid)
                    .HasName("idx_telefonie_persoongroepid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_telefonie_persoonid");

                entity.HasIndex(e => e.RefAanspreekpunt)
                    .HasName("idx_telefonie_ref_aanspreekpunt");

                entity.HasIndex(e => e.RefConfiguratie)
                    .HasName("idx_telefonie_ref_configuratie");

                entity.HasIndex(e => e.RefFinbudgethouder)
                    .HasName("idx_telefonie_ref_finbudgethouder");

                entity.HasIndex(e => e.RefKleur)
                    .HasName("idx_telefonie_ref_kleur");

                entity.HasIndex(e => e.RefLeverancier)
                    .HasName("idx_telefonie_ref_leverancier");

                entity.HasIndex(e => e.RefLokatie)
                    .HasName("idx_telefonie_ref_lokatie");

                entity.HasIndex(e => e.RefMerk)
                    .HasName("idx_telefonie_ref_merk");

                entity.HasIndex(e => e.RefOrdernumber)
                    .HasName("idx_telefonie_ref_ordernumber");

                entity.HasIndex(e => e.RefPersoon)
                    .HasName("idx_telefonie_ref_persoon");

                entity.HasIndex(e => e.RefPersoongroep)
                    .HasName("idx_telefonie_ref_persoongroep");

                entity.HasIndex(e => e.RefPlaats1)
                    .HasName("idx_telefonie_ref_plaats1");

                entity.HasIndex(e => e.RefSoort)
                    .HasName("idx_telefonie_ref_soort");

                entity.HasIndex(e => e.RefVestiging)
                    .HasName("idx_telefonie_ref_vestiging");

                entity.HasIndex(e => e.Reserveerbaaractiveerbaar)
                    .HasName("idx_telefonie_reserveerbaaractiveerbaar");

                entity.HasIndex(e => e.Reserveerbaarsecure)
                    .HasName("idx_telefonie_reserveerbaarsecure");

                entity.HasIndex(e => e.Reserveerbaarsshd)
                    .HasName("idx_telefonie_reserveerbaarsshd");

                entity.HasIndex(e => e.Reservzichtbaarsshd)
                    .HasName("idx_telefonie_reservzichtbaarsshd");

                entity.HasIndex(e => e.Serviceid)
                    .HasName("idx_telefonie_serviceid");

                entity.HasIndex(e => e.Servicewindowid)
                    .HasName("idx_telefonie_servicewindowid");

                entity.HasIndex(e => e.Sjabloonobjectid)
                    .HasName("idx_telefonie_sjabloonobjectid");

                entity.HasIndex(e => e.Soortabonnementid)
                    .HasName("idx_telefonie_soortabonnementid");

                entity.HasIndex(e => e.Soortid)
                    .HasName("idx_telefonie_soortid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_telefonie_status");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_telefonie_statusid");

                entity.HasIndex(e => e.Stdresvbehandelaarid)
                    .HasName("idx_telefonie_stdresvbehandelaarid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_telefonie_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_telefonie_uidwijzig");

                entity.HasIndex(e => e.Verzekerdatum)
                    .HasName("idx_telefonie_verzekerdatum");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_telefonie_vestigingid");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_telefonie_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_telefonie_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_telefonie_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_telefonie_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_telefonie_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_telefonie_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_telefonie_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aankoopbedrag)
                    .HasColumnName("aankoopbedrag")
                    .HasColumnType("money");

                entity.Property(e => e.Aanschafdatum)
                    .HasColumnName("aanschafdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Aanspreekpuntid).HasColumnName("aanspreekpuntid");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Abeinddatum)
                    .HasColumnName("abeinddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ablooptijd).HasColumnName("ablooptijd");

                entity.Property(e => e.Abonnement).HasColumnName("abonnement");

                entity.Property(e => e.Abstartdatum)
                    .HasColumnName("abstartdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Abverlengdatum)
                    .HasColumnName("abverlengdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Afschrijftermijn).HasColumnName("afschrijftermijn");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Artikelbestellinkid).HasColumnName("artikelbestellinkid");

                entity.Property(e => e.Artikelstatusid).HasColumnName("artikelstatusid");

                entity.Property(e => e.Artikelwordtobject).HasColumnName("artikelwordtobject");

                entity.Property(e => e.Attentieid).HasColumnName("attentieid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelaanvraagid).HasColumnName("bestelaanvraagid");

                entity.Property(e => e.Bestelbaarinssh).HasColumnName("bestelbaarinssh");

                entity.Property(e => e.Bestellingid).HasColumnName("bestellingid");

                entity.Property(e => e.Blocktime).HasColumnName("blocktime");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Configuratieid).HasColumnName("configuratieid");

                entity.Property(e => e.CostsHightariff)
                    .HasColumnName("costs_hightariff")
                    .HasColumnType("money");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumeersteonderhoud)
                    .HasColumnName("datumeersteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumgeplandonderhoud)
                    .HasColumnName("datumgeplandonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumlaatsteonderhoud)
                    .HasColumnName("datumlaatsteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diversen)
                    .HasColumnName("diversen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Diversenonderhoud)
                    .HasColumnName("diversenonderhoud")
                    .HasColumnType("ntext");

                entity.Property(e => e.Garantiedatum)
                    .HasColumnName("garantiedatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.Heeftonderhoudsplan).HasColumnName("heeftonderhoudsplan");

                entity.Property(e => e.Heeftvoorraad).HasColumnName("heeftvoorraad");

                entity.Property(e => e.Hostnaam)
                    .IsRequired()
                    .HasColumnName("hostnaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Huidigevoorraad).HasColumnName("huidigevoorraad");

                entity.Property(e => e.Imeinummer)
                    .IsRequired()
                    .HasColumnName("imeinummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Installatiedoorid).HasColumnName("installatiedoorid");

                entity.Property(e => e.Ipadres)
                    .IsRequired()
                    .HasColumnName("ipadres")
                    .HasMaxLength(40);

                entity.Property(e => e.Ismobiel).HasColumnName("ismobiel");

                entity.Property(e => e.Kaartnummer)
                    .IsRequired()
                    .HasColumnName("kaartnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Korteomschrijving)
                    .IsRequired()
                    .HasColumnName("korteomschrijving")
                    .HasMaxLength(40);

                entity.Property(e => e.Leaseaanvangsdatum)
                    .HasColumnName("leaseaanvangsdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leasecontractnummer)
                    .IsRequired()
                    .HasColumnName("leasecontractnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Leaseeinddatum)
                    .HasColumnName("leaseeinddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leaseinfo).HasColumnName("leaseinfo");

                entity.Property(e => e.Leaseperiode).HasColumnName("leaseperiode");

                entity.Property(e => e.Leaseprijs)
                    .HasColumnName("leaseprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Lokatieid).HasColumnName("lokatieid");

                entity.Property(e => e.Merkid).HasColumnName("merkid");

                entity.Property(e => e.Mobielnummer)
                    .IsRequired()
                    .HasColumnName("mobielnummer")
                    .HasMaxLength(25);

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(60);

                entity.Property(e => e.Nummer)
                    .IsRequired()
                    .HasColumnName("nummer")
                    .HasMaxLength(25);

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Objecttype)
                    .IsRequired()
                    .HasColumnName("objecttype")
                    .HasMaxLength(100);

                entity.Property(e => e.Objecttypeid).HasColumnName("objecttypeid");

                entity.Property(e => e.OnderhoudDoorid).HasColumnName("onderhoud_doorid");

                entity.Property(e => e.Onderhoudcontract).HasColumnName("onderhoudcontract");

                entity.Property(e => e.Onderhoudnummer)
                    .IsRequired()
                    .HasColumnName("onderhoudnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Onderhoudprijs)
                    .HasColumnName("onderhoudprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Onderhoudresponsietijd).HasColumnName("onderhoudresponsietijd");

                entity.Property(e => e.Onderhoudslacontractid).HasColumnName("onderhoudslacontractid");

                entity.Property(e => e.Onderhoudslagebruikt).HasColumnName("onderhoudslagebruikt");

                entity.Property(e => e.Onderhoudsoortid).HasColumnName("onderhoudsoortid");

                entity.Property(e => e.Onderhoudsplanid).HasColumnName("onderhoudsplanid");

                entity.Property(e => e.Onderhoudtot)
                    .HasColumnName("onderhoudtot")
                    .HasColumnType("datetime");

                entity.Property(e => e.Onderhoudvanaf)
                    .HasColumnName("onderhoudvanaf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Opmerking)
                    .IsRequired()
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.Ordernummer)
                    .IsRequired()
                    .HasColumnName("ordernummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Persoongroepid).HasColumnName("persoongroepid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Plaats).HasColumnName("plaats");

                entity.Property(e => e.Plaatskeuze).HasColumnName("plaatskeuze");

                entity.Property(e => e.Pukcode)
                    .IsRequired()
                    .HasColumnName("pukcode")
                    .HasMaxLength(35);

                entity.Property(e => e.RefAanspreekpunt)
                    .IsRequired()
                    .HasColumnName("ref_aanspreekpunt")
                    .HasMaxLength(109);

                entity.Property(e => e.RefConfiguratie)
                    .IsRequired()
                    .HasColumnName("ref_configuratie")
                    .HasMaxLength(30);

                entity.Property(e => e.RefFinbudgethouder)
                    .IsRequired()
                    .HasColumnName("ref_finbudgethouder")
                    .HasMaxLength(100);

                entity.Property(e => e.RefKleur).HasColumnName("ref_kleur");

                entity.Property(e => e.RefLeverancier)
                    .IsRequired()
                    .HasColumnName("ref_leverancier")
                    .HasMaxLength(60);

                entity.Property(e => e.RefLokatie)
                    .IsRequired()
                    .HasColumnName("ref_lokatie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefMerk)
                    .IsRequired()
                    .HasColumnName("ref_merk")
                    .HasMaxLength(100);

                entity.Property(e => e.RefOrdernumber)
                    .HasColumnName("ref_ordernumber")
                    .HasMaxLength(30);

                entity.Property(e => e.RefPersoon)
                    .IsRequired()
                    .HasColumnName("ref_persoon")
                    .HasMaxLength(109);

                entity.Property(e => e.RefPersoongroep)
                    .IsRequired()
                    .HasColumnName("ref_persoongroep")
                    .HasMaxLength(50);

                entity.Property(e => e.RefPlaats1)
                    .IsRequired()
                    .HasColumnName("ref_plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.RefSoort)
                    .IsRequired()
                    .HasColumnName("ref_soort")
                    .HasMaxLength(100);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.ReservableOfficehoursSsd).HasColumnName("reservable_officehours_ssd");

                entity.Property(e => e.Reservablewithlocation).HasColumnName("reservablewithlocation");

                entity.Property(e => e.Reserveerbaaractiveerbaar).HasColumnName("reserveerbaaractiveerbaar");

                entity.Property(e => e.Reserveerbaarkantooruren).HasColumnName("reserveerbaarkantooruren");

                entity.Property(e => e.Reserveerbaarsecure).HasColumnName("reserveerbaarsecure");

                entity.Property(e => e.Reserveerbaarsshd).HasColumnName("reserveerbaarsshd");

                entity.Property(e => e.Reservzichtbaarsshd).HasColumnName("reservzichtbaarsshd");

                entity.Property(e => e.Restwaarde)
                    .HasColumnName("restwaarde")
                    .HasColumnType("money");

                entity.Property(e => e.Riccode)
                    .IsRequired()
                    .HasColumnName("riccode")
                    .HasMaxLength(30);

                entity.Property(e => e.RmSpecification)
                    .IsRequired()
                    .HasColumnName("rm_specification")
                    .HasMaxLength(100);

                entity.Property(e => e.Serienummer)
                    .IsRequired()
                    .HasColumnName("serienummer")
                    .HasMaxLength(100);

                entity.Property(e => e.Serviceid).HasColumnName("serviceid");

                entity.Property(e => e.ServicewindowOption).HasColumnName("servicewindow_option");

                entity.Property(e => e.Servicewindowid).HasColumnName("servicewindowid");

                entity.Property(e => e.Sjabloonobjectid).HasColumnName("sjabloonobjectid");

                entity.Property(e => e.Soortabonnementid).HasColumnName("soortabonnementid");

                entity.Property(e => e.Soortid).HasColumnName("soortid");

                entity.Property(e => e.Specificatie)
                    .IsRequired()
                    .HasColumnName("specificatie")
                    .HasMaxLength(60);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Stdresvbehandelaarid).HasColumnName("stdresvbehandelaarid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veiligvoorraad).HasColumnName("veiligvoorraad");

                entity.Property(e => e.Verhuurborg)
                    .HasColumnName("verhuurborg")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijs)
                    .HasColumnName("verhuurprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijssysteem).HasColumnName("verhuurprijssysteem");

                entity.Property(e => e.Verhuurtekst)
                    .HasColumnName("verhuurtekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.Verkoopprijs)
                    .HasColumnName("verkoopprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verzekerdatum)
                    .HasColumnName("verzekerdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Vnc).HasColumnName("vnc");

                entity.Property(e => e.Vnchostnaam)
                    .HasColumnName("vnchostnaam")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Wburl)
                    .IsRequired()
                    .HasColumnName("wburl")
                    .HasMaxLength(1024);

                entity.Property(e => e.Webbrowser).HasColumnName("webbrowser");

                entity.HasOne(d => d.Aanspreekpunt)
                    .WithMany(p => p.TelefonieAanspreekpunt)
                    .HasForeignKey(d => d.Aanspreekpuntid)
                    .HasConstraintName("fk_actiedoor_aanspreekpuntid_telefonie");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_telefonie");

                entity.HasOne(d => d.Artikelbestellink)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Artikelbestellinkid)
                    .HasConstraintName("fk_artikel_bestel_link_artikelbestellinkid_telefonie");

                entity.HasOne(d => d.Artikelstatus)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Artikelstatusid)
                    .HasConstraintName("fk_artikelstatus_artikelstatusid_telefonie");

                entity.HasOne(d => d.Attentie)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Attentieid)
                    .HasConstraintName("fk_attentie_attentieid_telefonie");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.TelefonieAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_telefonie");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.TelefonieAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_telefonie");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.TelefonieAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_telefonie");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.TelefonieAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_telefonie");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.TelefonieAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_telefonie");

                entity.HasOne(d => d.Bestelaanvraag)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Bestelaanvraagid)
                    .HasConstraintName("fk_bestelaanvraag_bestelaanvraagid_telefonie");

                entity.HasOne(d => d.Bestelling)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Bestellingid)
                    .HasConstraintName("fk_bestellingen_bestellingid_telefonie");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_telefonie");

                entity.HasOne(d => d.Configuratie)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Configuratieid)
                    .HasConstraintName("fk_configuratie_configuratieid_telefonie");

                entity.HasOne(d => d.Installatiedoor)
                    .WithMany(p => p.TelefonieInstallatiedoor)
                    .HasForeignKey(d => d.Installatiedoorid)
                    .HasConstraintName("fk_actiedoor_installatiedoorid_telefonie");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.TelefonieLeverancier)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_telefonie");

                entity.HasOne(d => d.Lokatie)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Lokatieid)
                    .HasConstraintName("fk_locatie_lokatieid_telefonie");

                entity.HasOne(d => d.Merk)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Merkid)
                    .HasConstraintName("fk_objectmerk_merkid_telefonie");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_telefonie");

                entity.HasOne(d => d.ObjecttypeNavigation)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Objecttypeid)
                    .HasConstraintName("fk_objecttype_objecttypeid_telefonie");

                entity.HasOne(d => d.OnderhoudDoor)
                    .WithMany(p => p.TelefonieOnderhoudDoor)
                    .HasForeignKey(d => d.OnderhoudDoorid)
                    .HasConstraintName("fk_leverancier_onderhoud_doorid_telefonie");

                entity.HasOne(d => d.Onderhoudslacontract)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Onderhoudslacontractid)
                    .HasConstraintName("fk_dnocontract_onderhoudslacontractid_telefonie");

                entity.HasOne(d => d.Onderhoudsoort)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Onderhoudsoortid)
                    .HasConstraintName("fk_slacontractsoort_onderhoudsoortid_telefonie");

                entity.HasOne(d => d.Onderhoudsplan)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Onderhoudsplanid)
                    .HasConstraintName("fk_onderhoudsplan_onderhoudsplanid_telefonie");

                entity.HasOne(d => d.Persoongroep)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Persoongroepid)
                    .HasConstraintName("fk_persoongroep_persoongroepid_telefonie");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_telefonie");

                entity.HasOne(d => d.Service)
                    .WithMany(p => p.TelefonieService)
                    .HasForeignKey(d => d.Serviceid)
                    .HasConstraintName("fk_leverancier_serviceid_telefonie");

                entity.HasOne(d => d.Servicewindow)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Servicewindowid)
                    .HasConstraintName("fk_servicewindow_servicewindowid_telefonie");

                entity.HasOne(d => d.Sjabloonobject)
                    .WithMany(p => p.InverseSjabloonobject)
                    .HasForeignKey(d => d.Sjabloonobjectid)
                    .HasConstraintName("fk_telefonie_sjabloonobjectid_telefonie");

                entity.HasOne(d => d.Soortabonnement)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Soortabonnementid)
                    .HasConstraintName("fk_soortabonnement_soortabonnementid_telefonie");

                entity.HasOne(d => d.Soort)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Soortid)
                    .HasConstraintName("fk_objectsoort_soortid_telefonie");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_objectstatus_statusid_telefonie");

                entity.HasOne(d => d.Stdresvbehandelaar)
                    .WithMany(p => p.TelefonieStdresvbehandelaar)
                    .HasForeignKey(d => d.Stdresvbehandelaarid)
                    .HasConstraintName("fk_actiedoor_stdresvbehandelaarid_telefonie");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.TelefonieUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_telefonie");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.TelefonieUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_telefonie");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.Telefonie)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_telefonie");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.TelefonieVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_telefonie");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.TelefonieVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_telefonie");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.TelefonieVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_telefonie");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.TelefonieVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_telefonie");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.TelefonieVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_telefonie");
            });

            modelBuilder.Entity<TelefonieDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("telefonie__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_telefonie__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_telefonie__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_telefonie__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_telefonie__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_telefonie__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_telefonie__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.TelefonieDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_telefonie_kaartid_telefonie__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.TelefonieDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_telefonie__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.TelefonieDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_telefonie__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.TelefonieDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_telefonie__documenten");
            });

            modelBuilder.Entity<TelefonieEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("telefonie__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_telefonie__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_telefonie__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_telefonie__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.TelefonieEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_telefonie__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.TelefonieEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_telefonie_kaartid_telefonie__emailberichten");
            });

            modelBuilder.Entity<TelefonieLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("telefonie__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_telefonie__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_telefonie__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_telefonie__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_telefonie__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_telefonie__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_telefonie__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.TelefonieLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_telefonie_kaartid_telefonie__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.TelefonieLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_telefonie__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.TelefonieLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_telefonie__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.TelefonieLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_telefonie__logboek");
            });

            modelBuilder.Entity<TelefonieOptionalgrid>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("telefonie__optionalgrid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_telefonie__optionalgrid_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_telefonie__optionalgrid_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_telefonie__optionalgrid_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_telefonie__optionalgrid_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_telefonie__optionalgrid_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_telefonie__optionalgrid_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_telefonie__optionalgrid_parentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_telefonie__optionalgrid_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_telefonie__optionalgrid_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_telefonie__optionalgrid_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_telefonie__optionalgrid_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_telefonie__optionalgrid_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_telefonie__optionalgrid_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_telefonie__optionalgrid_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.TelefonieOptionalgridAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_telefonie__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.TelefonieOptionalgridAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_telefonie__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.TelefonieOptionalgridAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_telefonie__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.TelefonieOptionalgridAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_telefonie__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.TelefonieOptionalgridAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_telefonie__optionalgrid");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.TelefonieOptionalgrid)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_telefonie_parentid_telefonie__optionalgrid");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.TelefonieOptionalgridUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_telefonie__optionalgrid");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.TelefonieOptionalgridUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_telefonie__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.TelefonieOptionalgridVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_telefonie__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.TelefonieOptionalgridVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_telefonie__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.TelefonieOptionalgridVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_telefonie__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.TelefonieOptionalgridVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_telefonie__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.TelefonieOptionalgridVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_telefonie__optionalgrid");
            });

            modelBuilder.Entity<TimeRegistrationChange>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("time_registration_change");

                entity.HasIndex(e => e.Cardid)
                    .HasName("idx_time_registration_change_cardid");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_time_registration_change_operatorgroupid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_time_registration_change_operatorid");

                entity.HasIndex(e => e.Reason)
                    .HasName("idx_time_registration_change_reason");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_time_registration_change_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_time_registration_change_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_time_registration_change_uidwijzig");

                entity.HasIndex(e => new { e.Entrydate, e.Dataanmk })
                    .HasName("idx_time_registration_change_entrydate_dataanmk");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cardid).HasColumnName("cardid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Entrydate)
                    .HasColumnName("entrydate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasMaxLength(250);

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Reason).HasColumnName("reason");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Timetaken).HasColumnName("timetaken");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Card)
                    .WithMany(p => p.TimeRegistrationChange)
                    .HasForeignKey(d => d.Cardid)
                    .HasConstraintName("fk_change_cardid_time_registration_change");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.TimeRegistrationChangeOperatorgroup)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_time_registration_change");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.TimeRegistrationChangeOperator)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_time_registration_change");

                entity.HasOne(d => d.ReasonNavigation)
                    .WithMany(p => p.TimeRegistrationChange)
                    .HasForeignKey(d => d.Reason)
                    .HasConstraintName("fk_time_registration_reason_reason_time_registration_change");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.TimeRegistrationChangeUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_time_registration_change");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.TimeRegistrationChangeUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_time_registration_change");
            });

            modelBuilder.Entity<TimeRegistrationChangeactivity>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("time_registration_changeactivity");

                entity.HasIndex(e => e.Cardid)
                    .HasName("idx_time_registration_changeactivity_cardid");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_time_registration_changeactivity_operatorgroupid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_time_registration_changeactivity_operatorid");

                entity.HasIndex(e => e.Reason)
                    .HasName("idx_time_registration_changeactivity_reason");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_time_registration_changeactivity_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_time_registration_changeactivity_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_time_registration_changeactivity_uidwijzig");

                entity.HasIndex(e => new { e.Entrydate, e.Dataanmk })
                    .HasName("idx_time_registration_changeactivity_entrydate_dataanmk");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cardid).HasColumnName("cardid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Entrydate)
                    .HasColumnName("entrydate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasMaxLength(250);

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Reason).HasColumnName("reason");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Timetaken).HasColumnName("timetaken");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Card)
                    .WithMany(p => p.TimeRegistrationChangeactivity)
                    .HasForeignKey(d => d.Cardid)
                    .HasConstraintName("fk_changeactivity_cardid_time_registration_changeactivity");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.TimeRegistrationChangeactivityOperatorgroup)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_time_registration_changeactivity");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.TimeRegistrationChangeactivityOperator)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_time_registration_changeactivity");

                entity.HasOne(d => d.ReasonNavigation)
                    .WithMany(p => p.TimeRegistrationChangeactivity)
                    .HasForeignKey(d => d.Reason)
                    .HasConstraintName("fk_time_registration_reason_reason_time_registration_changeactivity");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.TimeRegistrationChangeactivityUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_time_registration_changeactivity");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.TimeRegistrationChangeactivityUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_time_registration_changeactivity");
            });

            modelBuilder.Entity<TimeRegistrationIncident>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("time_registration_incident");

                entity.HasIndex(e => e.Cardid)
                    .HasName("idx_time_registration_incident_cardid");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_time_registration_incident_operatorgroupid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_time_registration_incident_operatorid");

                entity.HasIndex(e => e.Reason)
                    .HasName("idx_time_registration_incident_reason");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_time_registration_incident_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_time_registration_incident_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_time_registration_incident_uidwijzig");

                entity.HasIndex(e => new { e.Entrydate, e.Dataanmk })
                    .HasName("idx_time_registration_incident_entrydate_dataanmk");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cardid).HasColumnName("cardid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Entrydate)
                    .HasColumnName("entrydate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasMaxLength(250);

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Reason).HasColumnName("reason");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Timetaken).HasColumnName("timetaken");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Card)
                    .WithMany(p => p.TimeRegistrationIncident)
                    .HasForeignKey(d => d.Cardid)
                    .HasConstraintName("fk_incident_cardid_time_registration_incident");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.TimeRegistrationIncidentOperatorgroup)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_time_registration_incident");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.TimeRegistrationIncidentOperator)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_time_registration_incident");

                entity.HasOne(d => d.ReasonNavigation)
                    .WithMany(p => p.TimeRegistrationIncident)
                    .HasForeignKey(d => d.Reason)
                    .HasConstraintName("fk_time_registration_reason_reason_time_registration_incident");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.TimeRegistrationIncidentUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_time_registration_incident");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.TimeRegistrationIncidentUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_time_registration_incident");
            });

            modelBuilder.Entity<TimeRegistrationOmActiviteit>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("time_registration_om_activiteit");

                entity.HasIndex(e => e.Cardid)
                    .HasName("idx_time_registration_om_activiteit_cardid");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_time_registration_om_activiteit_operatorgroupid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_time_registration_om_activiteit_operatorid");

                entity.HasIndex(e => e.Reason)
                    .HasName("idx_time_registration_om_activiteit_reason");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_time_registration_om_activiteit_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_time_registration_om_activiteit_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_time_registration_om_activiteit_uidwijzig");

                entity.HasIndex(e => new { e.Entrydate, e.Dataanmk })
                    .HasName("idx_time_registration_om_activiteit_entrydate_dataanmk");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cardid).HasColumnName("cardid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Entrydate)
                    .HasColumnName("entrydate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasMaxLength(250);

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Reason).HasColumnName("reason");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Timetaken).HasColumnName("timetaken");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Card)
                    .WithMany(p => p.TimeRegistrationOmActiviteit)
                    .HasForeignKey(d => d.Cardid)
                    .HasConstraintName("fk_om_activiteit_cardid_time_registration_om_activiteit");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.TimeRegistrationOmActiviteitOperatorgroup)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_time_registration_om_activiteit");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.TimeRegistrationOmActiviteitOperator)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_time_registration_om_activiteit");

                entity.HasOne(d => d.ReasonNavigation)
                    .WithMany(p => p.TimeRegistrationOmActiviteit)
                    .HasForeignKey(d => d.Reason)
                    .HasConstraintName("fk_time_registration_reason_reason_time_registration_om_activiteit");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.TimeRegistrationOmActiviteitUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_time_registration_om_activiteit");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.TimeRegistrationOmActiviteitUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_time_registration_om_activiteit");
            });

            modelBuilder.Entity<TimeRegistrationProbleem>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("time_registration_probleem");

                entity.HasIndex(e => e.Cardid)
                    .HasName("idx_time_registration_probleem_cardid");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_time_registration_probleem_operatorgroupid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_time_registration_probleem_operatorid");

                entity.HasIndex(e => e.Reason)
                    .HasName("idx_time_registration_probleem_reason");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_time_registration_probleem_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_time_registration_probleem_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_time_registration_probleem_uidwijzig");

                entity.HasIndex(e => new { e.Entrydate, e.Dataanmk })
                    .HasName("idx_time_registration_probleem_entrydate_dataanmk");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cardid).HasColumnName("cardid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Entrydate)
                    .HasColumnName("entrydate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasMaxLength(250);

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Reason).HasColumnName("reason");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Timetaken).HasColumnName("timetaken");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Card)
                    .WithMany(p => p.TimeRegistrationProbleem)
                    .HasForeignKey(d => d.Cardid)
                    .HasConstraintName("fk_probleem_cardid_time_registration_probleem");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.TimeRegistrationProbleemOperatorgroup)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_time_registration_probleem");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.TimeRegistrationProbleemOperator)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_time_registration_probleem");

                entity.HasOne(d => d.ReasonNavigation)
                    .WithMany(p => p.TimeRegistrationProbleem)
                    .HasForeignKey(d => d.Reason)
                    .HasConstraintName("fk_time_registration_reason_reason_time_registration_probleem");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.TimeRegistrationProbleemUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_time_registration_probleem");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.TimeRegistrationProbleemUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_time_registration_probleem");
            });

            modelBuilder.Entity<TimeRegistrationProfacboomProject>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("time_registration_profacboom_project");

                entity.HasIndex(e => e.Cardid)
                    .HasName("idx_time_registration_profacboom_project_cardid");

                entity.HasIndex(e => e.Operatorgroupid)
                    .HasName("idx_time_registration_profacboom_project_operatorgroupid");

                entity.HasIndex(e => e.Operatorid)
                    .HasName("idx_time_registration_profacboom_project_operatorid");

                entity.HasIndex(e => e.Reason)
                    .HasName("idx_time_registration_profacboom_project_reason");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_time_registration_profacboom_project_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_time_registration_profacboom_project_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_time_registration_profacboom_project_uidwijzig");

                entity.HasIndex(e => new { e.Entrydate, e.Dataanmk })
                    .HasName("idx_time_registration_profacboom_project_entrydate_dataanmk");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cardid).HasColumnName("cardid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Entrydate)
                    .HasColumnName("entrydate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasMaxLength(250);

                entity.Property(e => e.Operatorgroupid).HasColumnName("operatorgroupid");

                entity.Property(e => e.Operatorid).HasColumnName("operatorid");

                entity.Property(e => e.Reason).HasColumnName("reason");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Timetaken).HasColumnName("timetaken");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Card)
                    .WithMany(p => p.TimeRegistrationProfacboomProject)
                    .HasForeignKey(d => d.Cardid)
                    .HasConstraintName("fk_profacboom_project_cardid_time_registration_profacboom_project");

                entity.HasOne(d => d.Operatorgroup)
                    .WithMany(p => p.TimeRegistrationProfacboomProjectOperatorgroup)
                    .HasForeignKey(d => d.Operatorgroupid)
                    .HasConstraintName("fk_actiedoor_operatorgroupid_time_registration_profacboom_project");

                entity.HasOne(d => d.Operator)
                    .WithMany(p => p.TimeRegistrationProfacboomProjectOperator)
                    .HasForeignKey(d => d.Operatorid)
                    .HasConstraintName("fk_actiedoor_operatorid_time_registration_profacboom_project");

                entity.HasOne(d => d.ReasonNavigation)
                    .WithMany(p => p.TimeRegistrationProfacboomProject)
                    .HasForeignKey(d => d.Reason)
                    .HasConstraintName("fk_time_registration_reason_reason_time_registration_profacboom_project");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.TimeRegistrationProfacboomProjectUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_time_registration_profacboom_project");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.TimeRegistrationProfacboomProjectUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_time_registration_profacboom_project");
            });

            modelBuilder.Entity<TimeRegistrationReason>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("time_registration_reason");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_time_registration_reason_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_time_registration_reason_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_time_registration_reason_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Topsisgroup>(entity =>
            {
                entity.ToTable("topsisgroup");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_topsisgroup_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_topsisgroup_datwijzig");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_topsisgroup_importid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_topsisgroup_objectid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_topsisgroup_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_topsisgroup_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_topsisgroup_uidwijzig");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Host)
                    .IsRequired()
                    .HasColumnName("host")
                    .HasMaxLength(100);

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Macaddress).HasColumnName("macaddress");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Topsisgroup)
                    .HasForeignKey(d => d.Objectid)
                    .HasConstraintName("fk_object_objectid_topsisgroup");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.TopsisgroupUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_topsisgroup");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.TopsisgroupUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_topsisgroup");
            });

            modelBuilder.Entity<Topsisiprange>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("topsisiprange");

                entity.HasIndex(e => e.Hardwareid)
                    .HasName("idx_topsisiprange_hardwareid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Beginaddress)
                    .IsRequired()
                    .HasColumnName("beginaddress")
                    .HasMaxLength(50);

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasMaxLength(50);

                entity.Property(e => e.Endaddress)
                    .HasColumnName("endaddress")
                    .HasMaxLength(50);

                entity.Property(e => e.Hardwareid).HasColumnName("hardwareid");

                entity.HasOne(d => d.Hardware)
                    .WithMany(p => p.Topsisiprange)
                    .HasForeignKey(d => d.Hardwareid)
                    .HasConstraintName("fk_hardware_hardwareid_topsisiprange");
            });

            modelBuilder.Entity<Topsisobject>(entity =>
            {
                entity.ToTable("topsisobject");

                entity.HasIndex(e => e.Cimcaption)
                    .HasName("idx_topsisobject_cimcaption");

                entity.HasIndex(e => e.Classid)
                    .HasName("idx_topsisobject_classid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_topsisobject_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_topsisobject_datwijzig");

                entity.HasIndex(e => e.Groupid)
                    .HasName("idx_topsisobject_groupid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_topsisobject_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_topsisobject_parentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_topsisobject_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_topsisobject_uidwijzig");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cimadapterram).HasColumnName("cimadapterram");

                entity.Property(e => e.Cimadaptertype)
                    .HasColumnName("cimadaptertype")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimbusnum).HasColumnName("cimbusnum");

                entity.Property(e => e.Cimbustype).HasColumnName("cimbustype");

                entity.Property(e => e.Cimcapacity).HasColumnName("cimcapacity");

                entity.Property(e => e.Cimcaption)
                    .HasColumnName("cimcaption")
                    .HasMaxLength(250);

                entity.Property(e => e.Cimcsdversion)
                    .HasColumnName("cimcsdversion")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimcurrentclockspeed).HasColumnName("cimcurrentclockspeed");

                entity.Property(e => e.Cimdescription)
                    .HasColumnName("cimdescription")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimdeviceid)
                    .HasColumnName("cimdeviceid")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimdevicelocator)
                    .HasColumnName("cimdevicelocator")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimdevicetype)
                    .HasColumnName("cimdevicetype")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimdrive)
                    .HasColumnName("cimdrive")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimendingaddress).HasColumnName("cimendingaddress");

                entity.Property(e => e.Cimfilesystem)
                    .HasColumnName("cimfilesystem")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimfreespace).HasColumnName("cimfreespace");

                entity.Property(e => e.Cimhardwaretype)
                    .HasColumnName("cimhardwaretype")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimhotfixid)
                    .HasColumnName("cimhotfixid")
                    .HasMaxLength(260);

                entity.Property(e => e.Cimlayout)
                    .HasColumnName("cimlayout")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimmacaddress)
                    .HasColumnName("cimmacaddress")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimmanufacturer)
                    .HasColumnName("cimmanufacturer")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimmaxbaudratetophone).HasColumnName("cimmaxbaudratetophone");

                entity.Property(e => e.Cimmaxclockspeed).HasColumnName("cimmaxclockspeed");

                entity.Property(e => e.Cimmodel)
                    .HasColumnName("cimmodel")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimmonitormanufacturer)
                    .HasColumnName("cimmonitormanufacturer")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimname)
                    .HasColumnName("cimname")
                    .HasMaxLength(200);

                entity.Property(e => e.Cimpointingtype).HasColumnName("cimpointingtype");

                entity.Property(e => e.Cimportname)
                    .HasColumnName("cimportname")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimprimarybustype)
                    .HasColumnName("cimprimarybustype")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimproductname)
                    .HasColumnName("cimproductname")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimsecondarybustype)
                    .HasColumnName("cimsecondarybustype")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimserialnumber)
                    .HasColumnName("cimserialnumber")
                    .HasMaxLength(100);

                entity.Property(e => e.Cimsize).HasColumnName("cimsize");

                entity.Property(e => e.Cimspeed).HasColumnName("cimspeed");

                entity.Property(e => e.Cimstartingaddress).HasColumnName("cimstartingaddress");

                entity.Property(e => e.Cimversion)
                    .HasColumnName("cimversion")
                    .HasMaxLength(100);

                entity.Property(e => e.Classid).HasColumnName("classid");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Groupid).HasColumnName("groupid");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Ldkcodepage)
                    .HasColumnName("ldkcodepage")
                    .HasMaxLength(100);

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Path)
                    .IsRequired()
                    .HasColumnName("path")
                    .HasMaxLength(200);

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Class)
                    .WithMany(p => p.Topsisobject)
                    .HasForeignKey(d => d.Classid)
                    .HasConstraintName("fk_topsisobjectclass_classid_topsisobject");

                entity.HasOne(d => d.Group)
                    .WithMany(p => p.Topsisobject)
                    .HasForeignKey(d => d.Groupid)
                    .HasConstraintName("fk_topsisgroup_groupid_topsisobject");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.InverseParent)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_topsisobject_parentid_topsisobject");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.TopsisobjectUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_topsisobject");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.TopsisobjectUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_topsisobject");
            });

            modelBuilder.Entity<Topsisobjectclass>(entity =>
            {
                entity.ToTable("topsisobjectclass");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_topsisobjectclass_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_topsisobjectclass_datwijzig");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_topsisobjectclass_parentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_topsisobjectclass_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_topsisobjectclass_uidwijzig");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .ValueGeneratedNever();

                entity.Property(e => e.Class)
                    .IsRequired()
                    .HasColumnName("class")
                    .HasMaxLength(100);

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Hasadapterram).HasColumnName("hasadapterram");

                entity.Property(e => e.Hasadaptertype).HasColumnName("hasadaptertype");

                entity.Property(e => e.Hasbusnum).HasColumnName("hasbusnum");

                entity.Property(e => e.Hasbustype).HasColumnName("hasbustype");

                entity.Property(e => e.Hascaption).HasColumnName("hascaption");

                entity.Property(e => e.Hascurrentclockspeed).HasColumnName("hascurrentclockspeed");

                entity.Property(e => e.Hasdescription).HasColumnName("hasdescription");

                entity.Property(e => e.Hasdeviceid).HasColumnName("hasdeviceid");

                entity.Property(e => e.Hasdevicetype).HasColumnName("hasdevicetype");

                entity.Property(e => e.Hasdrive).HasColumnName("hasdrive");

                entity.Property(e => e.Hasendingaddress).HasColumnName("hasendingaddress");

                entity.Property(e => e.Hasfilesystem).HasColumnName("hasfilesystem");

                entity.Property(e => e.Hasfreespace).HasColumnName("hasfreespace");

                entity.Property(e => e.Hashardwaretype).HasColumnName("hashardwaretype");

                entity.Property(e => e.Haslayout).HasColumnName("haslayout");

                entity.Property(e => e.Hasmacaddress).HasColumnName("hasmacaddress");

                entity.Property(e => e.Hasmanufacturer).HasColumnName("hasmanufacturer");

                entity.Property(e => e.Hasmaxbaudratetophone).HasColumnName("hasmaxbaudratetophone");

                entity.Property(e => e.Hasmaxclockspeed).HasColumnName("hasmaxclockspeed");

                entity.Property(e => e.Hasmodel).HasColumnName("hasmodel");

                entity.Property(e => e.Hasmonitormanufacturer).HasColumnName("hasmonitormanufacturer");

                entity.Property(e => e.Hasname).HasColumnName("hasname");

                entity.Property(e => e.Haspointingtype).HasColumnName("haspointingtype");

                entity.Property(e => e.Hasportname).HasColumnName("hasportname");

                entity.Property(e => e.Hasprimarybustype).HasColumnName("hasprimarybustype");

                entity.Property(e => e.Hasproductname).HasColumnName("hasproductname");

                entity.Property(e => e.Hassecondarybustype).HasColumnName("hassecondarybustype");

                entity.Property(e => e.Hasserialnumber).HasColumnName("hasserialnumber");

                entity.Property(e => e.Hassize).HasColumnName("hassize");

                entity.Property(e => e.Hasstartingaddress).HasColumnName("hasstartingaddress");

                entity.Property(e => e.Hasversion).HasColumnName("hasversion");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Scan).HasColumnName("scan");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.InverseParent)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_topsisobjectclass_parentid_topsisobjectclass");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.TopsisobjectclassUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_topsisobjectclass");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.TopsisobjectclassUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_topsisobjectclass");
            });

            modelBuilder.Entity<Topsissoftware>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("topsissoftware");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_topsissoftware_importid");

                entity.HasIndex(e => e.Topsisstring)
                    .HasName("uidx_topsissoftware_topsisstring")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Topsisstring)
                    .HasColumnName("topsisstring")
                    .HasMaxLength(250);
            });

            modelBuilder.Entity<Translations>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("translations");

                entity.HasIndex(e => new { e.Context, e.ResourceKey })
                    .HasName("idx_translations_context_resource_key");

                entity.HasIndex(e => new { e.LanguageId, e.Context, e.ResourceKey })
                    .HasName("uidx_translations_language_id_context_resource_key")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Context)
                    .IsRequired()
                    .HasColumnName("context")
                    .HasMaxLength(100);

                entity.Property(e => e.LanguageId).HasColumnName("language_id");

                entity.Property(e => e.ResourceKey)
                    .IsRequired()
                    .HasColumnName("resource_key")
                    .HasMaxLength(100);

                entity.Property(e => e.Translation)
                    .HasColumnName("translation")
                    .HasColumnType("ntext");

                entity.HasOne(d => d.Language)
                    .WithMany(p => p.Translations)
                    .HasForeignKey(d => d.LanguageId)
                    .HasConstraintName("fk_kennistaal_language_id_translations");
            });

            modelBuilder.Entity<Travelallowancetype>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("travelallowancetype");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_travelallowancetype_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_travelallowancetype_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_travelallowancetype_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Uitvoeractie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("uitvoeractie");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_uitvoeractie_naam");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actief).HasColumnName("actief");

                entity.Property(e => e.Actieftasbeveiligd).HasColumnName("actieftasbeveiligd");

                entity.Property(e => e.Actieftaspubliek).HasColumnName("actieftaspubliek");

                entity.Property(e => e.Actieftopdesk).HasColumnName("actieftopdesk");

                entity.Property(e => e.Bestand)
                    .HasColumnName("bestand")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestandmeegeven).HasColumnName("bestandmeegeven");

                entity.Property(e => e.Inhoudtekstbestand)
                    .HasColumnName("inhoudtekstbestand")
                    .HasColumnType("ntext");

                entity.Property(e => e.Inhoudtekstbestand1)
                    .HasColumnName("inhoudtekstbestand1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Meegeeftekstbestand)
                    .HasColumnName("meegeeftekstbestand")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(50);

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Parameters)
                    .HasColumnName("parameters")
                    .HasColumnType("ntext");

                entity.Property(e => e.Parameters1)
                    .HasColumnName("parameters1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Sleutel)
                    .HasColumnName("sleutel")
                    .HasColumnType("ntext");

                entity.Property(e => e.Structurename)
                    .IsRequired()
                    .HasColumnName("structurename")
                    .HasMaxLength(40);

                entity.Property(e => e.Tabelstatus)
                    .IsRequired()
                    .HasColumnName("tabelstatus")
                    .HasMaxLength(40);

                entity.Property(e => e.Welkbestand).HasColumnName("welkbestand");
            });

            modelBuilder.Entity<Urgency>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("urgency");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_urgency_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_urgency_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_urgency_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Verbinding>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("verbinding");

                entity.HasIndex(e => e.Poort1id)
                    .HasName("idx_verbinding_poort1id");

                entity.HasIndex(e => e.Poort2id)
                    .HasName("idx_verbinding_poort2id");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Poort1id).HasColumnName("poort1id");

                entity.Property(e => e.Poort2id).HasColumnName("poort2id");

                entity.HasOne(d => d.Poort1)
                    .WithMany(p => p.VerbindingPoort1)
                    .HasForeignKey(d => d.Poort1id)
                    .HasConstraintName("fk_poort_poort1id_verbinding");

                entity.HasOne(d => d.Poort2)
                    .WithMany(p => p.VerbindingPoort2)
                    .HasForeignKey(d => d.Poort2id)
                    .HasConstraintName("fk_poort_poort2id_verbinding");
            });

            modelBuilder.Entity<Verhuurcategorie>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("verhuurcategorie");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_verhuurcategorie_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_verhuurcategorie_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_verhuurcategorie_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Korting).HasColumnName("korting");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Verhuurstatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("verhuurstatus");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_verhuurstatus_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_verhuurstatus_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_verhuurstatus_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Vestiging>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vestiging");

                entity.HasIndex(e => e.Accountmanagerid)
                    .HasName("idx_vestiging_accountmanagerid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_vestiging_archiefredenid");

                entity.HasIndex(e => e.Attentieid)
                    .HasName("idx_vestiging_attentieid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_vestiging_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_vestiging_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_vestiging_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_vestiging_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_vestiging_attvrijeopzoek5");

                entity.HasIndex(e => e.BuildingLevelEpcId)
                    .HasName("idx_vestiging_building_level_epc_id");

                entity.HasIndex(e => e.Contactid)
                    .HasName("idx_vestiging_contactid");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_vestiging_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_vestiging_datwijzig");

                entity.HasIndex(e => e.DesignationId)
                    .HasName("idx_vestiging_designation_id");

                entity.HasIndex(e => e.EnergyPerformanceId)
                    .HasName("idx_vestiging_energy_performance_id");

                entity.HasIndex(e => e.EnvironmentalImpactId)
                    .HasName("idx_vestiging_environmental_impact_id");

                entity.HasIndex(e => e.Extraaid)
                    .HasName("idx_vestiging_extraaid");

                entity.HasIndex(e => e.Extrabid)
                    .HasName("idx_vestiging_extrabid");

                entity.HasIndex(e => e.HistoricalSiteId)
                    .HasName("idx_vestiging_historical_site_id");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_vestiging_importid");

                entity.HasIndex(e => e.Landid1)
                    .HasName("idx_vestiging_landid1");

                entity.HasIndex(e => e.Landid2)
                    .HasName("idx_vestiging_landid2");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_vestiging_naam");

                entity.HasIndex(e => e.OtherLdapServerPublic)
                    .HasName("idx_vestiging_other_ldap_server_public");

                entity.HasIndex(e => e.OtherLdapServerSecure)
                    .HasName("idx_vestiging_other_ldap_server_secure");

                entity.HasIndex(e => e.Oudervestigingid)
                    .HasName("idx_vestiging_oudervestigingid");

                entity.HasIndex(e => e.RefHoofdvestigingid)
                    .HasName("idx_vestiging_ref_hoofdvestigingid");

                entity.HasIndex(e => e.RefKleur)
                    .HasName("idx_vestiging_ref_kleur");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_vestiging_status");

                entity.HasIndex(e => e.Swid)
                    .HasName("idx_vestiging_swid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vestiging_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vestiging_uidwijzig");

                entity.HasIndex(e => e.Vrijedatum1)
                    .HasName("idx_vestiging_vrijedatum1");

                entity.HasIndex(e => e.Vrijedatum2)
                    .HasName("idx_vestiging_vrijedatum2");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_vestiging_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_vestiging_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_vestiging_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_vestiging_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_vestiging_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Accountmanagerid).HasColumnName("accountmanagerid");

                entity.Property(e => e.Adresmemo1)
                    .HasColumnName("adresmemo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Adresmemo2)
                    .HasColumnName("adresmemo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Annualdepreciation)
                    .HasColumnName("annualdepreciation")
                    .HasColumnType("money");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Attentieid).HasColumnName("attentieid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Btwnummer)
                    .IsRequired()
                    .HasColumnName("btwnummer")
                    .HasMaxLength(25);

                entity.Property(e => e.BuildingLevelEpcId).HasColumnName("building_level_epc_id");

                entity.Property(e => e.Contactid).HasColumnName("contactid");

                entity.Property(e => e.County1)
                    .IsRequired()
                    .HasColumnName("county1")
                    .HasMaxLength(50);

                entity.Property(e => e.County2)
                    .IsRequired()
                    .HasColumnName("county2")
                    .HasMaxLength(50);

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Debiteurennummer)
                    .IsRequired()
                    .HasColumnName("debiteurennummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Depreciationperiod).HasColumnName("depreciationperiod");

                entity.Property(e => e.DesignationId).HasColumnName("designation_id");

                entity.Property(e => e.Diversen)
                    .HasColumnName("diversen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasColumnName("email")
                    .HasMaxLength(100);

                entity.Property(e => e.EnergyPerformanceId).HasColumnName("energy_performance_id");

                entity.Property(e => e.Energyperformancemeasurementdate)
                    .HasColumnName("energyperformancemeasurementdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.EnvironmentalImpactId).HasColumnName("environmental_impact_id");

                entity.Property(e => e.Environmentalimpactmeasurementdate)
                    .HasColumnName("environmentalimpactmeasurementdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Extraaid).HasColumnName("extraaid");

                entity.Property(e => e.Extrabid).HasColumnName("extrabid");

                entity.Property(e => e.Fax)
                    .IsRequired()
                    .HasColumnName("fax")
                    .HasMaxLength(25);

                entity.Property(e => e.Foreclosurevalue)
                    .HasColumnName("foreclosurevalue")
                    .HasColumnType("money");

                entity.Property(e => e.Foreclosurevaluesurveydate)
                    .HasColumnName("foreclosurevaluesurveydate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.HistoricalSiteId).HasColumnName("historical_site_id");

                entity.Property(e => e.Huisnummer1)
                    .IsRequired()
                    .HasColumnName("huisnummer1")
                    .HasMaxLength(50);

                entity.Property(e => e.Huisnummer2)
                    .IsRequired()
                    .HasColumnName("huisnummer2")
                    .HasMaxLength(50);

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Landid1).HasColumnName("landid1");

                entity.Property(e => e.Landid2).HasColumnName("landid2");

                entity.Property(e => e.Landvalue)
                    .HasColumnName("landvalue")
                    .HasColumnType("money");

                entity.Property(e => e.Landvaluesurveydate)
                    .HasColumnName("landvaluesurveydate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lidmaatschapsnummer)
                    .IsRequired()
                    .HasColumnName("lidmaatschapsnummer")
                    .HasMaxLength(60);

                entity.Property(e => e.Marketvalue)
                    .HasColumnName("marketvalue")
                    .HasColumnType("money");

                entity.Property(e => e.Marketvaluesurveydate)
                    .HasColumnName("marketvaluesurveydate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(60);

                entity.Property(e => e.Opmerking)
                    .IsRequired()
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.OtherLdapServerPublic).HasColumnName("other_ldap_server_public");

                entity.Property(e => e.OtherLdapServerSecure).HasColumnName("other_ldap_server_secure");

                entity.Property(e => e.Oudervestigingid).HasColumnName("oudervestigingid");

                entity.Property(e => e.Owneremail)
                    .HasColumnName("owneremail")
                    .HasMaxLength(100);

                entity.Property(e => e.Ownermobilephone)
                    .HasColumnName("ownermobilephone")
                    .HasMaxLength(100);

                entity.Property(e => e.Ownername)
                    .HasColumnName("ownername")
                    .HasMaxLength(109);

                entity.Property(e => e.Ownertelephone)
                    .HasColumnName("ownertelephone")
                    .HasMaxLength(100);

                entity.Property(e => e.Plaats1)
                    .IsRequired()
                    .HasColumnName("plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.Plaats2)
                    .IsRequired()
                    .HasColumnName("plaats2")
                    .HasMaxLength(30);

                entity.Property(e => e.Postcode1)
                    .IsRequired()
                    .HasColumnName("postcode1")
                    .HasMaxLength(15);

                entity.Property(e => e.Postcode2)
                    .IsRequired()
                    .HasColumnName("postcode2")
                    .HasMaxLength(15);

                entity.Property(e => e.Priceofacquisition)
                    .HasColumnName("priceofacquisition")
                    .HasColumnType("money");

                entity.Property(e => e.Propertyvaluation)
                    .HasColumnName("propertyvaluation")
                    .HasColumnType("money");

                entity.Property(e => e.Rebuildingvalue)
                    .HasColumnName("rebuildingvalue")
                    .HasColumnType("money");

                entity.Property(e => e.Rebuildingvaluesurveydate)
                    .HasColumnName("rebuildingvaluesurveydate")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefHoofdvestigingid).HasColumnName("ref_hoofdvestigingid");

                entity.Property(e => e.RefKleur).HasColumnName("ref_kleur");

                entity.Property(e => e.Registryreference)
                    .HasColumnName("registryreference")
                    .HasMaxLength(100);

                entity.Property(e => e.Rentalvalue)
                    .HasColumnName("rentalvalue")
                    .HasColumnType("money");

                entity.Property(e => e.Rentalvaluesurveydate)
                    .HasColumnName("rentalvaluesurveydate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Residualvalue)
                    .HasColumnName("residualvalue")
                    .HasColumnType("money");

                entity.Property(e => e.Specificatie)
                    .IsRequired()
                    .HasColumnName("specificatie")
                    .HasMaxLength(70);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Straat1)
                    .IsRequired()
                    .HasColumnName("straat1")
                    .HasMaxLength(50);

                entity.Property(e => e.Straat2)
                    .IsRequired()
                    .HasColumnName("straat2")
                    .HasMaxLength(50);

                entity.Property(e => e.SurfaceAreaM2).HasColumnName("surface_area_m2");

                entity.Property(e => e.SwOption).HasColumnName("sw_option");

                entity.Property(e => e.Swid).HasColumnName("swid");

                entity.Property(e => e.Telefoon)
                    .IsRequired()
                    .HasColumnName("telefoon")
                    .HasMaxLength(25);

                entity.Property(e => e.Telefoonbbs)
                    .IsRequired()
                    .HasColumnName("telefoonbbs")
                    .HasMaxLength(25);

                entity.Property(e => e.Timezone)
                    .IsRequired()
                    .HasColumnName("timezone")
                    .HasMaxLength(50);

                entity.Property(e => e.Totalcostofacquisition)
                    .HasColumnName("totalcostofacquisition")
                    .HasColumnType("money");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.UseOtherLdapServerPublic).HasColumnName("use_other_ldap_server_public");

                entity.Property(e => e.UseOtherLdapServerSecure).HasColumnName("use_other_ldap_server_secure");

                entity.Property(e => e.Vestigingsoort).HasColumnName("vestigingsoort");

                entity.Property(e => e.VolumeM3).HasColumnName("volume_m3");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Website)
                    .IsRequired()
                    .HasColumnName("website")
                    .HasMaxLength(100);

                entity.Property(e => e.Yearofacquisition).HasColumnName("yearofacquisition");

                entity.Property(e => e.Yearofconstruction).HasColumnName("yearofconstruction");

                entity.HasOne(d => d.Accountmanager)
                    .WithMany(p => p.VestigingNavigation)
                    .HasForeignKey(d => d.Accountmanagerid)
                    .HasConstraintName("fk_actiedoor_accountmanagerid_vestiging");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Vestiging)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_vestiging");

                entity.HasOne(d => d.Attentie)
                    .WithMany(p => p.Vestiging)
                    .HasForeignKey(d => d.Attentieid)
                    .HasConstraintName("fk_attentie_attentieid_vestiging");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.VestigingAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_vestiging");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.VestigingAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_vestiging");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.VestigingAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_vestiging");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.VestigingAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_vestiging");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.VestigingAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_vestiging");

                entity.HasOne(d => d.BuildingLevelEpc)
                    .WithMany(p => p.Vestiging)
                    .HasForeignKey(d => d.BuildingLevelEpcId)
                    .HasConstraintName("fk_building_level_epc_building_level_epc_id_vestiging");

                entity.HasOne(d => d.Contact)
                    .WithMany(p => p.VestigingNavigation)
                    .HasForeignKey(d => d.Contactid)
                    .HasConstraintName("fk_persoon_contactid_vestiging");

                entity.HasOne(d => d.Designation)
                    .WithMany(p => p.Vestiging)
                    .HasForeignKey(d => d.DesignationId)
                    .HasConstraintName("fk_branch_designation_designation_id_vestiging");

                entity.HasOne(d => d.EnergyPerformance)
                    .WithMany(p => p.Vestiging)
                    .HasForeignKey(d => d.EnergyPerformanceId)
                    .HasConstraintName("fk_energy_performance_energy_performance_id_vestiging");

                entity.HasOne(d => d.EnvironmentalImpact)
                    .WithMany(p => p.Vestiging)
                    .HasForeignKey(d => d.EnvironmentalImpactId)
                    .HasConstraintName("fk_environmental_impact_environmental_impact_id_vestiging");

                entity.HasOne(d => d.Extraa)
                    .WithMany(p => p.Vestiging)
                    .HasForeignKey(d => d.Extraaid)
                    .HasConstraintName("fk_extraa_extraaid_vestiging");

                entity.HasOne(d => d.Extrab)
                    .WithMany(p => p.Vestiging)
                    .HasForeignKey(d => d.Extrabid)
                    .HasConstraintName("fk_extrab_extrabid_vestiging");

                entity.HasOne(d => d.HistoricalSite)
                    .WithMany(p => p.Vestiging)
                    .HasForeignKey(d => d.HistoricalSiteId)
                    .HasConstraintName("fk_historical_site_historical_site_id_vestiging");

                entity.HasOne(d => d.Landid1Navigation)
                    .WithMany(p => p.VestigingLandid1Navigation)
                    .HasForeignKey(d => d.Landid1)
                    .HasConstraintName("fk_land_landid1_vestiging");

                entity.HasOne(d => d.Landid2Navigation)
                    .WithMany(p => p.VestigingLandid2Navigation)
                    .HasForeignKey(d => d.Landid2)
                    .HasConstraintName("fk_land_landid2_vestiging");

                entity.HasOne(d => d.OtherLdapServerPublicNavigation)
                    .WithMany(p => p.VestigingOtherLdapServerPublicNavigation)
                    .HasForeignKey(d => d.OtherLdapServerPublic)
                    .HasConstraintName("fk_ldapsettings_other_ldap_server_public_vestiging");

                entity.HasOne(d => d.OtherLdapServerSecureNavigation)
                    .WithMany(p => p.VestigingOtherLdapServerSecureNavigation)
                    .HasForeignKey(d => d.OtherLdapServerSecure)
                    .HasConstraintName("fk_ldapsettings_other_ldap_server_secure_vestiging");

                entity.HasOne(d => d.Oudervestiging)
                    .WithMany(p => p.InverseOudervestiging)
                    .HasForeignKey(d => d.Oudervestigingid)
                    .HasConstraintName("fk_vestiging_oudervestigingid_vestiging");

                entity.HasOne(d => d.RefHoofdvestiging)
                    .WithMany(p => p.InverseRefHoofdvestiging)
                    .HasForeignKey(d => d.RefHoofdvestigingid)
                    .HasConstraintName("fk_vestiging_ref_hoofdvestigingid_vestiging");

                entity.HasOne(d => d.Sw)
                    .WithMany(p => p.Vestiging)
                    .HasForeignKey(d => d.Swid)
                    .HasConstraintName("fk_servicewindow_swid_vestiging");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.VestigingUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vestiging");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.VestigingUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vestiging");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.VestigingVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_vestiging");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.VestigingVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_vestiging");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.VestigingVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_vestiging");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.VestigingVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_vestiging");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.VestigingVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_vestiging");
            });

            modelBuilder.Entity<VestigingDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vestiging__documenten");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_vestiging__documenten_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_vestiging__documenten_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vestiging__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vestiging__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vestiging__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vestiging__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isremoved).HasColumnName("isremoved");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.VestigingDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vestiging_kaartid_vestiging__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.VestigingDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vestiging__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.VestigingDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vestiging__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.VestigingDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vestiging__documenten");
            });

            modelBuilder.Entity<VestigingEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vestiging__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_vestiging__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vestiging__emailberichten_kaartid");

                entity.HasIndex(e => new { e.Emailid, e.Kaartid })
                    .HasName("uidx_vestiging__emailberichten_emailid_kaartid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.VestigingEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .HasConstraintName("fk_emailbericht_emailid_vestiging__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.VestigingEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_vestiging_kaartid_vestiging__emailberichten");
            });

            modelBuilder.Entity<VestigingLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vestiging__logboek");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_vestiging__logboek_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_vestiging__logboek_datwijzig");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vestiging__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vestiging__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vestiging__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vestiging__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.VestigingLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vestiging_kaartid_vestiging__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.VestigingLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vestiging__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.VestigingLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vestiging__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.VestigingLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vestiging__logboek");
            });

            modelBuilder.Entity<VestigingMemoHistory>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vestiging__memo_history");

                entity.HasIndex(e => e.Dataanmk)
                    .HasName("idx_vestiging__memo_history_dataanmk");

                entity.HasIndex(e => e.Datwijzig)
                    .HasName("idx_vestiging__memo_history_datwijzig");

                entity.HasIndex(e => e.Gebruikerid)
                    .HasName("idx_vestiging__memo_history_gebruikerid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_vestiging__memo_history_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_vestiging__memo_history_parentid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vestiging__memo_history_persoonid");

                entity.HasIndex(e => e.Recordtimestamp)
                    .HasName("idx_vestiging__memo_history_recordtimestamp");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vestiging__memo_history_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vestiging__memo_history_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Gebruikerid).HasColumnName("gebruikerid");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Memotekst)
                    .HasColumnName("memotekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.MemotekstRtf)
                    .HasColumnName("memotekst_rtf")
                    .HasColumnType("image");

                entity.Property(e => e.Origin).HasColumnName("origin");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Recordtimestamp)
                    .HasColumnName("recordtimestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veldnaam)
                    .IsRequired()
                    .HasColumnName("veldnaam")
                    .HasMaxLength(30);

                entity.HasOne(d => d.Gebruiker)
                    .WithMany(p => p.VestigingMemoHistoryGebruiker)
                    .HasForeignKey(d => d.Gebruikerid)
                    .HasConstraintName("fk_gebruiker_gebruikerid_vestiging__memo_history");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.VestigingMemoHistory)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_vestiging_parentid_vestiging__memo_history");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.VestigingMemoHistory)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vestiging__memo_history");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.VestigingMemoHistoryUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vestiging__memo_history");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.VestigingMemoHistoryUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vestiging__memo_history");
            });

            modelBuilder.Entity<VestigingOptionalgrid>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vestiging__optionalgrid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_vestiging__optionalgrid_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_vestiging__optionalgrid_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_vestiging__optionalgrid_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_vestiging__optionalgrid_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_vestiging__optionalgrid_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_vestiging__optionalgrid_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_vestiging__optionalgrid_parentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vestiging__optionalgrid_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vestiging__optionalgrid_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_vestiging__optionalgrid_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_vestiging__optionalgrid_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_vestiging__optionalgrid_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_vestiging__optionalgrid_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_vestiging__optionalgrid_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.VestigingOptionalgridAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_vestiging__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.VestigingOptionalgridAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_vestiging__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.VestigingOptionalgridAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_vestiging__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.VestigingOptionalgridAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_vestiging__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.VestigingOptionalgridAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_vestiging__optionalgrid");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.VestigingOptionalgrid)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_vestiging_parentid_vestiging__optionalgrid");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.VestigingOptionalgridUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vestiging__optionalgrid");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.VestigingOptionalgridUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vestiging__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.VestigingOptionalgridVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_vestiging__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.VestigingOptionalgridVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_vestiging__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.VestigingOptionalgridVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_vestiging__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.VestigingOptionalgridVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_vestiging__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.VestigingOptionalgridVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_vestiging__optionalgrid");
            });

            modelBuilder.Entity<VestigingPicture>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vestiging__picture");

                entity.HasIndex(e => e.Cardid)
                    .HasName("idx_vestiging__picture_cardid");

                entity.HasIndex(e => e.Pictureid)
                    .HasName("idx_vestiging__picture_pictureid");

                entity.HasIndex(e => new { e.Pictureid, e.Cardid })
                    .HasName("uidx_vestiging__picture_pictureid_cardid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cardid).HasColumnName("cardid");

                entity.Property(e => e.Isfavourite).HasColumnName("isfavourite");

                entity.Property(e => e.Pictureid).HasColumnName("pictureid");

                entity.Property(e => e.Rank).HasColumnName("rank");

                entity.HasOne(d => d.Card)
                    .WithMany(p => p.VestigingPicture)
                    .HasForeignKey(d => d.Cardid)
                    .HasConstraintName("fk_vestiging_cardid_vestiging__picture");

                entity.HasOne(d => d.Picture)
                    .WithMany(p => p.VestigingPicture)
                    .HasForeignKey(d => d.Pictureid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_picture_pictureid_vestiging__picture");
            });

            modelBuilder.Entity<Voorziening>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("voorziening");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_voorziening_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_voorziening_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_voorziening_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_voorziening_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_voorziening_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_voorziening_importid");

                entity.HasIndex(e => e.Soortid)
                    .HasName("idx_voorziening_soortid");

                entity.HasIndex(e => e.Standaardbehandelaarid)
                    .HasName("idx_voorziening_standaardbehandelaarid");

                entity.HasIndex(e => e.Status)
                    .HasName("idx_voorziening_status");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_voorziening_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_voorziening_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_voorziening_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_voorziening_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_voorziening_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_voorziening_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_voorziening_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bloktijd).HasColumnName("bloktijd");

                entity.Property(e => e.Bloktijdduur).HasColumnName("bloktijdduur");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(60);

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Prijsperstuk)
                    .HasColumnName("prijsperstuk")
                    .HasColumnType("money");

                entity.Property(e => e.Reserveerbaareenheid).HasColumnName("reserveerbaareenheid");

                entity.Property(e => e.Reserveerbaarlos).HasColumnName("reserveerbaarlos");

                entity.Property(e => e.Reserveerbaarlosvoor).HasColumnName("reserveerbaarlosvoor");

                entity.Property(e => e.Reserveerbaarssd).HasColumnName("reserveerbaarssd");

                entity.Property(e => e.Soortid).HasColumnName("soortid");

                entity.Property(e => e.Standaardbehandelaarid).HasColumnName("standaardbehandelaarid");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.VoorzieningAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_voorziening");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.VoorzieningAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_voorziening");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.VoorzieningAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_voorziening");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.VoorzieningAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_voorziening");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.VoorzieningAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_voorziening");

                entity.HasOne(d => d.Soort)
                    .WithMany(p => p.Voorziening)
                    .HasForeignKey(d => d.Soortid)
                    .HasConstraintName("fk_voorzieningsoort_soortid_voorziening");

                entity.HasOne(d => d.Standaardbehandelaar)
                    .WithMany(p => p.Voorziening)
                    .HasForeignKey(d => d.Standaardbehandelaarid)
                    .HasConstraintName("fk_actiedoor_standaardbehandelaarid_voorziening");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.VoorzieningUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_voorziening");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.VoorzieningUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_voorziening");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.VoorzieningVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_voorziening");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.VoorzieningVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_voorziening");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.VoorzieningVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_voorziening");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.VoorzieningVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_voorziening");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.VoorzieningVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_voorziening");
            });

            modelBuilder.Entity<VoorzieningDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("voorziening__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_voorziening__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_voorziening__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_voorziening__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_voorziening__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.VoorzieningDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .HasConstraintName("fk_voorziening_kaartid_voorziening__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.VoorzieningDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_voorziening__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.VoorzieningDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_voorziening__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.VoorzieningDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_voorziening__documenten");
            });

            modelBuilder.Entity<VoorzieningEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("voorziening__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_voorziening__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_voorziening__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.VoorzieningEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_voorziening__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.VoorzieningEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_voorziening_kaartid_voorziening__emailberichten");
            });

            modelBuilder.Entity<VoorzieningLocatieLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("voorziening_locatie_link");

                entity.HasIndex(e => e.Locatieid)
                    .HasName("idx_voorziening_locatie_link_locatieid");

                entity.HasIndex(e => e.Voorzieningid)
                    .HasName("idx_voorziening_locatie_link_voorzieningid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Locatieid).HasColumnName("locatieid");

                entity.Property(e => e.Standaard).HasColumnName("standaard");

                entity.Property(e => e.Voorzieningid).HasColumnName("voorzieningid");

                entity.HasOne(d => d.Locatie)
                    .WithMany(p => p.VoorzieningLocatieLink)
                    .HasForeignKey(d => d.Locatieid)
                    .HasConstraintName("fk_locatie_locatieid_voorziening_locatie_link");

                entity.HasOne(d => d.Voorziening)
                    .WithMany(p => p.VoorzieningLocatieLink)
                    .HasForeignKey(d => d.Voorzieningid)
                    .HasConstraintName("fk_voorziening_voorzieningid_voorziening_locatie_link");
            });

            modelBuilder.Entity<VoorzieningLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("voorziening__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_voorziening__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_voorziening__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_voorziening__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_voorziening__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.VoorzieningLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_voorziening_kaartid_voorziening__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.VoorzieningLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_voorziening__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.VoorzieningLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_voorziening__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.VoorzieningLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_voorziening__logboek");
            });

            modelBuilder.Entity<VoorzieningObjectLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("voorziening_object_link");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_voorziening_object_link_objectid");

                entity.HasIndex(e => e.Voorzieningid)
                    .HasName("idx_voorziening_object_link_voorzieningid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Standaard).HasColumnName("standaard");

                entity.Property(e => e.Voorzieningid).HasColumnName("voorzieningid");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.VoorzieningObjectLink)
                    .HasForeignKey(d => d.Objectid)
                    .HasConstraintName("fk_object_objectid_voorziening_object_link");

                entity.HasOne(d => d.Voorziening)
                    .WithMany(p => p.VoorzieningObjectLink)
                    .HasForeignKey(d => d.Voorzieningid)
                    .HasConstraintName("fk_voorziening_voorzieningid_voorziening_object_link");
            });

            modelBuilder.Entity<Voorzieningsoort>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("voorzieningsoort");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_voorzieningsoort_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_voorzieningsoort_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_voorzieningsoort_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<VoorzieningVestigingLink>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("voorziening_vestiging_link");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_voorziening_vestiging_link_vestigingid");

                entity.HasIndex(e => e.Voorzieningid)
                    .HasName("idx_voorziening_vestiging_link_voorzieningid");

                entity.HasIndex(e => new { e.Voorzieningid, e.Vestigingid })
                    .HasName("uidx_voorziening_vestiging_link_voorzieningid_vestigingid")
                    .IsUnique();

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Voorzieningid).HasColumnName("voorzieningid");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.VoorzieningVestigingLink)
                    .HasForeignKey(d => d.Vestigingid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_vestiging_vestigingid_voorziening_vestiging_link");

                entity.HasOne(d => d.Voorziening)
                    .WithMany(p => p.VoorzieningVestigingLink)
                    .HasForeignKey(d => d.Voorzieningid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_voorziening_voorzieningid_voorziening_vestiging_link");
            });

            modelBuilder.Entity<Vrij1object>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij1object");

                entity.HasIndex(e => e.Aanspreekpuntid)
                    .HasName("idx_vrij1object_aanspreekpuntid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_vrij1object_archiefredenid");

                entity.HasIndex(e => e.Artikelbestellinkid)
                    .HasName("idx_vrij1object_artikelbestellinkid");

                entity.HasIndex(e => e.Artikelstatusid)
                    .HasName("idx_vrij1object_artikelstatusid");

                entity.HasIndex(e => e.Attentieid)
                    .HasName("idx_vrij1object_attentieid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_vrij1object_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_vrij1object_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_vrij1object_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_vrij1object_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_vrij1object_attvrijeopzoek5");

                entity.HasIndex(e => e.Bestelaanvraagid)
                    .HasName("idx_vrij1object_bestelaanvraagid");

                entity.HasIndex(e => e.Bestellingid)
                    .HasName("idx_vrij1object_bestellingid");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_vrij1object_budgethouderid");

                entity.HasIndex(e => e.Configuratieid)
                    .HasName("idx_vrij1object_configuratieid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_vrij1object_importid");

                entity.HasIndex(e => e.Installatiedoorid)
                    .HasName("idx_vrij1object_installatiedoorid");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_vrij1object_leverancierid");

                entity.HasIndex(e => e.Lokatieid)
                    .HasName("idx_vrij1object_lokatieid");

                entity.HasIndex(e => e.Merkid)
                    .HasName("idx_vrij1object_merkid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_vrij1object_objectid");

                entity.HasIndex(e => e.Objecttypeid)
                    .HasName("idx_vrij1object_objecttypeid");

                entity.HasIndex(e => e.OnderhoudDoorid)
                    .HasName("idx_vrij1object_onderhoud_doorid");

                entity.HasIndex(e => e.Onderhoudslacontractid)
                    .HasName("idx_vrij1object_onderhoudslacontractid");

                entity.HasIndex(e => e.Onderhoudsoortid)
                    .HasName("idx_vrij1object_onderhoudsoortid");

                entity.HasIndex(e => e.Onderhoudsplanid)
                    .HasName("idx_vrij1object_onderhoudsplanid");

                entity.HasIndex(e => e.Persoongroepid)
                    .HasName("idx_vrij1object_persoongroepid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vrij1object_persoonid");

                entity.HasIndex(e => e.RefKleur)
                    .HasName("idx_vrij1object_ref_kleur");

                entity.HasIndex(e => e.RefOrdernumber)
                    .HasName("idx_vrij1object_ref_ordernumber");

                entity.HasIndex(e => e.Reserveerbaaractiveerbaar)
                    .HasName("idx_vrij1object_reserveerbaaractiveerbaar");

                entity.HasIndex(e => e.Reserveerbaarsecure)
                    .HasName("idx_vrij1object_reserveerbaarsecure");

                entity.HasIndex(e => e.Reserveerbaarsshd)
                    .HasName("idx_vrij1object_reserveerbaarsshd");

                entity.HasIndex(e => e.Reservzichtbaarsshd)
                    .HasName("idx_vrij1object_reservzichtbaarsshd");

                entity.HasIndex(e => e.Servicewindowid)
                    .HasName("idx_vrij1object_servicewindowid");

                entity.HasIndex(e => e.Sjabloonobjectid)
                    .HasName("idx_vrij1object_sjabloonobjectid");

                entity.HasIndex(e => e.Soortid)
                    .HasName("idx_vrij1object_soortid");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_vrij1object_statusid");

                entity.HasIndex(e => e.Stdresvbehandelaarid)
                    .HasName("idx_vrij1object_stdresvbehandelaarid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij1object_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij1object_uidwijzig");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_vrij1object_vestigingid");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_vrij1object_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_vrij1object_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_vrij1object_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_vrij1object_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_vrij1object_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aankoopbedrag)
                    .HasColumnName("aankoopbedrag")
                    .HasColumnType("money");

                entity.Property(e => e.Aanschafdatum)
                    .HasColumnName("aanschafdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Aanspreekpuntid).HasColumnName("aanspreekpuntid");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afschrijftermijn).HasColumnName("afschrijftermijn");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Artikelbestellinkid).HasColumnName("artikelbestellinkid");

                entity.Property(e => e.Artikelstatusid).HasColumnName("artikelstatusid");

                entity.Property(e => e.Artikelwordtobject).HasColumnName("artikelwordtobject");

                entity.Property(e => e.Attentieid).HasColumnName("attentieid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelaanvraagid).HasColumnName("bestelaanvraagid");

                entity.Property(e => e.Bestelbaarinssh).HasColumnName("bestelbaarinssh");

                entity.Property(e => e.Bestellingid).HasColumnName("bestellingid");

                entity.Property(e => e.Blocktime).HasColumnName("blocktime");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Configuratieid).HasColumnName("configuratieid");

                entity.Property(e => e.CostsHightariff)
                    .HasColumnName("costs_hightariff")
                    .HasColumnType("money");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumeersteonderhoud)
                    .HasColumnName("datumeersteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumgeplandonderhoud)
                    .HasColumnName("datumgeplandonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumlaatsteonderhoud)
                    .HasColumnName("datumlaatsteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diversenonderhoud)
                    .HasColumnName("diversenonderhoud")
                    .HasColumnType("ntext");

                entity.Property(e => e.Garantiedatum)
                    .HasColumnName("garantiedatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.Heeftonderhoudsplan).HasColumnName("heeftonderhoudsplan");

                entity.Property(e => e.Heeftvoorraad).HasColumnName("heeftvoorraad");

                entity.Property(e => e.Hostnaam)
                    .IsRequired()
                    .HasColumnName("hostnaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Huidigevoorraad).HasColumnName("huidigevoorraad");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Installatiedoorid).HasColumnName("installatiedoorid");

                entity.Property(e => e.Korteomschrijving)
                    .IsRequired()
                    .HasColumnName("korteomschrijving")
                    .HasMaxLength(40);

                entity.Property(e => e.Leaseaanvangsdatum)
                    .HasColumnName("leaseaanvangsdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leasecontractnummer)
                    .IsRequired()
                    .HasColumnName("leasecontractnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Leaseeinddatum)
                    .HasColumnName("leaseeinddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leaseinfo).HasColumnName("leaseinfo");

                entity.Property(e => e.Leaseperiode).HasColumnName("leaseperiode");

                entity.Property(e => e.Leaseprijs)
                    .HasColumnName("leaseprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Lokatieid).HasColumnName("lokatieid");

                entity.Property(e => e.Merkid).HasColumnName("merkid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(60);

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Objecttype)
                    .IsRequired()
                    .HasColumnName("objecttype")
                    .HasMaxLength(100);

                entity.Property(e => e.Objecttypeid).HasColumnName("objecttypeid");

                entity.Property(e => e.OnderhoudDoorid).HasColumnName("onderhoud_doorid");

                entity.Property(e => e.Onderhoudcontract).HasColumnName("onderhoudcontract");

                entity.Property(e => e.Onderhoudnummer)
                    .IsRequired()
                    .HasColumnName("onderhoudnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Onderhoudprijs)
                    .HasColumnName("onderhoudprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Onderhoudresponsietijd).HasColumnName("onderhoudresponsietijd");

                entity.Property(e => e.Onderhoudslacontractid).HasColumnName("onderhoudslacontractid");

                entity.Property(e => e.Onderhoudslagebruikt).HasColumnName("onderhoudslagebruikt");

                entity.Property(e => e.Onderhoudsoortid).HasColumnName("onderhoudsoortid");

                entity.Property(e => e.Onderhoudsplanid).HasColumnName("onderhoudsplanid");

                entity.Property(e => e.Onderhoudtot)
                    .HasColumnName("onderhoudtot")
                    .HasColumnType("datetime");

                entity.Property(e => e.Onderhoudvanaf)
                    .HasColumnName("onderhoudvanaf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Opmerking)
                    .IsRequired()
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.Ordernummer)
                    .IsRequired()
                    .HasColumnName("ordernummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Persoongroepid).HasColumnName("persoongroepid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Plaats).HasColumnName("plaats");

                entity.Property(e => e.Plaatskeuze).HasColumnName("plaatskeuze");

                entity.Property(e => e.RefAanspreekpunt)
                    .IsRequired()
                    .HasColumnName("ref_aanspreekpunt")
                    .HasMaxLength(109);

                entity.Property(e => e.RefConfiguratie)
                    .IsRequired()
                    .HasColumnName("ref_configuratie")
                    .HasMaxLength(30);

                entity.Property(e => e.RefFinbudgethouder)
                    .IsRequired()
                    .HasColumnName("ref_finbudgethouder")
                    .HasMaxLength(100);

                entity.Property(e => e.RefKleur).HasColumnName("ref_kleur");

                entity.Property(e => e.RefLeverancier)
                    .IsRequired()
                    .HasColumnName("ref_leverancier")
                    .HasMaxLength(60);

                entity.Property(e => e.RefLokatie)
                    .IsRequired()
                    .HasColumnName("ref_lokatie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefMerk)
                    .IsRequired()
                    .HasColumnName("ref_merk")
                    .HasMaxLength(100);

                entity.Property(e => e.RefOrdernumber)
                    .HasColumnName("ref_ordernumber")
                    .HasMaxLength(30);

                entity.Property(e => e.RefPersoon)
                    .IsRequired()
                    .HasColumnName("ref_persoon")
                    .HasMaxLength(109);

                entity.Property(e => e.RefPersoongroep)
                    .IsRequired()
                    .HasColumnName("ref_persoongroep")
                    .HasMaxLength(50);

                entity.Property(e => e.RefPlaats1)
                    .IsRequired()
                    .HasColumnName("ref_plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.RefSoort)
                    .IsRequired()
                    .HasColumnName("ref_soort")
                    .HasMaxLength(100);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.ReservableOfficehoursSsd).HasColumnName("reservable_officehours_ssd");

                entity.Property(e => e.Reservablewithlocation).HasColumnName("reservablewithlocation");

                entity.Property(e => e.Reserveerbaaractiveerbaar).HasColumnName("reserveerbaaractiveerbaar");

                entity.Property(e => e.Reserveerbaarkantooruren).HasColumnName("reserveerbaarkantooruren");

                entity.Property(e => e.Reserveerbaarsecure).HasColumnName("reserveerbaarsecure");

                entity.Property(e => e.Reserveerbaarsshd).HasColumnName("reserveerbaarsshd");

                entity.Property(e => e.Reservzichtbaarsshd).HasColumnName("reservzichtbaarsshd");

                entity.Property(e => e.Restwaarde)
                    .HasColumnName("restwaarde")
                    .HasColumnType("money");

                entity.Property(e => e.RmSpecification)
                    .IsRequired()
                    .HasColumnName("rm_specification")
                    .HasMaxLength(100);

                entity.Property(e => e.Serienummer)
                    .IsRequired()
                    .HasColumnName("serienummer")
                    .HasMaxLength(100);

                entity.Property(e => e.ServicewindowOption).HasColumnName("servicewindow_option");

                entity.Property(e => e.Servicewindowid).HasColumnName("servicewindowid");

                entity.Property(e => e.Sjabloonobjectid).HasColumnName("sjabloonobjectid");

                entity.Property(e => e.Soortid).HasColumnName("soortid");

                entity.Property(e => e.Specificatie)
                    .IsRequired()
                    .HasColumnName("specificatie")
                    .HasMaxLength(60);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Stdresvbehandelaarid).HasColumnName("stdresvbehandelaarid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veiligvoorraad).HasColumnName("veiligvoorraad");

                entity.Property(e => e.Verhuurborg)
                    .HasColumnName("verhuurborg")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijs)
                    .HasColumnName("verhuurprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijssysteem).HasColumnName("verhuurprijssysteem");

                entity.Property(e => e.Verhuurtekst)
                    .HasColumnName("verhuurtekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.Verkoopprijs)
                    .HasColumnName("verkoopprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verzekerdatum)
                    .HasColumnName("verzekerdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Vnc).HasColumnName("vnc");

                entity.Property(e => e.Vnchostnaam)
                    .HasColumnName("vnchostnaam")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Wburl)
                    .IsRequired()
                    .HasColumnName("wburl")
                    .HasMaxLength(1024);

                entity.Property(e => e.Webbrowser).HasColumnName("webbrowser");

                entity.HasOne(d => d.Aanspreekpunt)
                    .WithMany(p => p.Vrij1objectAanspreekpunt)
                    .HasForeignKey(d => d.Aanspreekpuntid)
                    .HasConstraintName("fk_actiedoor_aanspreekpuntid_vrij1object");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_vrij1object");

                entity.HasOne(d => d.Artikelbestellink)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Artikelbestellinkid)
                    .HasConstraintName("fk_artikel_bestel_link_artikelbestellinkid_vrij1object");

                entity.HasOne(d => d.Artikelstatus)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Artikelstatusid)
                    .HasConstraintName("fk_artikelstatus_artikelstatusid_vrij1object");

                entity.HasOne(d => d.Attentie)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Attentieid)
                    .HasConstraintName("fk_attentie_attentieid_vrij1object");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij1objectAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_vrij1object");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij1objectAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_vrij1object");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij1objectAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_vrij1object");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij1objectAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_vrij1object");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij1objectAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_vrij1object");

                entity.HasOne(d => d.Bestelaanvraag)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Bestelaanvraagid)
                    .HasConstraintName("fk_bestelaanvraag_bestelaanvraagid_vrij1object");

                entity.HasOne(d => d.Bestelling)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Bestellingid)
                    .HasConstraintName("fk_bestellingen_bestellingid_vrij1object");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_vrij1object");

                entity.HasOne(d => d.Configuratie)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Configuratieid)
                    .HasConstraintName("fk_configuratie_configuratieid_vrij1object");

                entity.HasOne(d => d.Installatiedoor)
                    .WithMany(p => p.Vrij1objectInstallatiedoor)
                    .HasForeignKey(d => d.Installatiedoorid)
                    .HasConstraintName("fk_actiedoor_installatiedoorid_vrij1object");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.Vrij1objectLeverancier)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_vrij1object");

                entity.HasOne(d => d.Lokatie)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Lokatieid)
                    .HasConstraintName("fk_locatie_lokatieid_vrij1object");

                entity.HasOne(d => d.Merk)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Merkid)
                    .HasConstraintName("fk_objectmerk_merkid_vrij1object");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_vrij1object");

                entity.HasOne(d => d.ObjecttypeNavigation)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Objecttypeid)
                    .HasConstraintName("fk_objecttype_objecttypeid_vrij1object");

                entity.HasOne(d => d.OnderhoudDoor)
                    .WithMany(p => p.Vrij1objectOnderhoudDoor)
                    .HasForeignKey(d => d.OnderhoudDoorid)
                    .HasConstraintName("fk_leverancier_onderhoud_doorid_vrij1object");

                entity.HasOne(d => d.Onderhoudslacontract)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Onderhoudslacontractid)
                    .HasConstraintName("fk_dnocontract_onderhoudslacontractid_vrij1object");

                entity.HasOne(d => d.Onderhoudsoort)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Onderhoudsoortid)
                    .HasConstraintName("fk_slacontractsoort_onderhoudsoortid_vrij1object");

                entity.HasOne(d => d.Onderhoudsplan)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Onderhoudsplanid)
                    .HasConstraintName("fk_onderhoudsplan_onderhoudsplanid_vrij1object");

                entity.HasOne(d => d.Persoongroep)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Persoongroepid)
                    .HasConstraintName("fk_persoongroep_persoongroepid_vrij1object");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vrij1object");

                entity.HasOne(d => d.Servicewindow)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Servicewindowid)
                    .HasConstraintName("fk_servicewindow_servicewindowid_vrij1object");

                entity.HasOne(d => d.Sjabloonobject)
                    .WithMany(p => p.InverseSjabloonobject)
                    .HasForeignKey(d => d.Sjabloonobjectid)
                    .HasConstraintName("fk_vrij1object_sjabloonobjectid_vrij1object");

                entity.HasOne(d => d.Soort)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Soortid)
                    .HasConstraintName("fk_objectsoort_soortid_vrij1object");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_objectstatus_statusid_vrij1object");

                entity.HasOne(d => d.Stdresvbehandelaar)
                    .WithMany(p => p.Vrij1objectStdresvbehandelaar)
                    .HasForeignKey(d => d.Stdresvbehandelaarid)
                    .HasConstraintName("fk_actiedoor_stdresvbehandelaarid_vrij1object");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij1objectUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij1object");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij1objectUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij1object");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.Vrij1object)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_vrij1object");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij1objectVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_vrij1object");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij1objectVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_vrij1object");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij1objectVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_vrij1object");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij1objectVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_vrij1object");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij1objectVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_vrij1object");
            });

            modelBuilder.Entity<Vrij1objectDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij1object__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vrij1object__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vrij1object__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij1object__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij1object__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.Vrij1objectDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vrij1object_kaartid_vrij1object__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Vrij1objectDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vrij1object__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij1objectDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij1object__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij1objectDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij1object__documenten");
            });

            modelBuilder.Entity<Vrij1objectEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij1object__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_vrij1object__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vrij1object__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.Vrij1objectEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_vrij1object__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.Vrij1objectEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vrij1object_kaartid_vrij1object__emailberichten");
            });

            modelBuilder.Entity<Vrij1objectLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij1object__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vrij1object__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vrij1object__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij1object__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij1object__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.Vrij1objectLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vrij1object_kaartid_vrij1object__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Vrij1objectLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vrij1object__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij1objectLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij1object__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij1objectLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij1object__logboek");
            });

            modelBuilder.Entity<Vrij1objectOptionalgrid>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij1object__optionalgrid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_vrij1object__optionalgrid_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_vrij1object__optionalgrid_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_vrij1object__optionalgrid_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_vrij1object__optionalgrid_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_vrij1object__optionalgrid_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_vrij1object__optionalgrid_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_vrij1object__optionalgrid_parentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij1object__optionalgrid_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij1object__optionalgrid_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_vrij1object__optionalgrid_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_vrij1object__optionalgrid_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_vrij1object__optionalgrid_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_vrij1object__optionalgrid_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_vrij1object__optionalgrid_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij1objectOptionalgridAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_vrij1object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij1objectOptionalgridAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_vrij1object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij1objectOptionalgridAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_vrij1object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij1objectOptionalgridAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_vrij1object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij1objectOptionalgridAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_vrij1object__optionalgrid");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.Vrij1objectOptionalgrid)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_vrij1object_parentid_vrij1object__optionalgrid");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij1objectOptionalgridUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij1object__optionalgrid");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij1objectOptionalgridUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij1object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij1objectOptionalgridVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_vrij1object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij1objectOptionalgridVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_vrij1object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij1objectOptionalgridVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_vrij1object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij1objectOptionalgridVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_vrij1object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij1objectOptionalgridVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_vrij1object__optionalgrid");
            });

            modelBuilder.Entity<Vrij2object>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij2object");

                entity.HasIndex(e => e.Aanspreekpuntid)
                    .HasName("idx_vrij2object_aanspreekpuntid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_vrij2object_archiefredenid");

                entity.HasIndex(e => e.Artikelbestellinkid)
                    .HasName("idx_vrij2object_artikelbestellinkid");

                entity.HasIndex(e => e.Artikelstatusid)
                    .HasName("idx_vrij2object_artikelstatusid");

                entity.HasIndex(e => e.Attentieid)
                    .HasName("idx_vrij2object_attentieid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_vrij2object_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_vrij2object_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_vrij2object_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_vrij2object_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_vrij2object_attvrijeopzoek5");

                entity.HasIndex(e => e.Bestelaanvraagid)
                    .HasName("idx_vrij2object_bestelaanvraagid");

                entity.HasIndex(e => e.Bestellingid)
                    .HasName("idx_vrij2object_bestellingid");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_vrij2object_budgethouderid");

                entity.HasIndex(e => e.Configuratieid)
                    .HasName("idx_vrij2object_configuratieid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_vrij2object_importid");

                entity.HasIndex(e => e.Installatiedoorid)
                    .HasName("idx_vrij2object_installatiedoorid");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_vrij2object_leverancierid");

                entity.HasIndex(e => e.Lokatieid)
                    .HasName("idx_vrij2object_lokatieid");

                entity.HasIndex(e => e.Merkid)
                    .HasName("idx_vrij2object_merkid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_vrij2object_objectid");

                entity.HasIndex(e => e.Objecttypeid)
                    .HasName("idx_vrij2object_objecttypeid");

                entity.HasIndex(e => e.OnderhoudDoorid)
                    .HasName("idx_vrij2object_onderhoud_doorid");

                entity.HasIndex(e => e.Onderhoudslacontractid)
                    .HasName("idx_vrij2object_onderhoudslacontractid");

                entity.HasIndex(e => e.Onderhoudsoortid)
                    .HasName("idx_vrij2object_onderhoudsoortid");

                entity.HasIndex(e => e.Onderhoudsplanid)
                    .HasName("idx_vrij2object_onderhoudsplanid");

                entity.HasIndex(e => e.Persoongroepid)
                    .HasName("idx_vrij2object_persoongroepid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vrij2object_persoonid");

                entity.HasIndex(e => e.RefKleur)
                    .HasName("idx_vrij2object_ref_kleur");

                entity.HasIndex(e => e.RefOrdernumber)
                    .HasName("idx_vrij2object_ref_ordernumber");

                entity.HasIndex(e => e.Reserveerbaaractiveerbaar)
                    .HasName("idx_vrij2object_reserveerbaaractiveerbaar");

                entity.HasIndex(e => e.Reserveerbaarsecure)
                    .HasName("idx_vrij2object_reserveerbaarsecure");

                entity.HasIndex(e => e.Reserveerbaarsshd)
                    .HasName("idx_vrij2object_reserveerbaarsshd");

                entity.HasIndex(e => e.Reservzichtbaarsshd)
                    .HasName("idx_vrij2object_reservzichtbaarsshd");

                entity.HasIndex(e => e.Servicewindowid)
                    .HasName("idx_vrij2object_servicewindowid");

                entity.HasIndex(e => e.Sjabloonobjectid)
                    .HasName("idx_vrij2object_sjabloonobjectid");

                entity.HasIndex(e => e.Soortid)
                    .HasName("idx_vrij2object_soortid");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_vrij2object_statusid");

                entity.HasIndex(e => e.Stdresvbehandelaarid)
                    .HasName("idx_vrij2object_stdresvbehandelaarid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij2object_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij2object_uidwijzig");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_vrij2object_vestigingid");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_vrij2object_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_vrij2object_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_vrij2object_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_vrij2object_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_vrij2object_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aankoopbedrag)
                    .HasColumnName("aankoopbedrag")
                    .HasColumnType("money");

                entity.Property(e => e.Aanschafdatum)
                    .HasColumnName("aanschafdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Aanspreekpuntid).HasColumnName("aanspreekpuntid");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afschrijftermijn).HasColumnName("afschrijftermijn");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Artikelbestellinkid).HasColumnName("artikelbestellinkid");

                entity.Property(e => e.Artikelstatusid).HasColumnName("artikelstatusid");

                entity.Property(e => e.Artikelwordtobject).HasColumnName("artikelwordtobject");

                entity.Property(e => e.Attentieid).HasColumnName("attentieid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelaanvraagid).HasColumnName("bestelaanvraagid");

                entity.Property(e => e.Bestelbaarinssh).HasColumnName("bestelbaarinssh");

                entity.Property(e => e.Bestellingid).HasColumnName("bestellingid");

                entity.Property(e => e.Blocktime).HasColumnName("blocktime");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Configuratieid).HasColumnName("configuratieid");

                entity.Property(e => e.CostsHightariff)
                    .HasColumnName("costs_hightariff")
                    .HasColumnType("money");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumeersteonderhoud)
                    .HasColumnName("datumeersteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumgeplandonderhoud)
                    .HasColumnName("datumgeplandonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumlaatsteonderhoud)
                    .HasColumnName("datumlaatsteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diversenonderhoud)
                    .HasColumnName("diversenonderhoud")
                    .HasColumnType("ntext");

                entity.Property(e => e.Garantiedatum)
                    .HasColumnName("garantiedatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.Heeftonderhoudsplan).HasColumnName("heeftonderhoudsplan");

                entity.Property(e => e.Heeftvoorraad).HasColumnName("heeftvoorraad");

                entity.Property(e => e.Hostnaam)
                    .IsRequired()
                    .HasColumnName("hostnaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Huidigevoorraad).HasColumnName("huidigevoorraad");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Installatiedoorid).HasColumnName("installatiedoorid");

                entity.Property(e => e.Korteomschrijving)
                    .IsRequired()
                    .HasColumnName("korteomschrijving")
                    .HasMaxLength(40);

                entity.Property(e => e.Leaseaanvangsdatum)
                    .HasColumnName("leaseaanvangsdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leasecontractnummer)
                    .IsRequired()
                    .HasColumnName("leasecontractnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Leaseeinddatum)
                    .HasColumnName("leaseeinddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leaseinfo).HasColumnName("leaseinfo");

                entity.Property(e => e.Leaseperiode).HasColumnName("leaseperiode");

                entity.Property(e => e.Leaseprijs)
                    .HasColumnName("leaseprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Lokatieid).HasColumnName("lokatieid");

                entity.Property(e => e.Merkid).HasColumnName("merkid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(60);

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Objecttype)
                    .IsRequired()
                    .HasColumnName("objecttype")
                    .HasMaxLength(100);

                entity.Property(e => e.Objecttypeid).HasColumnName("objecttypeid");

                entity.Property(e => e.OnderhoudDoorid).HasColumnName("onderhoud_doorid");

                entity.Property(e => e.Onderhoudcontract).HasColumnName("onderhoudcontract");

                entity.Property(e => e.Onderhoudnummer)
                    .IsRequired()
                    .HasColumnName("onderhoudnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Onderhoudprijs)
                    .HasColumnName("onderhoudprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Onderhoudresponsietijd).HasColumnName("onderhoudresponsietijd");

                entity.Property(e => e.Onderhoudslacontractid).HasColumnName("onderhoudslacontractid");

                entity.Property(e => e.Onderhoudslagebruikt).HasColumnName("onderhoudslagebruikt");

                entity.Property(e => e.Onderhoudsoortid).HasColumnName("onderhoudsoortid");

                entity.Property(e => e.Onderhoudsplanid).HasColumnName("onderhoudsplanid");

                entity.Property(e => e.Onderhoudtot)
                    .HasColumnName("onderhoudtot")
                    .HasColumnType("datetime");

                entity.Property(e => e.Onderhoudvanaf)
                    .HasColumnName("onderhoudvanaf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Opmerking)
                    .IsRequired()
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.Ordernummer)
                    .IsRequired()
                    .HasColumnName("ordernummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Persoongroepid).HasColumnName("persoongroepid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Plaats).HasColumnName("plaats");

                entity.Property(e => e.Plaatskeuze).HasColumnName("plaatskeuze");

                entity.Property(e => e.RefAanspreekpunt)
                    .IsRequired()
                    .HasColumnName("ref_aanspreekpunt")
                    .HasMaxLength(109);

                entity.Property(e => e.RefConfiguratie)
                    .IsRequired()
                    .HasColumnName("ref_configuratie")
                    .HasMaxLength(30);

                entity.Property(e => e.RefFinbudgethouder)
                    .IsRequired()
                    .HasColumnName("ref_finbudgethouder")
                    .HasMaxLength(100);

                entity.Property(e => e.RefKleur).HasColumnName("ref_kleur");

                entity.Property(e => e.RefLeverancier)
                    .IsRequired()
                    .HasColumnName("ref_leverancier")
                    .HasMaxLength(60);

                entity.Property(e => e.RefLokatie)
                    .IsRequired()
                    .HasColumnName("ref_lokatie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefMerk)
                    .IsRequired()
                    .HasColumnName("ref_merk")
                    .HasMaxLength(100);

                entity.Property(e => e.RefOrdernumber)
                    .HasColumnName("ref_ordernumber")
                    .HasMaxLength(30);

                entity.Property(e => e.RefPersoon)
                    .IsRequired()
                    .HasColumnName("ref_persoon")
                    .HasMaxLength(109);

                entity.Property(e => e.RefPersoongroep)
                    .IsRequired()
                    .HasColumnName("ref_persoongroep")
                    .HasMaxLength(50);

                entity.Property(e => e.RefPlaats1)
                    .IsRequired()
                    .HasColumnName("ref_plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.RefSoort)
                    .IsRequired()
                    .HasColumnName("ref_soort")
                    .HasMaxLength(100);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.ReservableOfficehoursSsd).HasColumnName("reservable_officehours_ssd");

                entity.Property(e => e.Reservablewithlocation).HasColumnName("reservablewithlocation");

                entity.Property(e => e.Reserveerbaaractiveerbaar).HasColumnName("reserveerbaaractiveerbaar");

                entity.Property(e => e.Reserveerbaarkantooruren).HasColumnName("reserveerbaarkantooruren");

                entity.Property(e => e.Reserveerbaarsecure).HasColumnName("reserveerbaarsecure");

                entity.Property(e => e.Reserveerbaarsshd).HasColumnName("reserveerbaarsshd");

                entity.Property(e => e.Reservzichtbaarsshd).HasColumnName("reservzichtbaarsshd");

                entity.Property(e => e.Restwaarde)
                    .HasColumnName("restwaarde")
                    .HasColumnType("money");

                entity.Property(e => e.RmSpecification)
                    .IsRequired()
                    .HasColumnName("rm_specification")
                    .HasMaxLength(100);

                entity.Property(e => e.Serienummer)
                    .IsRequired()
                    .HasColumnName("serienummer")
                    .HasMaxLength(100);

                entity.Property(e => e.ServicewindowOption).HasColumnName("servicewindow_option");

                entity.Property(e => e.Servicewindowid).HasColumnName("servicewindowid");

                entity.Property(e => e.Sjabloonobjectid).HasColumnName("sjabloonobjectid");

                entity.Property(e => e.Soortid).HasColumnName("soortid");

                entity.Property(e => e.Specificatie)
                    .IsRequired()
                    .HasColumnName("specificatie")
                    .HasMaxLength(60);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Stdresvbehandelaarid).HasColumnName("stdresvbehandelaarid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veiligvoorraad).HasColumnName("veiligvoorraad");

                entity.Property(e => e.Verhuurborg)
                    .HasColumnName("verhuurborg")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijs)
                    .HasColumnName("verhuurprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijssysteem).HasColumnName("verhuurprijssysteem");

                entity.Property(e => e.Verhuurtekst)
                    .HasColumnName("verhuurtekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.Verkoopprijs)
                    .HasColumnName("verkoopprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verzekerdatum)
                    .HasColumnName("verzekerdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Vnc).HasColumnName("vnc");

                entity.Property(e => e.Vnchostnaam)
                    .HasColumnName("vnchostnaam")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Wburl)
                    .IsRequired()
                    .HasColumnName("wburl")
                    .HasMaxLength(1024);

                entity.Property(e => e.Webbrowser).HasColumnName("webbrowser");

                entity.HasOne(d => d.Aanspreekpunt)
                    .WithMany(p => p.Vrij2objectAanspreekpunt)
                    .HasForeignKey(d => d.Aanspreekpuntid)
                    .HasConstraintName("fk_actiedoor_aanspreekpuntid_vrij2object");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_vrij2object");

                entity.HasOne(d => d.Artikelbestellink)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Artikelbestellinkid)
                    .HasConstraintName("fk_artikel_bestel_link_artikelbestellinkid_vrij2object");

                entity.HasOne(d => d.Artikelstatus)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Artikelstatusid)
                    .HasConstraintName("fk_artikelstatus_artikelstatusid_vrij2object");

                entity.HasOne(d => d.Attentie)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Attentieid)
                    .HasConstraintName("fk_attentie_attentieid_vrij2object");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij2objectAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_vrij2object");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij2objectAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_vrij2object");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij2objectAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_vrij2object");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij2objectAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_vrij2object");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij2objectAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_vrij2object");

                entity.HasOne(d => d.Bestelaanvraag)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Bestelaanvraagid)
                    .HasConstraintName("fk_bestelaanvraag_bestelaanvraagid_vrij2object");

                entity.HasOne(d => d.Bestelling)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Bestellingid)
                    .HasConstraintName("fk_bestellingen_bestellingid_vrij2object");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_vrij2object");

                entity.HasOne(d => d.Configuratie)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Configuratieid)
                    .HasConstraintName("fk_configuratie_configuratieid_vrij2object");

                entity.HasOne(d => d.Installatiedoor)
                    .WithMany(p => p.Vrij2objectInstallatiedoor)
                    .HasForeignKey(d => d.Installatiedoorid)
                    .HasConstraintName("fk_actiedoor_installatiedoorid_vrij2object");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.Vrij2objectLeverancier)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_vrij2object");

                entity.HasOne(d => d.Lokatie)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Lokatieid)
                    .HasConstraintName("fk_locatie_lokatieid_vrij2object");

                entity.HasOne(d => d.Merk)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Merkid)
                    .HasConstraintName("fk_objectmerk_merkid_vrij2object");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_vrij2object");

                entity.HasOne(d => d.ObjecttypeNavigation)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Objecttypeid)
                    .HasConstraintName("fk_objecttype_objecttypeid_vrij2object");

                entity.HasOne(d => d.OnderhoudDoor)
                    .WithMany(p => p.Vrij2objectOnderhoudDoor)
                    .HasForeignKey(d => d.OnderhoudDoorid)
                    .HasConstraintName("fk_leverancier_onderhoud_doorid_vrij2object");

                entity.HasOne(d => d.Onderhoudslacontract)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Onderhoudslacontractid)
                    .HasConstraintName("fk_dnocontract_onderhoudslacontractid_vrij2object");

                entity.HasOne(d => d.Onderhoudsoort)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Onderhoudsoortid)
                    .HasConstraintName("fk_slacontractsoort_onderhoudsoortid_vrij2object");

                entity.HasOne(d => d.Onderhoudsplan)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Onderhoudsplanid)
                    .HasConstraintName("fk_onderhoudsplan_onderhoudsplanid_vrij2object");

                entity.HasOne(d => d.Persoongroep)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Persoongroepid)
                    .HasConstraintName("fk_persoongroep_persoongroepid_vrij2object");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vrij2object");

                entity.HasOne(d => d.Servicewindow)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Servicewindowid)
                    .HasConstraintName("fk_servicewindow_servicewindowid_vrij2object");

                entity.HasOne(d => d.Sjabloonobject)
                    .WithMany(p => p.InverseSjabloonobject)
                    .HasForeignKey(d => d.Sjabloonobjectid)
                    .HasConstraintName("fk_vrij2object_sjabloonobjectid_vrij2object");

                entity.HasOne(d => d.Soort)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Soortid)
                    .HasConstraintName("fk_objectsoort_soortid_vrij2object");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_objectstatus_statusid_vrij2object");

                entity.HasOne(d => d.Stdresvbehandelaar)
                    .WithMany(p => p.Vrij2objectStdresvbehandelaar)
                    .HasForeignKey(d => d.Stdresvbehandelaarid)
                    .HasConstraintName("fk_actiedoor_stdresvbehandelaarid_vrij2object");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij2objectUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij2object");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij2objectUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij2object");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.Vrij2object)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_vrij2object");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij2objectVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_vrij2object");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij2objectVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_vrij2object");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij2objectVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_vrij2object");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij2objectVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_vrij2object");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij2objectVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_vrij2object");
            });

            modelBuilder.Entity<Vrij2objectDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij2object__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vrij2object__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vrij2object__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij2object__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij2object__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.Vrij2objectDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vrij2object_kaartid_vrij2object__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Vrij2objectDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vrij2object__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij2objectDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij2object__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij2objectDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij2object__documenten");
            });

            modelBuilder.Entity<Vrij2objectEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij2object__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_vrij2object__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vrij2object__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.Vrij2objectEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_vrij2object__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.Vrij2objectEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vrij2object_kaartid_vrij2object__emailberichten");
            });

            modelBuilder.Entity<Vrij2objectLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij2object__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vrij2object__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vrij2object__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij2object__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij2object__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.Vrij2objectLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vrij2object_kaartid_vrij2object__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Vrij2objectLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vrij2object__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij2objectLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij2object__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij2objectLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij2object__logboek");
            });

            modelBuilder.Entity<Vrij2objectOptionalgrid>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij2object__optionalgrid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_vrij2object__optionalgrid_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_vrij2object__optionalgrid_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_vrij2object__optionalgrid_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_vrij2object__optionalgrid_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_vrij2object__optionalgrid_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_vrij2object__optionalgrid_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_vrij2object__optionalgrid_parentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij2object__optionalgrid_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij2object__optionalgrid_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_vrij2object__optionalgrid_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_vrij2object__optionalgrid_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_vrij2object__optionalgrid_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_vrij2object__optionalgrid_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_vrij2object__optionalgrid_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij2objectOptionalgridAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_vrij2object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij2objectOptionalgridAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_vrij2object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij2objectOptionalgridAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_vrij2object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij2objectOptionalgridAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_vrij2object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij2objectOptionalgridAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_vrij2object__optionalgrid");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.Vrij2objectOptionalgrid)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_vrij2object_parentid_vrij2object__optionalgrid");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij2objectOptionalgridUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij2object__optionalgrid");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij2objectOptionalgridUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij2object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij2objectOptionalgridVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_vrij2object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij2objectOptionalgridVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_vrij2object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij2objectOptionalgridVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_vrij2object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij2objectOptionalgridVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_vrij2object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij2objectOptionalgridVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_vrij2object__optionalgrid");
            });

            modelBuilder.Entity<Vrij3object>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij3object");

                entity.HasIndex(e => e.Aanspreekpuntid)
                    .HasName("idx_vrij3object_aanspreekpuntid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_vrij3object_archiefredenid");

                entity.HasIndex(e => e.Artikelbestellinkid)
                    .HasName("idx_vrij3object_artikelbestellinkid");

                entity.HasIndex(e => e.Artikelstatusid)
                    .HasName("idx_vrij3object_artikelstatusid");

                entity.HasIndex(e => e.Attentieid)
                    .HasName("idx_vrij3object_attentieid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_vrij3object_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_vrij3object_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_vrij3object_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_vrij3object_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_vrij3object_attvrijeopzoek5");

                entity.HasIndex(e => e.Bestelaanvraagid)
                    .HasName("idx_vrij3object_bestelaanvraagid");

                entity.HasIndex(e => e.Bestellingid)
                    .HasName("idx_vrij3object_bestellingid");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_vrij3object_budgethouderid");

                entity.HasIndex(e => e.Configuratieid)
                    .HasName("idx_vrij3object_configuratieid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_vrij3object_importid");

                entity.HasIndex(e => e.Installatiedoorid)
                    .HasName("idx_vrij3object_installatiedoorid");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_vrij3object_leverancierid");

                entity.HasIndex(e => e.Lokatieid)
                    .HasName("idx_vrij3object_lokatieid");

                entity.HasIndex(e => e.Merkid)
                    .HasName("idx_vrij3object_merkid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_vrij3object_objectid");

                entity.HasIndex(e => e.Objecttypeid)
                    .HasName("idx_vrij3object_objecttypeid");

                entity.HasIndex(e => e.OnderhoudDoorid)
                    .HasName("idx_vrij3object_onderhoud_doorid");

                entity.HasIndex(e => e.Onderhoudslacontractid)
                    .HasName("idx_vrij3object_onderhoudslacontractid");

                entity.HasIndex(e => e.Onderhoudsoortid)
                    .HasName("idx_vrij3object_onderhoudsoortid");

                entity.HasIndex(e => e.Onderhoudsplanid)
                    .HasName("idx_vrij3object_onderhoudsplanid");

                entity.HasIndex(e => e.Persoongroepid)
                    .HasName("idx_vrij3object_persoongroepid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vrij3object_persoonid");

                entity.HasIndex(e => e.RefKleur)
                    .HasName("idx_vrij3object_ref_kleur");

                entity.HasIndex(e => e.RefOrdernumber)
                    .HasName("idx_vrij3object_ref_ordernumber");

                entity.HasIndex(e => e.Reserveerbaaractiveerbaar)
                    .HasName("idx_vrij3object_reserveerbaaractiveerbaar");

                entity.HasIndex(e => e.Reserveerbaarsecure)
                    .HasName("idx_vrij3object_reserveerbaarsecure");

                entity.HasIndex(e => e.Reserveerbaarsshd)
                    .HasName("idx_vrij3object_reserveerbaarsshd");

                entity.HasIndex(e => e.Reservzichtbaarsshd)
                    .HasName("idx_vrij3object_reservzichtbaarsshd");

                entity.HasIndex(e => e.Servicewindowid)
                    .HasName("idx_vrij3object_servicewindowid");

                entity.HasIndex(e => e.Sjabloonobjectid)
                    .HasName("idx_vrij3object_sjabloonobjectid");

                entity.HasIndex(e => e.Soortid)
                    .HasName("idx_vrij3object_soortid");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_vrij3object_statusid");

                entity.HasIndex(e => e.Stdresvbehandelaarid)
                    .HasName("idx_vrij3object_stdresvbehandelaarid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij3object_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij3object_uidwijzig");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_vrij3object_vestigingid");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_vrij3object_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_vrij3object_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_vrij3object_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_vrij3object_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_vrij3object_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aankoopbedrag)
                    .HasColumnName("aankoopbedrag")
                    .HasColumnType("money");

                entity.Property(e => e.Aanschafdatum)
                    .HasColumnName("aanschafdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Aanspreekpuntid).HasColumnName("aanspreekpuntid");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afschrijftermijn).HasColumnName("afschrijftermijn");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Artikelbestellinkid).HasColumnName("artikelbestellinkid");

                entity.Property(e => e.Artikelstatusid).HasColumnName("artikelstatusid");

                entity.Property(e => e.Artikelwordtobject).HasColumnName("artikelwordtobject");

                entity.Property(e => e.Attentieid).HasColumnName("attentieid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelaanvraagid).HasColumnName("bestelaanvraagid");

                entity.Property(e => e.Bestelbaarinssh).HasColumnName("bestelbaarinssh");

                entity.Property(e => e.Bestellingid).HasColumnName("bestellingid");

                entity.Property(e => e.Blocktime).HasColumnName("blocktime");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Configuratieid).HasColumnName("configuratieid");

                entity.Property(e => e.CostsHightariff)
                    .HasColumnName("costs_hightariff")
                    .HasColumnType("money");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumeersteonderhoud)
                    .HasColumnName("datumeersteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumgeplandonderhoud)
                    .HasColumnName("datumgeplandonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumlaatsteonderhoud)
                    .HasColumnName("datumlaatsteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diversenonderhoud)
                    .HasColumnName("diversenonderhoud")
                    .HasColumnType("ntext");

                entity.Property(e => e.Garantiedatum)
                    .HasColumnName("garantiedatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.Heeftonderhoudsplan).HasColumnName("heeftonderhoudsplan");

                entity.Property(e => e.Heeftvoorraad).HasColumnName("heeftvoorraad");

                entity.Property(e => e.Hostnaam)
                    .IsRequired()
                    .HasColumnName("hostnaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Huidigevoorraad).HasColumnName("huidigevoorraad");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Installatiedoorid).HasColumnName("installatiedoorid");

                entity.Property(e => e.Korteomschrijving)
                    .IsRequired()
                    .HasColumnName("korteomschrijving")
                    .HasMaxLength(40);

                entity.Property(e => e.Leaseaanvangsdatum)
                    .HasColumnName("leaseaanvangsdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leasecontractnummer)
                    .IsRequired()
                    .HasColumnName("leasecontractnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Leaseeinddatum)
                    .HasColumnName("leaseeinddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leaseinfo).HasColumnName("leaseinfo");

                entity.Property(e => e.Leaseperiode).HasColumnName("leaseperiode");

                entity.Property(e => e.Leaseprijs)
                    .HasColumnName("leaseprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Lokatieid).HasColumnName("lokatieid");

                entity.Property(e => e.Merkid).HasColumnName("merkid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(60);

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Objecttype)
                    .IsRequired()
                    .HasColumnName("objecttype")
                    .HasMaxLength(100);

                entity.Property(e => e.Objecttypeid).HasColumnName("objecttypeid");

                entity.Property(e => e.OnderhoudDoorid).HasColumnName("onderhoud_doorid");

                entity.Property(e => e.Onderhoudcontract).HasColumnName("onderhoudcontract");

                entity.Property(e => e.Onderhoudnummer)
                    .IsRequired()
                    .HasColumnName("onderhoudnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Onderhoudprijs)
                    .HasColumnName("onderhoudprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Onderhoudresponsietijd).HasColumnName("onderhoudresponsietijd");

                entity.Property(e => e.Onderhoudslacontractid).HasColumnName("onderhoudslacontractid");

                entity.Property(e => e.Onderhoudslagebruikt).HasColumnName("onderhoudslagebruikt");

                entity.Property(e => e.Onderhoudsoortid).HasColumnName("onderhoudsoortid");

                entity.Property(e => e.Onderhoudsplanid).HasColumnName("onderhoudsplanid");

                entity.Property(e => e.Onderhoudtot)
                    .HasColumnName("onderhoudtot")
                    .HasColumnType("datetime");

                entity.Property(e => e.Onderhoudvanaf)
                    .HasColumnName("onderhoudvanaf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Opmerking)
                    .IsRequired()
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.Ordernummer)
                    .IsRequired()
                    .HasColumnName("ordernummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Persoongroepid).HasColumnName("persoongroepid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Plaats).HasColumnName("plaats");

                entity.Property(e => e.Plaatskeuze).HasColumnName("plaatskeuze");

                entity.Property(e => e.RefAanspreekpunt)
                    .IsRequired()
                    .HasColumnName("ref_aanspreekpunt")
                    .HasMaxLength(109);

                entity.Property(e => e.RefConfiguratie)
                    .IsRequired()
                    .HasColumnName("ref_configuratie")
                    .HasMaxLength(30);

                entity.Property(e => e.RefFinbudgethouder)
                    .IsRequired()
                    .HasColumnName("ref_finbudgethouder")
                    .HasMaxLength(100);

                entity.Property(e => e.RefKleur).HasColumnName("ref_kleur");

                entity.Property(e => e.RefLeverancier)
                    .IsRequired()
                    .HasColumnName("ref_leverancier")
                    .HasMaxLength(60);

                entity.Property(e => e.RefLokatie)
                    .IsRequired()
                    .HasColumnName("ref_lokatie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefMerk)
                    .IsRequired()
                    .HasColumnName("ref_merk")
                    .HasMaxLength(100);

                entity.Property(e => e.RefOrdernumber)
                    .HasColumnName("ref_ordernumber")
                    .HasMaxLength(30);

                entity.Property(e => e.RefPersoon)
                    .IsRequired()
                    .HasColumnName("ref_persoon")
                    .HasMaxLength(109);

                entity.Property(e => e.RefPersoongroep)
                    .IsRequired()
                    .HasColumnName("ref_persoongroep")
                    .HasMaxLength(50);

                entity.Property(e => e.RefPlaats1)
                    .IsRequired()
                    .HasColumnName("ref_plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.RefSoort)
                    .IsRequired()
                    .HasColumnName("ref_soort")
                    .HasMaxLength(100);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.ReservableOfficehoursSsd).HasColumnName("reservable_officehours_ssd");

                entity.Property(e => e.Reservablewithlocation).HasColumnName("reservablewithlocation");

                entity.Property(e => e.Reserveerbaaractiveerbaar).HasColumnName("reserveerbaaractiveerbaar");

                entity.Property(e => e.Reserveerbaarkantooruren).HasColumnName("reserveerbaarkantooruren");

                entity.Property(e => e.Reserveerbaarsecure).HasColumnName("reserveerbaarsecure");

                entity.Property(e => e.Reserveerbaarsshd).HasColumnName("reserveerbaarsshd");

                entity.Property(e => e.Reservzichtbaarsshd).HasColumnName("reservzichtbaarsshd");

                entity.Property(e => e.Restwaarde)
                    .HasColumnName("restwaarde")
                    .HasColumnType("money");

                entity.Property(e => e.RmSpecification)
                    .IsRequired()
                    .HasColumnName("rm_specification")
                    .HasMaxLength(100);

                entity.Property(e => e.Serienummer)
                    .IsRequired()
                    .HasColumnName("serienummer")
                    .HasMaxLength(100);

                entity.Property(e => e.ServicewindowOption).HasColumnName("servicewindow_option");

                entity.Property(e => e.Servicewindowid).HasColumnName("servicewindowid");

                entity.Property(e => e.Sjabloonobjectid).HasColumnName("sjabloonobjectid");

                entity.Property(e => e.Soortid).HasColumnName("soortid");

                entity.Property(e => e.Specificatie)
                    .IsRequired()
                    .HasColumnName("specificatie")
                    .HasMaxLength(60);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Stdresvbehandelaarid).HasColumnName("stdresvbehandelaarid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veiligvoorraad).HasColumnName("veiligvoorraad");

                entity.Property(e => e.Verhuurborg)
                    .HasColumnName("verhuurborg")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijs)
                    .HasColumnName("verhuurprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijssysteem).HasColumnName("verhuurprijssysteem");

                entity.Property(e => e.Verhuurtekst)
                    .HasColumnName("verhuurtekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.Verkoopprijs)
                    .HasColumnName("verkoopprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verzekerdatum)
                    .HasColumnName("verzekerdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Vnc).HasColumnName("vnc");

                entity.Property(e => e.Vnchostnaam)
                    .HasColumnName("vnchostnaam")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Wburl)
                    .IsRequired()
                    .HasColumnName("wburl")
                    .HasMaxLength(1024);

                entity.Property(e => e.Webbrowser).HasColumnName("webbrowser");

                entity.HasOne(d => d.Aanspreekpunt)
                    .WithMany(p => p.Vrij3objectAanspreekpunt)
                    .HasForeignKey(d => d.Aanspreekpuntid)
                    .HasConstraintName("fk_actiedoor_aanspreekpuntid_vrij3object");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_vrij3object");

                entity.HasOne(d => d.Artikelbestellink)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Artikelbestellinkid)
                    .HasConstraintName("fk_artikel_bestel_link_artikelbestellinkid_vrij3object");

                entity.HasOne(d => d.Artikelstatus)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Artikelstatusid)
                    .HasConstraintName("fk_artikelstatus_artikelstatusid_vrij3object");

                entity.HasOne(d => d.Attentie)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Attentieid)
                    .HasConstraintName("fk_attentie_attentieid_vrij3object");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij3objectAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_vrij3object");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij3objectAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_vrij3object");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij3objectAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_vrij3object");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij3objectAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_vrij3object");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij3objectAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_vrij3object");

                entity.HasOne(d => d.Bestelaanvraag)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Bestelaanvraagid)
                    .HasConstraintName("fk_bestelaanvraag_bestelaanvraagid_vrij3object");

                entity.HasOne(d => d.Bestelling)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Bestellingid)
                    .HasConstraintName("fk_bestellingen_bestellingid_vrij3object");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_vrij3object");

                entity.HasOne(d => d.Configuratie)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Configuratieid)
                    .HasConstraintName("fk_configuratie_configuratieid_vrij3object");

                entity.HasOne(d => d.Installatiedoor)
                    .WithMany(p => p.Vrij3objectInstallatiedoor)
                    .HasForeignKey(d => d.Installatiedoorid)
                    .HasConstraintName("fk_actiedoor_installatiedoorid_vrij3object");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.Vrij3objectLeverancier)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_vrij3object");

                entity.HasOne(d => d.Lokatie)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Lokatieid)
                    .HasConstraintName("fk_locatie_lokatieid_vrij3object");

                entity.HasOne(d => d.Merk)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Merkid)
                    .HasConstraintName("fk_objectmerk_merkid_vrij3object");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_vrij3object");

                entity.HasOne(d => d.ObjecttypeNavigation)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Objecttypeid)
                    .HasConstraintName("fk_objecttype_objecttypeid_vrij3object");

                entity.HasOne(d => d.OnderhoudDoor)
                    .WithMany(p => p.Vrij3objectOnderhoudDoor)
                    .HasForeignKey(d => d.OnderhoudDoorid)
                    .HasConstraintName("fk_leverancier_onderhoud_doorid_vrij3object");

                entity.HasOne(d => d.Onderhoudslacontract)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Onderhoudslacontractid)
                    .HasConstraintName("fk_dnocontract_onderhoudslacontractid_vrij3object");

                entity.HasOne(d => d.Onderhoudsoort)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Onderhoudsoortid)
                    .HasConstraintName("fk_slacontractsoort_onderhoudsoortid_vrij3object");

                entity.HasOne(d => d.Onderhoudsplan)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Onderhoudsplanid)
                    .HasConstraintName("fk_onderhoudsplan_onderhoudsplanid_vrij3object");

                entity.HasOne(d => d.Persoongroep)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Persoongroepid)
                    .HasConstraintName("fk_persoongroep_persoongroepid_vrij3object");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vrij3object");

                entity.HasOne(d => d.Servicewindow)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Servicewindowid)
                    .HasConstraintName("fk_servicewindow_servicewindowid_vrij3object");

                entity.HasOne(d => d.Sjabloonobject)
                    .WithMany(p => p.InverseSjabloonobject)
                    .HasForeignKey(d => d.Sjabloonobjectid)
                    .HasConstraintName("fk_vrij3object_sjabloonobjectid_vrij3object");

                entity.HasOne(d => d.Soort)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Soortid)
                    .HasConstraintName("fk_objectsoort_soortid_vrij3object");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_objectstatus_statusid_vrij3object");

                entity.HasOne(d => d.Stdresvbehandelaar)
                    .WithMany(p => p.Vrij3objectStdresvbehandelaar)
                    .HasForeignKey(d => d.Stdresvbehandelaarid)
                    .HasConstraintName("fk_actiedoor_stdresvbehandelaarid_vrij3object");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij3objectUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij3object");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij3objectUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij3object");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.Vrij3object)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_vrij3object");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij3objectVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_vrij3object");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij3objectVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_vrij3object");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij3objectVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_vrij3object");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij3objectVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_vrij3object");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij3objectVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_vrij3object");
            });

            modelBuilder.Entity<Vrij3objectDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij3object__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vrij3object__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vrij3object__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij3object__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij3object__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.Vrij3objectDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vrij3object_kaartid_vrij3object__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Vrij3objectDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vrij3object__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij3objectDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij3object__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij3objectDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij3object__documenten");
            });

            modelBuilder.Entity<Vrij3objectEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij3object__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_vrij3object__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vrij3object__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.Vrij3objectEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_vrij3object__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.Vrij3objectEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vrij3object_kaartid_vrij3object__emailberichten");
            });

            modelBuilder.Entity<Vrij3objectLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij3object__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vrij3object__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vrij3object__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij3object__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij3object__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.Vrij3objectLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vrij3object_kaartid_vrij3object__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Vrij3objectLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vrij3object__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij3objectLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij3object__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij3objectLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij3object__logboek");
            });

            modelBuilder.Entity<Vrij3objectOptionalgrid>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij3object__optionalgrid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_vrij3object__optionalgrid_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_vrij3object__optionalgrid_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_vrij3object__optionalgrid_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_vrij3object__optionalgrid_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_vrij3object__optionalgrid_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_vrij3object__optionalgrid_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_vrij3object__optionalgrid_parentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij3object__optionalgrid_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij3object__optionalgrid_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_vrij3object__optionalgrid_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_vrij3object__optionalgrid_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_vrij3object__optionalgrid_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_vrij3object__optionalgrid_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_vrij3object__optionalgrid_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij3objectOptionalgridAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_vrij3object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij3objectOptionalgridAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_vrij3object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij3objectOptionalgridAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_vrij3object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij3objectOptionalgridAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_vrij3object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij3objectOptionalgridAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_vrij3object__optionalgrid");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.Vrij3objectOptionalgrid)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_vrij3object_parentid_vrij3object__optionalgrid");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij3objectOptionalgridUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij3object__optionalgrid");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij3objectOptionalgridUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij3object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij3objectOptionalgridVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_vrij3object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij3objectOptionalgridVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_vrij3object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij3objectOptionalgridVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_vrij3object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij3objectOptionalgridVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_vrij3object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij3objectOptionalgridVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_vrij3object__optionalgrid");
            });

            modelBuilder.Entity<Vrij4object>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij4object");

                entity.HasIndex(e => e.Aanspreekpuntid)
                    .HasName("idx_vrij4object_aanspreekpuntid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_vrij4object_archiefredenid");

                entity.HasIndex(e => e.Artikelbestellinkid)
                    .HasName("idx_vrij4object_artikelbestellinkid");

                entity.HasIndex(e => e.Artikelstatusid)
                    .HasName("idx_vrij4object_artikelstatusid");

                entity.HasIndex(e => e.Attentieid)
                    .HasName("idx_vrij4object_attentieid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_vrij4object_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_vrij4object_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_vrij4object_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_vrij4object_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_vrij4object_attvrijeopzoek5");

                entity.HasIndex(e => e.Bestelaanvraagid)
                    .HasName("idx_vrij4object_bestelaanvraagid");

                entity.HasIndex(e => e.Bestellingid)
                    .HasName("idx_vrij4object_bestellingid");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_vrij4object_budgethouderid");

                entity.HasIndex(e => e.Configuratieid)
                    .HasName("idx_vrij4object_configuratieid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_vrij4object_importid");

                entity.HasIndex(e => e.Installatiedoorid)
                    .HasName("idx_vrij4object_installatiedoorid");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_vrij4object_leverancierid");

                entity.HasIndex(e => e.Lokatieid)
                    .HasName("idx_vrij4object_lokatieid");

                entity.HasIndex(e => e.Merkid)
                    .HasName("idx_vrij4object_merkid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_vrij4object_objectid");

                entity.HasIndex(e => e.Objecttypeid)
                    .HasName("idx_vrij4object_objecttypeid");

                entity.HasIndex(e => e.OnderhoudDoorid)
                    .HasName("idx_vrij4object_onderhoud_doorid");

                entity.HasIndex(e => e.Onderhoudslacontractid)
                    .HasName("idx_vrij4object_onderhoudslacontractid");

                entity.HasIndex(e => e.Onderhoudsoortid)
                    .HasName("idx_vrij4object_onderhoudsoortid");

                entity.HasIndex(e => e.Onderhoudsplanid)
                    .HasName("idx_vrij4object_onderhoudsplanid");

                entity.HasIndex(e => e.Persoongroepid)
                    .HasName("idx_vrij4object_persoongroepid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vrij4object_persoonid");

                entity.HasIndex(e => e.RefKleur)
                    .HasName("idx_vrij4object_ref_kleur");

                entity.HasIndex(e => e.RefOrdernumber)
                    .HasName("idx_vrij4object_ref_ordernumber");

                entity.HasIndex(e => e.Reserveerbaaractiveerbaar)
                    .HasName("idx_vrij4object_reserveerbaaractiveerbaar");

                entity.HasIndex(e => e.Reserveerbaarsecure)
                    .HasName("idx_vrij4object_reserveerbaarsecure");

                entity.HasIndex(e => e.Reserveerbaarsshd)
                    .HasName("idx_vrij4object_reserveerbaarsshd");

                entity.HasIndex(e => e.Reservzichtbaarsshd)
                    .HasName("idx_vrij4object_reservzichtbaarsshd");

                entity.HasIndex(e => e.Servicewindowid)
                    .HasName("idx_vrij4object_servicewindowid");

                entity.HasIndex(e => e.Sjabloonobjectid)
                    .HasName("idx_vrij4object_sjabloonobjectid");

                entity.HasIndex(e => e.Soortid)
                    .HasName("idx_vrij4object_soortid");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_vrij4object_statusid");

                entity.HasIndex(e => e.Stdresvbehandelaarid)
                    .HasName("idx_vrij4object_stdresvbehandelaarid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij4object_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij4object_uidwijzig");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_vrij4object_vestigingid");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_vrij4object_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_vrij4object_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_vrij4object_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_vrij4object_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_vrij4object_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aankoopbedrag)
                    .HasColumnName("aankoopbedrag")
                    .HasColumnType("money");

                entity.Property(e => e.Aanschafdatum)
                    .HasColumnName("aanschafdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Aanspreekpuntid).HasColumnName("aanspreekpuntid");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afschrijftermijn).HasColumnName("afschrijftermijn");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Artikelbestellinkid).HasColumnName("artikelbestellinkid");

                entity.Property(e => e.Artikelstatusid).HasColumnName("artikelstatusid");

                entity.Property(e => e.Artikelwordtobject).HasColumnName("artikelwordtobject");

                entity.Property(e => e.Attentieid).HasColumnName("attentieid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelaanvraagid).HasColumnName("bestelaanvraagid");

                entity.Property(e => e.Bestelbaarinssh).HasColumnName("bestelbaarinssh");

                entity.Property(e => e.Bestellingid).HasColumnName("bestellingid");

                entity.Property(e => e.Blocktime).HasColumnName("blocktime");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Configuratieid).HasColumnName("configuratieid");

                entity.Property(e => e.CostsHightariff)
                    .HasColumnName("costs_hightariff")
                    .HasColumnType("money");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumeersteonderhoud)
                    .HasColumnName("datumeersteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumgeplandonderhoud)
                    .HasColumnName("datumgeplandonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumlaatsteonderhoud)
                    .HasColumnName("datumlaatsteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diversenonderhoud)
                    .HasColumnName("diversenonderhoud")
                    .HasColumnType("ntext");

                entity.Property(e => e.Garantiedatum)
                    .HasColumnName("garantiedatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.Heeftonderhoudsplan).HasColumnName("heeftonderhoudsplan");

                entity.Property(e => e.Heeftvoorraad).HasColumnName("heeftvoorraad");

                entity.Property(e => e.Hostnaam)
                    .IsRequired()
                    .HasColumnName("hostnaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Huidigevoorraad).HasColumnName("huidigevoorraad");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Installatiedoorid).HasColumnName("installatiedoorid");

                entity.Property(e => e.Korteomschrijving)
                    .IsRequired()
                    .HasColumnName("korteomschrijving")
                    .HasMaxLength(40);

                entity.Property(e => e.Leaseaanvangsdatum)
                    .HasColumnName("leaseaanvangsdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leasecontractnummer)
                    .IsRequired()
                    .HasColumnName("leasecontractnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Leaseeinddatum)
                    .HasColumnName("leaseeinddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leaseinfo).HasColumnName("leaseinfo");

                entity.Property(e => e.Leaseperiode).HasColumnName("leaseperiode");

                entity.Property(e => e.Leaseprijs)
                    .HasColumnName("leaseprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Lokatieid).HasColumnName("lokatieid");

                entity.Property(e => e.Merkid).HasColumnName("merkid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(60);

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Objecttype)
                    .IsRequired()
                    .HasColumnName("objecttype")
                    .HasMaxLength(100);

                entity.Property(e => e.Objecttypeid).HasColumnName("objecttypeid");

                entity.Property(e => e.OnderhoudDoorid).HasColumnName("onderhoud_doorid");

                entity.Property(e => e.Onderhoudcontract).HasColumnName("onderhoudcontract");

                entity.Property(e => e.Onderhoudnummer)
                    .IsRequired()
                    .HasColumnName("onderhoudnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Onderhoudprijs)
                    .HasColumnName("onderhoudprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Onderhoudresponsietijd).HasColumnName("onderhoudresponsietijd");

                entity.Property(e => e.Onderhoudslacontractid).HasColumnName("onderhoudslacontractid");

                entity.Property(e => e.Onderhoudslagebruikt).HasColumnName("onderhoudslagebruikt");

                entity.Property(e => e.Onderhoudsoortid).HasColumnName("onderhoudsoortid");

                entity.Property(e => e.Onderhoudsplanid).HasColumnName("onderhoudsplanid");

                entity.Property(e => e.Onderhoudtot)
                    .HasColumnName("onderhoudtot")
                    .HasColumnType("datetime");

                entity.Property(e => e.Onderhoudvanaf)
                    .HasColumnName("onderhoudvanaf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Opmerking)
                    .IsRequired()
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.Ordernummer)
                    .IsRequired()
                    .HasColumnName("ordernummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Persoongroepid).HasColumnName("persoongroepid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Plaats).HasColumnName("plaats");

                entity.Property(e => e.Plaatskeuze).HasColumnName("plaatskeuze");

                entity.Property(e => e.RefAanspreekpunt)
                    .IsRequired()
                    .HasColumnName("ref_aanspreekpunt")
                    .HasMaxLength(109);

                entity.Property(e => e.RefConfiguratie)
                    .IsRequired()
                    .HasColumnName("ref_configuratie")
                    .HasMaxLength(30);

                entity.Property(e => e.RefFinbudgethouder)
                    .IsRequired()
                    .HasColumnName("ref_finbudgethouder")
                    .HasMaxLength(100);

                entity.Property(e => e.RefKleur).HasColumnName("ref_kleur");

                entity.Property(e => e.RefLeverancier)
                    .IsRequired()
                    .HasColumnName("ref_leverancier")
                    .HasMaxLength(60);

                entity.Property(e => e.RefLokatie)
                    .IsRequired()
                    .HasColumnName("ref_lokatie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefMerk)
                    .IsRequired()
                    .HasColumnName("ref_merk")
                    .HasMaxLength(100);

                entity.Property(e => e.RefOrdernumber)
                    .HasColumnName("ref_ordernumber")
                    .HasMaxLength(30);

                entity.Property(e => e.RefPersoon)
                    .IsRequired()
                    .HasColumnName("ref_persoon")
                    .HasMaxLength(109);

                entity.Property(e => e.RefPersoongroep)
                    .IsRequired()
                    .HasColumnName("ref_persoongroep")
                    .HasMaxLength(50);

                entity.Property(e => e.RefPlaats1)
                    .IsRequired()
                    .HasColumnName("ref_plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.RefSoort)
                    .IsRequired()
                    .HasColumnName("ref_soort")
                    .HasMaxLength(100);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.ReservableOfficehoursSsd).HasColumnName("reservable_officehours_ssd");

                entity.Property(e => e.Reservablewithlocation).HasColumnName("reservablewithlocation");

                entity.Property(e => e.Reserveerbaaractiveerbaar).HasColumnName("reserveerbaaractiveerbaar");

                entity.Property(e => e.Reserveerbaarkantooruren).HasColumnName("reserveerbaarkantooruren");

                entity.Property(e => e.Reserveerbaarsecure).HasColumnName("reserveerbaarsecure");

                entity.Property(e => e.Reserveerbaarsshd).HasColumnName("reserveerbaarsshd");

                entity.Property(e => e.Reservzichtbaarsshd).HasColumnName("reservzichtbaarsshd");

                entity.Property(e => e.Restwaarde)
                    .HasColumnName("restwaarde")
                    .HasColumnType("money");

                entity.Property(e => e.RmSpecification)
                    .IsRequired()
                    .HasColumnName("rm_specification")
                    .HasMaxLength(100);

                entity.Property(e => e.Serienummer)
                    .IsRequired()
                    .HasColumnName("serienummer")
                    .HasMaxLength(100);

                entity.Property(e => e.ServicewindowOption).HasColumnName("servicewindow_option");

                entity.Property(e => e.Servicewindowid).HasColumnName("servicewindowid");

                entity.Property(e => e.Sjabloonobjectid).HasColumnName("sjabloonobjectid");

                entity.Property(e => e.Soortid).HasColumnName("soortid");

                entity.Property(e => e.Specificatie)
                    .IsRequired()
                    .HasColumnName("specificatie")
                    .HasMaxLength(60);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Stdresvbehandelaarid).HasColumnName("stdresvbehandelaarid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veiligvoorraad).HasColumnName("veiligvoorraad");

                entity.Property(e => e.Verhuurborg)
                    .HasColumnName("verhuurborg")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijs)
                    .HasColumnName("verhuurprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijssysteem).HasColumnName("verhuurprijssysteem");

                entity.Property(e => e.Verhuurtekst)
                    .HasColumnName("verhuurtekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.Verkoopprijs)
                    .HasColumnName("verkoopprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verzekerdatum)
                    .HasColumnName("verzekerdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Vnc).HasColumnName("vnc");

                entity.Property(e => e.Vnchostnaam)
                    .HasColumnName("vnchostnaam")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Wburl)
                    .IsRequired()
                    .HasColumnName("wburl")
                    .HasMaxLength(1024);

                entity.Property(e => e.Webbrowser).HasColumnName("webbrowser");

                entity.HasOne(d => d.Aanspreekpunt)
                    .WithMany(p => p.Vrij4objectAanspreekpunt)
                    .HasForeignKey(d => d.Aanspreekpuntid)
                    .HasConstraintName("fk_actiedoor_aanspreekpuntid_vrij4object");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_vrij4object");

                entity.HasOne(d => d.Artikelbestellink)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Artikelbestellinkid)
                    .HasConstraintName("fk_artikel_bestel_link_artikelbestellinkid_vrij4object");

                entity.HasOne(d => d.Artikelstatus)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Artikelstatusid)
                    .HasConstraintName("fk_artikelstatus_artikelstatusid_vrij4object");

                entity.HasOne(d => d.Attentie)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Attentieid)
                    .HasConstraintName("fk_attentie_attentieid_vrij4object");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij4objectAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_vrij4object");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij4objectAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_vrij4object");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij4objectAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_vrij4object");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij4objectAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_vrij4object");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij4objectAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_vrij4object");

                entity.HasOne(d => d.Bestelaanvraag)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Bestelaanvraagid)
                    .HasConstraintName("fk_bestelaanvraag_bestelaanvraagid_vrij4object");

                entity.HasOne(d => d.Bestelling)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Bestellingid)
                    .HasConstraintName("fk_bestellingen_bestellingid_vrij4object");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_vrij4object");

                entity.HasOne(d => d.Configuratie)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Configuratieid)
                    .HasConstraintName("fk_configuratie_configuratieid_vrij4object");

                entity.HasOne(d => d.Installatiedoor)
                    .WithMany(p => p.Vrij4objectInstallatiedoor)
                    .HasForeignKey(d => d.Installatiedoorid)
                    .HasConstraintName("fk_actiedoor_installatiedoorid_vrij4object");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.Vrij4objectLeverancier)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_vrij4object");

                entity.HasOne(d => d.Lokatie)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Lokatieid)
                    .HasConstraintName("fk_locatie_lokatieid_vrij4object");

                entity.HasOne(d => d.Merk)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Merkid)
                    .HasConstraintName("fk_objectmerk_merkid_vrij4object");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_vrij4object");

                entity.HasOne(d => d.ObjecttypeNavigation)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Objecttypeid)
                    .HasConstraintName("fk_objecttype_objecttypeid_vrij4object");

                entity.HasOne(d => d.OnderhoudDoor)
                    .WithMany(p => p.Vrij4objectOnderhoudDoor)
                    .HasForeignKey(d => d.OnderhoudDoorid)
                    .HasConstraintName("fk_leverancier_onderhoud_doorid_vrij4object");

                entity.HasOne(d => d.Onderhoudslacontract)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Onderhoudslacontractid)
                    .HasConstraintName("fk_dnocontract_onderhoudslacontractid_vrij4object");

                entity.HasOne(d => d.Onderhoudsoort)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Onderhoudsoortid)
                    .HasConstraintName("fk_slacontractsoort_onderhoudsoortid_vrij4object");

                entity.HasOne(d => d.Onderhoudsplan)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Onderhoudsplanid)
                    .HasConstraintName("fk_onderhoudsplan_onderhoudsplanid_vrij4object");

                entity.HasOne(d => d.Persoongroep)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Persoongroepid)
                    .HasConstraintName("fk_persoongroep_persoongroepid_vrij4object");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vrij4object");

                entity.HasOne(d => d.Servicewindow)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Servicewindowid)
                    .HasConstraintName("fk_servicewindow_servicewindowid_vrij4object");

                entity.HasOne(d => d.Sjabloonobject)
                    .WithMany(p => p.InverseSjabloonobject)
                    .HasForeignKey(d => d.Sjabloonobjectid)
                    .HasConstraintName("fk_vrij4object_sjabloonobjectid_vrij4object");

                entity.HasOne(d => d.Soort)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Soortid)
                    .HasConstraintName("fk_objectsoort_soortid_vrij4object");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_objectstatus_statusid_vrij4object");

                entity.HasOne(d => d.Stdresvbehandelaar)
                    .WithMany(p => p.Vrij4objectStdresvbehandelaar)
                    .HasForeignKey(d => d.Stdresvbehandelaarid)
                    .HasConstraintName("fk_actiedoor_stdresvbehandelaarid_vrij4object");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij4objectUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij4object");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij4objectUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij4object");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.Vrij4object)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_vrij4object");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij4objectVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_vrij4object");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij4objectVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_vrij4object");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij4objectVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_vrij4object");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij4objectVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_vrij4object");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij4objectVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_vrij4object");
            });

            modelBuilder.Entity<Vrij4objectDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij4object__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vrij4object__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vrij4object__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij4object__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij4object__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.Vrij4objectDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vrij4object_kaartid_vrij4object__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Vrij4objectDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vrij4object__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij4objectDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij4object__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij4objectDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij4object__documenten");
            });

            modelBuilder.Entity<Vrij4objectEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij4object__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_vrij4object__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vrij4object__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.Vrij4objectEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_vrij4object__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.Vrij4objectEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vrij4object_kaartid_vrij4object__emailberichten");
            });

            modelBuilder.Entity<Vrij4objectLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij4object__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vrij4object__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vrij4object__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij4object__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij4object__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.Vrij4objectLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vrij4object_kaartid_vrij4object__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Vrij4objectLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vrij4object__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij4objectLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij4object__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij4objectLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij4object__logboek");
            });

            modelBuilder.Entity<Vrij4objectOptionalgrid>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij4object__optionalgrid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_vrij4object__optionalgrid_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_vrij4object__optionalgrid_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_vrij4object__optionalgrid_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_vrij4object__optionalgrid_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_vrij4object__optionalgrid_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_vrij4object__optionalgrid_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_vrij4object__optionalgrid_parentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij4object__optionalgrid_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij4object__optionalgrid_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_vrij4object__optionalgrid_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_vrij4object__optionalgrid_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_vrij4object__optionalgrid_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_vrij4object__optionalgrid_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_vrij4object__optionalgrid_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij4objectOptionalgridAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_vrij4object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij4objectOptionalgridAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_vrij4object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij4objectOptionalgridAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_vrij4object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij4objectOptionalgridAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_vrij4object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij4objectOptionalgridAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_vrij4object__optionalgrid");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.Vrij4objectOptionalgrid)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_vrij4object_parentid_vrij4object__optionalgrid");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij4objectOptionalgridUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij4object__optionalgrid");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij4objectOptionalgridUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij4object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij4objectOptionalgridVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_vrij4object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij4objectOptionalgridVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_vrij4object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij4objectOptionalgridVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_vrij4object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij4objectOptionalgridVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_vrij4object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij4objectOptionalgridVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_vrij4object__optionalgrid");
            });

            modelBuilder.Entity<Vrij5object>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij5object");

                entity.HasIndex(e => e.Aanspreekpuntid)
                    .HasName("idx_vrij5object_aanspreekpuntid");

                entity.HasIndex(e => e.Archiefredenid)
                    .HasName("idx_vrij5object_archiefredenid");

                entity.HasIndex(e => e.Artikelbestellinkid)
                    .HasName("idx_vrij5object_artikelbestellinkid");

                entity.HasIndex(e => e.Artikelstatusid)
                    .HasName("idx_vrij5object_artikelstatusid");

                entity.HasIndex(e => e.Attentieid)
                    .HasName("idx_vrij5object_attentieid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_vrij5object_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_vrij5object_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_vrij5object_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_vrij5object_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_vrij5object_attvrijeopzoek5");

                entity.HasIndex(e => e.Bestelaanvraagid)
                    .HasName("idx_vrij5object_bestelaanvraagid");

                entity.HasIndex(e => e.Bestellingid)
                    .HasName("idx_vrij5object_bestellingid");

                entity.HasIndex(e => e.Budgethouderid)
                    .HasName("idx_vrij5object_budgethouderid");

                entity.HasIndex(e => e.Configuratieid)
                    .HasName("idx_vrij5object_configuratieid");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_vrij5object_importid");

                entity.HasIndex(e => e.Installatiedoorid)
                    .HasName("idx_vrij5object_installatiedoorid");

                entity.HasIndex(e => e.Leverancierid)
                    .HasName("idx_vrij5object_leverancierid");

                entity.HasIndex(e => e.Lokatieid)
                    .HasName("idx_vrij5object_lokatieid");

                entity.HasIndex(e => e.Merkid)
                    .HasName("idx_vrij5object_merkid");

                entity.HasIndex(e => e.Objectid)
                    .HasName("idx_vrij5object_objectid");

                entity.HasIndex(e => e.Objecttypeid)
                    .HasName("idx_vrij5object_objecttypeid");

                entity.HasIndex(e => e.OnderhoudDoorid)
                    .HasName("idx_vrij5object_onderhoud_doorid");

                entity.HasIndex(e => e.Onderhoudslacontractid)
                    .HasName("idx_vrij5object_onderhoudslacontractid");

                entity.HasIndex(e => e.Onderhoudsoortid)
                    .HasName("idx_vrij5object_onderhoudsoortid");

                entity.HasIndex(e => e.Onderhoudsplanid)
                    .HasName("idx_vrij5object_onderhoudsplanid");

                entity.HasIndex(e => e.Persoongroepid)
                    .HasName("idx_vrij5object_persoongroepid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vrij5object_persoonid");

                entity.HasIndex(e => e.RefKleur)
                    .HasName("idx_vrij5object_ref_kleur");

                entity.HasIndex(e => e.RefOrdernumber)
                    .HasName("idx_vrij5object_ref_ordernumber");

                entity.HasIndex(e => e.Reserveerbaaractiveerbaar)
                    .HasName("idx_vrij5object_reserveerbaaractiveerbaar");

                entity.HasIndex(e => e.Reserveerbaarsecure)
                    .HasName("idx_vrij5object_reserveerbaarsecure");

                entity.HasIndex(e => e.Reserveerbaarsshd)
                    .HasName("idx_vrij5object_reserveerbaarsshd");

                entity.HasIndex(e => e.Reservzichtbaarsshd)
                    .HasName("idx_vrij5object_reservzichtbaarsshd");

                entity.HasIndex(e => e.Servicewindowid)
                    .HasName("idx_vrij5object_servicewindowid");

                entity.HasIndex(e => e.Sjabloonobjectid)
                    .HasName("idx_vrij5object_sjabloonobjectid");

                entity.HasIndex(e => e.Soortid)
                    .HasName("idx_vrij5object_soortid");

                entity.HasIndex(e => e.Statusid)
                    .HasName("idx_vrij5object_statusid");

                entity.HasIndex(e => e.Stdresvbehandelaarid)
                    .HasName("idx_vrij5object_stdresvbehandelaarid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij5object_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij5object_uidwijzig");

                entity.HasIndex(e => e.Vestigingid)
                    .HasName("idx_vrij5object_vestigingid");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_vrij5object_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_vrij5object_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_vrij5object_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_vrij5object_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_vrij5object_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aankoopbedrag)
                    .HasColumnName("aankoopbedrag")
                    .HasColumnType("money");

                entity.Property(e => e.Aanschafdatum)
                    .HasColumnName("aanschafdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Aanspreekpuntid).HasColumnName("aanspreekpuntid");

                entity.Property(e => e.Aantekeningen)
                    .HasColumnName("aantekeningen")
                    .HasColumnType("ntext");

                entity.Property(e => e.Afschrijftermijn).HasColumnName("afschrijftermijn");

                entity.Property(e => e.Archiefredenid).HasColumnName("archiefredenid");

                entity.Property(e => e.Artikelbestellinkid).HasColumnName("artikelbestellinkid");

                entity.Property(e => e.Artikelstatusid).HasColumnName("artikelstatusid");

                entity.Property(e => e.Artikelwordtobject).HasColumnName("artikelwordtobject");

                entity.Property(e => e.Attentieid).HasColumnName("attentieid");

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Bestelaanvraagid).HasColumnName("bestelaanvraagid");

                entity.Property(e => e.Bestelbaarinssh).HasColumnName("bestelbaarinssh");

                entity.Property(e => e.Bestellingid).HasColumnName("bestellingid");

                entity.Property(e => e.Blocktime).HasColumnName("blocktime");

                entity.Property(e => e.Budgethouderid).HasColumnName("budgethouderid");

                entity.Property(e => e.Configuratieid).HasColumnName("configuratieid");

                entity.Property(e => e.CostsHightariff)
                    .HasColumnName("costs_hightariff")
                    .HasColumnType("money");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumeersteonderhoud)
                    .HasColumnName("datumeersteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumgeplandonderhoud)
                    .HasColumnName("datumgeplandonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datumlaatsteonderhoud)
                    .HasColumnName("datumlaatsteonderhoud")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diversenonderhoud)
                    .HasColumnName("diversenonderhoud")
                    .HasColumnType("ntext");

                entity.Property(e => e.Garantiedatum)
                    .HasColumnName("garantiedatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Heeftattentie).HasColumnName("heeftattentie");

                entity.Property(e => e.Heeftonderhoudsplan).HasColumnName("heeftonderhoudsplan");

                entity.Property(e => e.Heeftvoorraad).HasColumnName("heeftvoorraad");

                entity.Property(e => e.Hostnaam)
                    .IsRequired()
                    .HasColumnName("hostnaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Huidigevoorraad).HasColumnName("huidigevoorraad");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Installatiedoorid).HasColumnName("installatiedoorid");

                entity.Property(e => e.Korteomschrijving)
                    .IsRequired()
                    .HasColumnName("korteomschrijving")
                    .HasMaxLength(40);

                entity.Property(e => e.Leaseaanvangsdatum)
                    .HasColumnName("leaseaanvangsdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leasecontractnummer)
                    .IsRequired()
                    .HasColumnName("leasecontractnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Leaseeinddatum)
                    .HasColumnName("leaseeinddatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leaseinfo).HasColumnName("leaseinfo");

                entity.Property(e => e.Leaseperiode).HasColumnName("leaseperiode");

                entity.Property(e => e.Leaseprijs)
                    .HasColumnName("leaseprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Leverancierid).HasColumnName("leverancierid");

                entity.Property(e => e.Lokatieid).HasColumnName("lokatieid");

                entity.Property(e => e.Merkid).HasColumnName("merkid");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(60);

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Objecttype)
                    .IsRequired()
                    .HasColumnName("objecttype")
                    .HasMaxLength(100);

                entity.Property(e => e.Objecttypeid).HasColumnName("objecttypeid");

                entity.Property(e => e.OnderhoudDoorid).HasColumnName("onderhoud_doorid");

                entity.Property(e => e.Onderhoudcontract).HasColumnName("onderhoudcontract");

                entity.Property(e => e.Onderhoudnummer)
                    .IsRequired()
                    .HasColumnName("onderhoudnummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Onderhoudprijs)
                    .HasColumnName("onderhoudprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Onderhoudresponsietijd).HasColumnName("onderhoudresponsietijd");

                entity.Property(e => e.Onderhoudslacontractid).HasColumnName("onderhoudslacontractid");

                entity.Property(e => e.Onderhoudslagebruikt).HasColumnName("onderhoudslagebruikt");

                entity.Property(e => e.Onderhoudsoortid).HasColumnName("onderhoudsoortid");

                entity.Property(e => e.Onderhoudsplanid).HasColumnName("onderhoudsplanid");

                entity.Property(e => e.Onderhoudtot)
                    .HasColumnName("onderhoudtot")
                    .HasColumnType("datetime");

                entity.Property(e => e.Onderhoudvanaf)
                    .HasColumnName("onderhoudvanaf")
                    .HasColumnType("datetime");

                entity.Property(e => e.Opmerking)
                    .IsRequired()
                    .HasColumnName("opmerking")
                    .HasMaxLength(127);

                entity.Property(e => e.Ordernummer)
                    .IsRequired()
                    .HasColumnName("ordernummer")
                    .HasMaxLength(30);

                entity.Property(e => e.Persoongroepid).HasColumnName("persoongroepid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Plaats).HasColumnName("plaats");

                entity.Property(e => e.Plaatskeuze).HasColumnName("plaatskeuze");

                entity.Property(e => e.RefAanspreekpunt)
                    .IsRequired()
                    .HasColumnName("ref_aanspreekpunt")
                    .HasMaxLength(109);

                entity.Property(e => e.RefConfiguratie)
                    .IsRequired()
                    .HasColumnName("ref_configuratie")
                    .HasMaxLength(30);

                entity.Property(e => e.RefFinbudgethouder)
                    .IsRequired()
                    .HasColumnName("ref_finbudgethouder")
                    .HasMaxLength(100);

                entity.Property(e => e.RefKleur).HasColumnName("ref_kleur");

                entity.Property(e => e.RefLeverancier)
                    .IsRequired()
                    .HasColumnName("ref_leverancier")
                    .HasMaxLength(60);

                entity.Property(e => e.RefLokatie)
                    .IsRequired()
                    .HasColumnName("ref_lokatie")
                    .HasMaxLength(100);

                entity.Property(e => e.RefMerk)
                    .IsRequired()
                    .HasColumnName("ref_merk")
                    .HasMaxLength(100);

                entity.Property(e => e.RefOrdernumber)
                    .HasColumnName("ref_ordernumber")
                    .HasMaxLength(30);

                entity.Property(e => e.RefPersoon)
                    .IsRequired()
                    .HasColumnName("ref_persoon")
                    .HasMaxLength(109);

                entity.Property(e => e.RefPersoongroep)
                    .IsRequired()
                    .HasColumnName("ref_persoongroep")
                    .HasMaxLength(50);

                entity.Property(e => e.RefPlaats1)
                    .IsRequired()
                    .HasColumnName("ref_plaats1")
                    .HasMaxLength(30);

                entity.Property(e => e.RefSoort)
                    .IsRequired()
                    .HasColumnName("ref_soort")
                    .HasMaxLength(100);

                entity.Property(e => e.RefVestiging)
                    .IsRequired()
                    .HasColumnName("ref_vestiging")
                    .HasMaxLength(60);

                entity.Property(e => e.ReservableOfficehoursSsd).HasColumnName("reservable_officehours_ssd");

                entity.Property(e => e.Reservablewithlocation).HasColumnName("reservablewithlocation");

                entity.Property(e => e.Reserveerbaaractiveerbaar).HasColumnName("reserveerbaaractiveerbaar");

                entity.Property(e => e.Reserveerbaarkantooruren).HasColumnName("reserveerbaarkantooruren");

                entity.Property(e => e.Reserveerbaarsecure).HasColumnName("reserveerbaarsecure");

                entity.Property(e => e.Reserveerbaarsshd).HasColumnName("reserveerbaarsshd");

                entity.Property(e => e.Reservzichtbaarsshd).HasColumnName("reservzichtbaarsshd");

                entity.Property(e => e.Restwaarde)
                    .HasColumnName("restwaarde")
                    .HasColumnType("money");

                entity.Property(e => e.RmSpecification)
                    .IsRequired()
                    .HasColumnName("rm_specification")
                    .HasMaxLength(100);

                entity.Property(e => e.Serienummer)
                    .IsRequired()
                    .HasColumnName("serienummer")
                    .HasMaxLength(100);

                entity.Property(e => e.ServicewindowOption).HasColumnName("servicewindow_option");

                entity.Property(e => e.Servicewindowid).HasColumnName("servicewindowid");

                entity.Property(e => e.Sjabloonobjectid).HasColumnName("sjabloonobjectid");

                entity.Property(e => e.Soortid).HasColumnName("soortid");

                entity.Property(e => e.Specificatie)
                    .IsRequired()
                    .HasColumnName("specificatie")
                    .HasMaxLength(60);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Statusid).HasColumnName("statusid");

                entity.Property(e => e.Stdresvbehandelaarid).HasColumnName("stdresvbehandelaarid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Veiligvoorraad).HasColumnName("veiligvoorraad");

                entity.Property(e => e.Verhuurborg)
                    .HasColumnName("verhuurborg")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijs)
                    .HasColumnName("verhuurprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verhuurprijssysteem).HasColumnName("verhuurprijssysteem");

                entity.Property(e => e.Verhuurtekst)
                    .HasColumnName("verhuurtekst")
                    .HasColumnType("ntext");

                entity.Property(e => e.Verkoopprijs)
                    .HasColumnName("verkoopprijs")
                    .HasColumnType("money");

                entity.Property(e => e.Verzekerdatum)
                    .HasColumnName("verzekerdatum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vestigingid).HasColumnName("vestigingid");

                entity.Property(e => e.Vnc).HasColumnName("vnc");

                entity.Property(e => e.Vnchostnaam)
                    .HasColumnName("vnchostnaam")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Wburl)
                    .IsRequired()
                    .HasColumnName("wburl")
                    .HasMaxLength(1024);

                entity.Property(e => e.Webbrowser).HasColumnName("webbrowser");

                entity.HasOne(d => d.Aanspreekpunt)
                    .WithMany(p => p.Vrij5objectAanspreekpunt)
                    .HasForeignKey(d => d.Aanspreekpuntid)
                    .HasConstraintName("fk_actiedoor_aanspreekpuntid_vrij5object");

                entity.HasOne(d => d.Archiefreden)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Archiefredenid)
                    .HasConstraintName("fk_archiefreden_archiefredenid_vrij5object");

                entity.HasOne(d => d.Artikelbestellink)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Artikelbestellinkid)
                    .HasConstraintName("fk_artikel_bestel_link_artikelbestellinkid_vrij5object");

                entity.HasOne(d => d.Artikelstatus)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Artikelstatusid)
                    .HasConstraintName("fk_artikelstatus_artikelstatusid_vrij5object");

                entity.HasOne(d => d.Attentie)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Attentieid)
                    .HasConstraintName("fk_attentie_attentieid_vrij5object");

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij5objectAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_vrij5object");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij5objectAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_vrij5object");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij5objectAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_vrij5object");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij5objectAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_vrij5object");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij5objectAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_vrij5object");

                entity.HasOne(d => d.Bestelaanvraag)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Bestelaanvraagid)
                    .HasConstraintName("fk_bestelaanvraag_bestelaanvraagid_vrij5object");

                entity.HasOne(d => d.Bestelling)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Bestellingid)
                    .HasConstraintName("fk_bestellingen_bestellingid_vrij5object");

                entity.HasOne(d => d.Budgethouder)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Budgethouderid)
                    .HasConstraintName("fk_budgethouder_budgethouderid_vrij5object");

                entity.HasOne(d => d.Configuratie)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Configuratieid)
                    .HasConstraintName("fk_configuratie_configuratieid_vrij5object");

                entity.HasOne(d => d.Installatiedoor)
                    .WithMany(p => p.Vrij5objectInstallatiedoor)
                    .HasForeignKey(d => d.Installatiedoorid)
                    .HasConstraintName("fk_actiedoor_installatiedoorid_vrij5object");

                entity.HasOne(d => d.Leverancier)
                    .WithMany(p => p.Vrij5objectLeverancier)
                    .HasForeignKey(d => d.Leverancierid)
                    .HasConstraintName("fk_leverancier_leverancierid_vrij5object");

                entity.HasOne(d => d.Lokatie)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Lokatieid)
                    .HasConstraintName("fk_locatie_lokatieid_vrij5object");

                entity.HasOne(d => d.Merk)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Merkid)
                    .HasConstraintName("fk_objectmerk_merkid_vrij5object");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Objectid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_object_objectid_vrij5object");

                entity.HasOne(d => d.ObjecttypeNavigation)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Objecttypeid)
                    .HasConstraintName("fk_objecttype_objecttypeid_vrij5object");

                entity.HasOne(d => d.OnderhoudDoor)
                    .WithMany(p => p.Vrij5objectOnderhoudDoor)
                    .HasForeignKey(d => d.OnderhoudDoorid)
                    .HasConstraintName("fk_leverancier_onderhoud_doorid_vrij5object");

                entity.HasOne(d => d.Onderhoudslacontract)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Onderhoudslacontractid)
                    .HasConstraintName("fk_dnocontract_onderhoudslacontractid_vrij5object");

                entity.HasOne(d => d.Onderhoudsoort)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Onderhoudsoortid)
                    .HasConstraintName("fk_slacontractsoort_onderhoudsoortid_vrij5object");

                entity.HasOne(d => d.Onderhoudsplan)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Onderhoudsplanid)
                    .HasConstraintName("fk_onderhoudsplan_onderhoudsplanid_vrij5object");

                entity.HasOne(d => d.Persoongroep)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Persoongroepid)
                    .HasConstraintName("fk_persoongroep_persoongroepid_vrij5object");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vrij5object");

                entity.HasOne(d => d.Servicewindow)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Servicewindowid)
                    .HasConstraintName("fk_servicewindow_servicewindowid_vrij5object");

                entity.HasOne(d => d.Sjabloonobject)
                    .WithMany(p => p.InverseSjabloonobject)
                    .HasForeignKey(d => d.Sjabloonobjectid)
                    .HasConstraintName("fk_vrij5object_sjabloonobjectid_vrij5object");

                entity.HasOne(d => d.Soort)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Soortid)
                    .HasConstraintName("fk_objectsoort_soortid_vrij5object");

                entity.HasOne(d => d.StatusNavigation)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Statusid)
                    .HasConstraintName("fk_objectstatus_statusid_vrij5object");

                entity.HasOne(d => d.Stdresvbehandelaar)
                    .WithMany(p => p.Vrij5objectStdresvbehandelaar)
                    .HasForeignKey(d => d.Stdresvbehandelaarid)
                    .HasConstraintName("fk_actiedoor_stdresvbehandelaarid_vrij5object");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij5objectUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij5object");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij5objectUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij5object");

                entity.HasOne(d => d.Vestiging)
                    .WithMany(p => p.Vrij5object)
                    .HasForeignKey(d => d.Vestigingid)
                    .HasConstraintName("fk_vestiging_vestigingid_vrij5object");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij5objectVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_vrij5object");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij5objectVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_vrij5object");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij5objectVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_vrij5object");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij5objectVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_vrij5object");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij5objectVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_vrij5object");
            });

            modelBuilder.Entity<Vrij5objectDocumenten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij5object__documenten");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vrij5object__documenten_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vrij5object__documenten_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij5object__documenten_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij5object__documenten_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Accessibility).HasColumnName("accessibility");

                entity.Property(e => e.Bytes).HasColumnName("bytes");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasMaxLength(1024);

                entity.Property(e => e.Inline).HasColumnName("inline");

                entity.Property(e => e.Invisibleforcaller).HasColumnName("invisibleforcaller");

                entity.Property(e => e.Isuploaded).HasColumnName("isuploaded");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Omschrijving)
                    .HasColumnName("omschrijving")
                    .HasColumnType("ntext");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.Vrij5objectDocumenten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vrij5object_kaartid_vrij5object__documenten");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Vrij5objectDocumenten)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vrij5object__documenten");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij5objectDocumentenUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij5object__documenten");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij5objectDocumentenUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij5object__documenten");
            });

            modelBuilder.Entity<Vrij5objectEmailberichten>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij5object__emailberichten");

                entity.HasIndex(e => e.Emailid)
                    .HasName("idx_vrij5object__emailberichten_emailid");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vrij5object__emailberichten_kaartid");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Emailid).HasColumnName("emailid");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.HasOne(d => d.Email)
                    .WithMany(p => p.Vrij5objectEmailberichten)
                    .HasForeignKey(d => d.Emailid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_emailbericht_emailid_vrij5object__emailberichten");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.Vrij5objectEmailberichten)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vrij5object_kaartid_vrij5object__emailberichten");
            });

            modelBuilder.Entity<Vrij5objectLogboek>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij5object__logboek");

                entity.HasIndex(e => e.Kaartid)
                    .HasName("idx_vrij5object__logboek_kaartid");

                entity.HasIndex(e => e.Persoonid)
                    .HasName("idx_vrij5object__logboek_persoonid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij5object__logboek_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij5object__logboek_uidwijzig");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Actienaam)
                    .IsRequired()
                    .HasColumnName("actienaam")
                    .HasMaxLength(50);

                entity.Property(e => e.Bericht)
                    .HasColumnName("bericht")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kaartid).HasColumnName("kaartid");

                entity.Property(e => e.Persoonid).HasColumnName("persoonid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.HasOne(d => d.Kaart)
                    .WithMany(p => p.Vrij5objectLogboek)
                    .HasForeignKey(d => d.Kaartid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_vrij5object_kaartid_vrij5object__logboek");

                entity.HasOne(d => d.Persoon)
                    .WithMany(p => p.Vrij5objectLogboek)
                    .HasForeignKey(d => d.Persoonid)
                    .HasConstraintName("fk_persoon_persoonid_vrij5object__logboek");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij5objectLogboekUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij5object__logboek");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij5objectLogboekUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij5object__logboek");
            });

            modelBuilder.Entity<Vrij5objectOptionalgrid>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrij5object__optionalgrid");

                entity.HasIndex(e => e.Attvrijeopzoek1)
                    .HasName("idx_vrij5object__optionalgrid_attvrijeopzoek1");

                entity.HasIndex(e => e.Attvrijeopzoek2)
                    .HasName("idx_vrij5object__optionalgrid_attvrijeopzoek2");

                entity.HasIndex(e => e.Attvrijeopzoek3)
                    .HasName("idx_vrij5object__optionalgrid_attvrijeopzoek3");

                entity.HasIndex(e => e.Attvrijeopzoek4)
                    .HasName("idx_vrij5object__optionalgrid_attvrijeopzoek4");

                entity.HasIndex(e => e.Attvrijeopzoek5)
                    .HasName("idx_vrij5object__optionalgrid_attvrijeopzoek5");

                entity.HasIndex(e => e.Importid)
                    .HasName("idx_vrij5object__optionalgrid_importid");

                entity.HasIndex(e => e.Parentid)
                    .HasName("idx_vrij5object__optionalgrid_parentid");

                entity.HasIndex(e => e.Uidaanmk)
                    .HasName("idx_vrij5object__optionalgrid_uidaanmk");

                entity.HasIndex(e => e.Uidwijzig)
                    .HasName("idx_vrij5object__optionalgrid_uidwijzig");

                entity.HasIndex(e => e.Vrijeopzoek1)
                    .HasName("idx_vrij5object__optionalgrid_vrijeopzoek1");

                entity.HasIndex(e => e.Vrijeopzoek2)
                    .HasName("idx_vrij5object__optionalgrid_vrijeopzoek2");

                entity.HasIndex(e => e.Vrijeopzoek3)
                    .HasName("idx_vrij5object__optionalgrid_vrijeopzoek3");

                entity.HasIndex(e => e.Vrijeopzoek4)
                    .HasName("idx_vrij5object__optionalgrid_vrijeopzoek4");

                entity.HasIndex(e => e.Vrijeopzoek5)
                    .HasName("idx_vrij5object__optionalgrid_vrijeopzoek5");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Attvrijedatum1)
                    .HasColumnName("attvrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum2)
                    .HasColumnName("attvrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum3)
                    .HasColumnName("attvrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum4)
                    .HasColumnName("attvrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijedatum5)
                    .HasColumnName("attvrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Attvrijegetal1).HasColumnName("attvrijegetal1");

                entity.Property(e => e.Attvrijegetal2).HasColumnName("attvrijegetal2");

                entity.Property(e => e.Attvrijegetal3).HasColumnName("attvrijegetal3");

                entity.Property(e => e.Attvrijegetal4).HasColumnName("attvrijegetal4");

                entity.Property(e => e.Attvrijegetal5).HasColumnName("attvrijegetal5");

                entity.Property(e => e.Attvrijelogisch1).HasColumnName("attvrijelogisch1");

                entity.Property(e => e.Attvrijelogisch2).HasColumnName("attvrijelogisch2");

                entity.Property(e => e.Attvrijelogisch3).HasColumnName("attvrijelogisch3");

                entity.Property(e => e.Attvrijelogisch4).HasColumnName("attvrijelogisch4");

                entity.Property(e => e.Attvrijelogisch5).HasColumnName("attvrijelogisch5");

                entity.Property(e => e.Attvrijememo1)
                    .HasColumnName("attvrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo2)
                    .HasColumnName("attvrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo3)
                    .HasColumnName("attvrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo4)
                    .HasColumnName("attvrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijememo5)
                    .HasColumnName("attvrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Attvrijeopzoek1).HasColumnName("attvrijeopzoek1");

                entity.Property(e => e.Attvrijeopzoek2).HasColumnName("attvrijeopzoek2");

                entity.Property(e => e.Attvrijeopzoek3).HasColumnName("attvrijeopzoek3");

                entity.Property(e => e.Attvrijeopzoek4).HasColumnName("attvrijeopzoek4");

                entity.Property(e => e.Attvrijeopzoek5).HasColumnName("attvrijeopzoek5");

                entity.Property(e => e.Attvrijetekst1)
                    .IsRequired()
                    .HasColumnName("attvrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst2)
                    .IsRequired()
                    .HasColumnName("attvrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst3)
                    .IsRequired()
                    .HasColumnName("attvrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst4)
                    .IsRequired()
                    .HasColumnName("attvrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Attvrijetekst5)
                    .IsRequired()
                    .HasColumnName("attvrijetekst5")
                    .HasMaxLength(100);

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Dataanmk)
                    .HasColumnName("dataanmk")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datwijzig)
                    .HasColumnName("datwijzig")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importdate)
                    .HasColumnName("importdate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importid)
                    .IsRequired()
                    .HasColumnName("importid");

                entity.Property(e => e.Importtype).HasColumnName("importtype");

                entity.Property(e => e.Parentid).HasColumnName("parentid");

                entity.Property(e => e.Uidaanmk).HasColumnName("uidaanmk");

                entity.Property(e => e.Uidwijzig).HasColumnName("uidwijzig");

                entity.Property(e => e.Vrijedatum1)
                    .HasColumnName("vrijedatum1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum2)
                    .HasColumnName("vrijedatum2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum3)
                    .HasColumnName("vrijedatum3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum4)
                    .HasColumnName("vrijedatum4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijedatum5)
                    .HasColumnName("vrijedatum5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vrijegetal1).HasColumnName("vrijegetal1");

                entity.Property(e => e.Vrijegetal2).HasColumnName("vrijegetal2");

                entity.Property(e => e.Vrijegetal3).HasColumnName("vrijegetal3");

                entity.Property(e => e.Vrijegetal4).HasColumnName("vrijegetal4");

                entity.Property(e => e.Vrijegetal5).HasColumnName("vrijegetal5");

                entity.Property(e => e.Vrijelogisch1).HasColumnName("vrijelogisch1");

                entity.Property(e => e.Vrijelogisch2).HasColumnName("vrijelogisch2");

                entity.Property(e => e.Vrijelogisch3).HasColumnName("vrijelogisch3");

                entity.Property(e => e.Vrijelogisch4).HasColumnName("vrijelogisch4");

                entity.Property(e => e.Vrijelogisch5).HasColumnName("vrijelogisch5");

                entity.Property(e => e.Vrijememo1)
                    .HasColumnName("vrijememo1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo2)
                    .HasColumnName("vrijememo2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo3)
                    .HasColumnName("vrijememo3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo4)
                    .HasColumnName("vrijememo4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijememo5)
                    .HasColumnName("vrijememo5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Vrijeopzoek1).HasColumnName("vrijeopzoek1");

                entity.Property(e => e.Vrijeopzoek2).HasColumnName("vrijeopzoek2");

                entity.Property(e => e.Vrijeopzoek3).HasColumnName("vrijeopzoek3");

                entity.Property(e => e.Vrijeopzoek4).HasColumnName("vrijeopzoek4");

                entity.Property(e => e.Vrijeopzoek5).HasColumnName("vrijeopzoek5");

                entity.Property(e => e.Vrijetekst1)
                    .IsRequired()
                    .HasColumnName("vrijetekst1")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst2)
                    .IsRequired()
                    .HasColumnName("vrijetekst2")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst3)
                    .IsRequired()
                    .HasColumnName("vrijetekst3")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst4)
                    .IsRequired()
                    .HasColumnName("vrijetekst4")
                    .HasMaxLength(100);

                entity.Property(e => e.Vrijetekst5)
                    .IsRequired()
                    .HasColumnName("vrijetekst5")
                    .HasMaxLength(100);

                entity.HasOne(d => d.Attvrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij5objectOptionalgridAttvrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek1_vrij5object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij5objectOptionalgridAttvrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek2_vrij5object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij5objectOptionalgridAttvrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek3_vrij5object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij5objectOptionalgridAttvrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek4_vrij5object__optionalgrid");

                entity.HasOne(d => d.Attvrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij5objectOptionalgridAttvrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Attvrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_attvrijeopzoek5_vrij5object__optionalgrid");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.Vrij5objectOptionalgrid)
                    .HasForeignKey(d => d.Parentid)
                    .HasConstraintName("fk_vrij5object_parentid_vrij5object__optionalgrid");

                entity.HasOne(d => d.UidaanmkNavigation)
                    .WithMany(p => p.Vrij5objectOptionalgridUidaanmkNavigation)
                    .HasForeignKey(d => d.Uidaanmk)
                    .HasConstraintName("fk_gebruiker_uidaanmk_vrij5object__optionalgrid");

                entity.HasOne(d => d.UidwijzigNavigation)
                    .WithMany(p => p.Vrij5objectOptionalgridUidwijzigNavigation)
                    .HasForeignKey(d => d.Uidwijzig)
                    .HasConstraintName("fk_gebruiker_uidwijzig_vrij5object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek1Navigation)
                    .WithMany(p => p.Vrij5objectOptionalgridVrijeopzoek1Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek1)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek1_vrij5object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek2Navigation)
                    .WithMany(p => p.Vrij5objectOptionalgridVrijeopzoek2Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek2)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek2_vrij5object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek3Navigation)
                    .WithMany(p => p.Vrij5objectOptionalgridVrijeopzoek3Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek3)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek3_vrij5object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek4Navigation)
                    .WithMany(p => p.Vrij5objectOptionalgridVrijeopzoek4Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek4)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek4_vrij5object__optionalgrid");

                entity.HasOne(d => d.Vrijeopzoek5Navigation)
                    .WithMany(p => p.Vrij5objectOptionalgridVrijeopzoek5Navigation)
                    .HasForeignKey(d => d.Vrijeopzoek5)
                    .HasConstraintName("fk_vrijeopzoekvelden_vrijeopzoek5_vrij5object__optionalgrid");
            });

            modelBuilder.Entity<Vrijeopzoekvelden>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("vrijeopzoekvelden");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_vrijeopzoekvelden_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_vrijeopzoekvelden_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_vrijeopzoekvelden_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasColumnName("code")
                    .HasMaxLength(60);

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Watchlist>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("watchlist");

                entity.HasIndex(e => e.Userid)
                    .HasName("idx_watchlist_userid");

                entity.HasIndex(e => new { e.Userid, e.Cardidentifier })
                    .HasName("uidx_watchlist_userid_cardidentifier")
                    .IsUnique();

                entity.HasIndex(e => new { e.Userid, e.Definitionname })
                    .HasName("idx_watchlist_userid_definitionname");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cardidentifier).HasColumnName("cardidentifier");

                entity.Property(e => e.Definitionname)
                    .IsRequired()
                    .HasColumnName("definitionname")
                    .HasMaxLength(255);

                entity.Property(e => e.Userid).HasColumnName("userid");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Watchlist)
                    .HasForeignKey(d => d.Userid)
                    .HasConstraintName("fk_gebruiker_userid_watchlist");
            });

            modelBuilder.Entity<Wbaanvraagtype>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("wbaanvraagtype");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_wbaanvraagtype_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_wbaanvraagtype_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_wbaanvraagtype_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Wbvergadersoort>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("wbvergadersoort");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_wbvergadersoort_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_wbvergadersoort_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_wbvergadersoort_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Wbvergaderstatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("wbvergaderstatus");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_wbvergaderstatus_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_wbvergaderstatus_naam");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(30);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Werkdag>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("werkdag");

                entity.HasIndex(e => e.Datum)
                    .HasName("idx_werkdag_datum");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Datum)
                    .HasColumnName("datum")
                    .HasColumnType("datetime");

                entity.Property(e => e.Waarde).HasColumnName("waarde");
            });

            modelBuilder.Entity<WijzigingImpact>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("wijziging_impact");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_wijziging_impact_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_wijziging_impact_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_wijziging_impact_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.Rang).HasColumnName("rang");
            });

            modelBuilder.Entity<Wijzigingstatus>(entity =>
            {
                entity.HasKey(e => e.Unid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("wijzigingstatus");

                entity.HasIndex(e => e.Archief)
                    .HasName("idx_wijzigingstatus_archief");

                entity.HasIndex(e => e.Naam)
                    .HasName("idx_wijzigingstatus_naam");

                entity.HasIndex(e => e.Rang)
                    .HasName("idx_wijzigingstatus_rang");

                entity.Property(e => e.Unid)
                    .HasColumnName("unid")
                    .ValueGeneratedNever();

                entity.Property(e => e.Archief).HasColumnName("archief");

                entity.Property(e => e.Bespokememo)
                    .HasColumnName("bespokememo")
                    .HasColumnType("ntext");

                entity.Property(e => e.ExtensivechangeState).HasColumnName("extensivechange_state");

                entity.Property(e => e.Naam)
                    .IsRequired()
                    .HasColumnName("naam")
                    .HasMaxLength(100);

                entity.Property(e => e.PreliminaryState).HasColumnName("preliminary_state");

                entity.Property(e => e.Rang).HasColumnName("rang");

                entity.Property(e => e.RfcState).HasColumnName("rfc_state");

                entity.Property(e => e.SimplechangeState).HasColumnName("simplechange_state");

                entity.Property(e => e.VersionState).HasColumnName("version_state");
            });
        }
    }
}
